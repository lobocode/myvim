!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
"_ddgg	bundle/delimitMate/autoload/delimitMateTests.vim	/^	normal "_ddgg$/;"	m
%	bundle/matchit.zip/plugin/matchit.vim	/^nnoremap <silent> %  :<C-U>call <SID>Match_wrapper('',1,'n') <CR>$/;"	m
%	bundle/matchit.zip/plugin/matchit.vim	/^onoremap <silent> %  v:<C-U>call <SID>Match_wrapper('',1,'o') <CR>$/;"	m
%	bundle/matchit.zip/plugin/matchit.vim	/^vnoremap <silent> %  :<C-U>call <SID>Match_wrapper('',1,'v') <CR>m'gv``$/;"	m
.align 	bundle/vim-css3-syntax/test/test.css	/^.align {$/;"	c
.animations 	bundle/vim-css3-syntax/test/test.css	/^.animations {$/;"	c
.background 	bundle/vim-css3-syntax/test/test.css	/^.background {$/;"	c
.box 	bundle/vim-css3-syntax/test/test.css	/^.box {$/;"	c
.break 	bundle/vim-css3-syntax/test/test.css	/^.break {$/;"	c
.cascade 	bundle/vim-css3-syntax/test/test.css	/^.cascade {$/;"	c
.colors 	bundle/vim-css3-syntax/test/test.css	/^.colors {$/;"	c
.compositing 	bundle/vim-css3-syntax/test/test.css	/^.compositing {$/;"	c
.conditional 	bundle/vim-css3-syntax/test/test.css	/^  .conditional {$/;"	c
.content 	bundle/vim-css3-syntax/test/test.css	/^.content {$/;"	c
.display 	bundle/vim-css3-syntax/test/test.css	/^.display {$/;"	c
.exclusions 	bundle/vim-css3-syntax/test/test.css	/^.exclusions {$/;"	c
.flexbox 	bundle/vim-css3-syntax/test/test.css	/^.flexbox {$/;"	c
.fonts 	bundle/vim-css3-syntax/test/test.css	/^.fonts {$/;"	c
.foo	bundle/vim-css3-syntax/test/test.css	/^.scping:host(.foo),$/;"	c
.gcpm::footnote-call	bundle/vim-css3-syntax/test/test.css	/^.gcpm::footnote-call,$/;"	c
.gcpm::footnote-marker 	bundle/vim-css3-syntax/test/test.css	/^.gcpm::footnote-marker {$/;"	c
.grid-layout 	bundle/vim-css3-syntax/test/test.css	/^.grid-layout {$/;"	c
.html5-elements	bundle/vim-css3-syntax/test/test.css	/^.html5-elements,$/;"	c
.images 	bundle/vim-css3-syntax/test/test.css	/^.images {$/;"	c
.inline 	bundle/vim-css3-syntax/test/test.css	/^.inline {$/;"	c
.layout::slot	bundle/vim-css3-syntax/test/test.css	/^.layout::slot(b) {$/;"	c
.line-grid 	bundle/vim-css3-syntax/test/test.css	/^.line-grid {$/;"	c
.linebox 	bundle/vim-css3-syntax/test/test.css	/^.linebox {$/;"	c
.lists::marker 	bundle/vim-css3-syntax/test/test.css	/^.lists::marker {$/;"	c
.masking 	bundle/vim-css3-syntax/test/test.css	/^.masking {$/;"	c
.multicol 	bundle/vim-css3-syntax/test/test.css	/^.multicol {$/;"	c
.overflow 	bundle/vim-css3-syntax/test/test.css	/^.overflow {$/;"	c
.page 	bundle/vim-css3-syntax/test/test.css	/^.page {$/;"	c
.positioning 	bundle/vim-css3-syntax/test/test.css	/^.positioning {$/;"	c
.preslev 	bundle/vim-css3-syntax/test/test.css	/^.preslev {$/;"	c
.pseudo::grammer-error	bundle/vim-css3-syntax/test/test.css	/^.pseudo::grammer-error,$/;"	c
.pseudo::selection	bundle/vim-css3-syntax/test/test.css	/^.pseudo::selection,$/;"	c
.pseudo::spelling-error	bundle/vim-css3-syntax/test/test.css	/^.pseudo::spelling-error,$/;"	c
.pseuod::placeholder 	bundle/vim-css3-syntax/test/test.css	/^.pseuod::placeholder {$/;"	c
.regions:region 	bundle/vim-css3-syntax/test/test.css	/^.regions:region {$/;"	c
.ruby 	bundle/vim-css3-syntax/test/test.css	/^.ruby {$/;"	c
.scoping 	bundle/vim-css3-syntax/test/test.css	/^.scoping \/deep\/ span {$/;"	c
.scoping 	bundle/vim-css3-syntax/test/test.css	/^@scope .scoping {$/;"	c
.scoping::content	bundle/vim-css3-syntax/test/test.css	/^.scoping::content,$/;"	c
.scoping::shadow	bundle/vim-css3-syntax/test/test.css	/^.scoping::shadow,$/;"	c
.scoping:host	bundle/vim-css3-syntax/test/test.css	/^.scoping:host,$/;"	c
.scoping:host-context	bundle/vim-css3-syntax/test/test.css	/^.scoping:host-context,$/;"	c
.scoping:scope-context div	bundle/vim-css3-syntax/test/test.css	/^.scoping:scope-context div,$/;"	c
.scping:host	bundle/vim-css3-syntax/test/test.css	/^.scping:host(.foo),$/;"	c
.selectors3:checked	bundle/vim-css3-syntax/test/test.css	/^.selectors3:checked,$/;"	c
.selectors3:disabled	bundle/vim-css3-syntax/test/test.css	/^.selectors3:disabled,$/;"	c
.selectors3:empty	bundle/vim-css3-syntax/test/test.css	/^.selectors3:empty,$/;"	c
.selectors3:enabled	bundle/vim-css3-syntax/test/test.css	/^.selectors3:enabled,$/;"	c
.selectors3:first-of-type	bundle/vim-css3-syntax/test/test.css	/^.selectors3:first-of-type,$/;"	c
.selectors3:indeterminate	bundle/vim-css3-syntax/test/test.css	/^.selectors3:indeterminate,$/;"	c
.selectors3:last-child	bundle/vim-css3-syntax/test/test.css	/^.selectors3:last-child,$/;"	c
.selectors3:last-of-type	bundle/vim-css3-syntax/test/test.css	/^.selectors3:last-of-type,$/;"	c
.selectors3:matches	bundle/vim-css3-syntax/test/test.css	/^.selectors3:matches(:hover, :focus),$/;"	c
.selectors3:not	bundle/vim-css3-syntax/test/test.css	/^.selectors3:not([DISABLED]) {$/;"	c
.selectors3:nth-child	bundle/vim-css3-syntax/test/test.css	/^.selectors3:nth-child(2n+1),$/;"	c
.selectors3:nth-last-child	bundle/vim-css3-syntax/test/test.css	/^.selectors3:nth-last-child(-n+2),$/;"	c
.selectors3:nth-last-of-type	bundle/vim-css3-syntax/test/test.css	/^.selectors3:nth-last-of-type(n+2),$/;"	c
.selectors3:nth-of-type	bundle/vim-css3-syntax/test/test.css	/^.selectors3:nth-of-type(2n+1),$/;"	c
.selectors3:only-child	bundle/vim-css3-syntax/test/test.css	/^.selectors3:only-child,$/;"	c
.selectors3:only-of-type	bundle/vim-css3-syntax/test/test.css	/^.selectors3:only-of-type,$/;"	c
.selectors3:root	bundle/vim-css3-syntax/test/test.css	/^.selectors3:root,$/;"	c
.selectors3:target	bundle/vim-css3-syntax/test/test.css	/^.selectors3:target,$/;"	c
.selectors4 	bundle/vim-css3-syntax/test/test.css	/^.selectors4 | h1,$/;"	c
.selectors4:active-drop-target	bundle/vim-css3-syntax/test/test.css	/^.selectors4:active-drop-target,$/;"	c
.selectors4:any-link	bundle/vim-css3-syntax/test/test.css	/^.selectors4:any-link,$/;"	c
.selectors4:blank	bundle/vim-css3-syntax/test/test.css	/^.selectors4:blank,$/;"	c
.selectors4:column	bundle/vim-css3-syntax/test/test.css	/^.selectors4:column(p, li, dt, dd) {$/;"	c
.selectors4:current	bundle/vim-css3-syntax/test/test.css	/^.selectors4:current(p, li, dt, dd),$/;"	c
.selectors4:current	bundle/vim-css3-syntax/test/test.css	/^.selectors4:current,$/;"	c
.selectors4:default	bundle/vim-css3-syntax/test/test.css	/^.selectors4:default,$/;"	c
.selectors4:dir	bundle/vim-css3-syntax/test/test.css	/^.selectors4:dir(ltr),$/;"	c
.selectors4:future	bundle/vim-css3-syntax/test/test.css	/^.selectors4:future,$/;"	c
.selectors4:in-range	bundle/vim-css3-syntax/test/test.css	/^.selectors4:in-range,$/;"	c
.selectors4:invalid	bundle/vim-css3-syntax/test/test.css	/^.selectors4:invalid,$/;"	c
.selectors4:invalid-drop-target	bundle/vim-css3-syntax/test/test.css	/^.selectors4:invalid-drop-target,$/;"	c
.selectors4:local-link	bundle/vim-css3-syntax/test/test.css	/^.selectors4:local-link(0),$/;"	c
.selectors4:local-link	bundle/vim-css3-syntax/test/test.css	/^.selectors4:local-link,$/;"	c
.selectors4:nth-column	bundle/vim-css3-syntax/test/test.css	/^.selectors4:nth-column(2n+1),$/;"	c
.selectors4:nth-last-column	bundle/vim-css3-syntax/test/test.css	/^.selectors4:nth-last-column(-n+2),$/;"	c
.selectors4:nth-last-match	bundle/vim-css3-syntax/test/test.css	/^.selectors4:nth-last-match(-n+2),$/;"	c
.selectors4:nth-match	bundle/vim-css3-syntax/test/test.css	/^.selectors4:nth-match(2n+1),$/;"	c
.selectors4:optional	bundle/vim-css3-syntax/test/test.css	/^.selectors4:optional,$/;"	c
.selectors4:out-of-range	bundle/vim-css3-syntax/test/test.css	/^.selectors4:out-of-range,$/;"	c
.selectors4:past	bundle/vim-css3-syntax/test/test.css	/^.selectors4:past,$/;"	c
.selectors4:placeholder-shown	bundle/vim-css3-syntax/test/test.css	/^.selectors4:placeholder-shown,$/;"	c
.selectors4:read-only	bundle/vim-css3-syntax/test/test.css	/^.selectors4:read-only,$/;"	c
.selectors4:read-write	bundle/vim-css3-syntax/test/test.css	/^.selectors4:read-write,$/;"	c
.selectors4:required	bundle/vim-css3-syntax/test/test.css	/^.selectors4:required,$/;"	c
.selectors4:scope	bundle/vim-css3-syntax/test/test.css	/^.selectors4:scope,$/;"	c
.selectors4:user-error	bundle/vim-css3-syntax/test/test.css	/^.selectors4:user-error,$/;"	c
.selectors4:valid	bundle/vim-css3-syntax/test/test.css	/^.selectors4:valid,$/;"	c
.selectors4:valid-drop-target	bundle/vim-css3-syntax/test/test.css	/^.selectors4:valid-drop-target,$/;"	c
.shapes 	bundle/vim-css3-syntax/test/test.css	/^.shapes {$/;"	c
.sizing 	bundle/vim-css3-syntax/test/test.css	/^.sizing {$/;"	c
.speech 	bundle/vim-css3-syntax/test/test.css	/^.speech {$/;"	c
.text 	bundle/vim-css3-syntax/test/test.css	/^.text {$/;"	c
.text-decor-3 	bundle/vim-css3-syntax/test/test.css	/^.text-decor-3 {$/;"	c
.transforms 	bundle/vim-css3-syntax/test/test.css	/^.transforms {$/;"	c
.transitions 	bundle/vim-css3-syntax/test/test.css	/^.transitions {$/;"	c
.ui 	bundle/vim-css3-syntax/test/test.css	/^.ui {$/;"	c
.values 	bundle/vim-css3-syntax/test/test.css	/^.values {$/;"	c
.variables 	bundle/vim-css3-syntax/test/test.css	/^.variables {$/;"	c
.will-change 	bundle/vim-css3-syntax/test/test.css	/^.will-change {$/;"	c
.writing-modes 	bundle/vim-css3-syntax/test/test.css	/^.writing-modes {$/;"	c
0	bundle/vim-css3-syntax/test/test.css	/^.selectors4:local-link(0),$/;"	s
2n+1	bundle/vim-css3-syntax/test/test.css	/^.selectors3:nth-child(2n+1),$/;"	s
2n+1	bundle/vim-css3-syntax/test/test.css	/^.selectors3:nth-of-type(2n+1),$/;"	s
2n+1	bundle/vim-css3-syntax/test/test.css	/^.selectors4:nth-column(2n+1),$/;"	s
2n+1	bundle/vim-css3-syntax/test/test.css	/^.selectors4:nth-match(2n+1),$/;"	s
<Leader>t	bundle/TaskList.vim/plugin/tasklist.vim	/^    map <unique> <Leader>t <Plug>TaskList$/;"	m
<LocalLeader>b	bundle/php_getset.vim/ftplugin/php_getset.vim	/^    map <unique> <buffer> <LocalLeader>b <Plug>JavagetsetInsertBothGetterSetter$/;"	m
<LocalLeader>g	bundle/php_getset.vim/ftplugin/php_getset.vim	/^    map <unique> <buffer> <LocalLeader>g <Plug>JavagetsetInsertGetterOnly$/;"	m
<LocalLeader>p	bundle/php_getset.vim/ftplugin/php_getset.vim	/^    map <unique> <buffer> <LocalLeader>p <Plug>JavagetsetInsertGetterSetter$/;"	m
<LocalLeader>s	bundle/php_getset.vim/ftplugin/php_getset.vim	/^    map <unique> <buffer> <LocalLeader>s <Plug>JavagetsetInsertSetterOnly$/;"	m
<Plug>AfterPasta	bundle/vim-pasta/plugin/pasta.vim	/^nnoremap <silent> <Plug>AfterPasta :<C-U>call <SID>NormalPasta('p', 'o')<CR>$/;"	m
<Plug>BeforePasta	bundle/vim-pasta/plugin/pasta.vim	/^nnoremap <silent> <Plug>BeforePasta :<C-U>call <SID>NormalPasta('P', 'O')<CR>$/;"	m
<Plug>TaskList	bundle/TaskList.vim/plugin/tasklist.vim	/^nnoremap <unique> <script> <Plug>TaskList :TaskList<CR>$/;"	m
<SID>xx	bundle/vim-rails/autoload/rails.vim	/^map <SID>xx <SID>xx$/;"	m
<c-r><tab>	bundle/snipmate.vim/after/plugin/snipMate.vim	/^ino <silent> <c-r><tab> <c-r>=ShowAvailableSnips()<cr>$/;"	m
<s-tab>	bundle/snipmate.vim/after/plugin/snipMate.vim	/^ino <silent> <s-tab> <c-r>=BackwardsSnippet()<cr>$/;"	m
<tab>	bundle/snipmate.vim/after/plugin/snipMate.vim	/^ino <silent> <tab> <c-r>=TriggerSnippet()<cr>$/;"	m
AUTOL	bundle/delimitMate/Makefile	/^AUTOL=autoload\/$(PLUGIN).vim$/;"	m
Abbrev	bundle/vim-rails/autoload/rails.vim	/^function! s:Abbrev(bang,...) abort$/;"	f
AcceptSelection	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:AcceptSelection(mode)$/;"	f
Ack	bundle/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=file Ack           call ack#Ack('grep<bang>', <q-args>)$/;"	c
AckAdd	bundle/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=file AckAdd        call ack#Ack('grepadd<bang>', <q-args>)$/;"	c
AckFile	bundle/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=file AckFile       call ack#Ack('grep<bang> -g', <q-args>)$/;"	c
AckFromSearch	bundle/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=file AckFromSearch call ack#AckFromSearch('grep<bang>', <q-args>)$/;"	c
AckHelp	bundle/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=help AckHelp       call ack#AckHelp('grep<bang>', <q-args>)$/;"	c
AckWindow	bundle/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=help AckWindow     call ack#AckWindow('grep<bang>', <q-args>)$/;"	c
AddBracketExpand	bundle/vim-rails/autoload/rails.vim	/^function! s:AddBracketExpand(abbr,expn)$/;"	f
AddColonExpand	bundle/vim-rails/autoload/rails.vim	/^function! s:AddColonExpand(abbr,expn)$/;"	f
AddLmIfMathH	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:AddLmIfMathH(compiling_info) " {{{2$/;"	f
AddParenExpand	bundle/vim-rails/autoload/rails.vim	/^function! s:AddParenExpand(abbr,expn,...)$/;"	f
AddScopedTags	bundle/tagbar/autoload/tagbar.vim	/^function! s:AddScopedTags(tags, processedtags, parent, depth,$/;"	f
AddSelectiveExpand	bundle/vim-rails/autoload/rails.vim	/^function! s:AddSelectiveExpand(abbr,pat,expn,...)$/;"	f
AddTabExpand	bundle/vim-rails/autoload/rails.vim	/^function! s:AddTabExpand(abbr,expn)$/;"	f
AddToClasspath	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:AddToClasspath(classpath,path)$/;"	f
AirlineRefresh	bundle/vim-airline/plugin/airline.vim	/^command! AirlineRefresh call airline#load_theme() | call airline#update_statusline()$/;"	c
AirlineTheme	bundle/vim-airline/plugin/airline.vim	/^command! -nargs=? -complete=customlist,<sid>get_airline_themes AirlineTheme call <sid>airline_theme(<f-args>)$/;"	c
AirlineToggle	bundle/vim-airline/plugin/airline.vim	/^command! AirlineToggle call <sid>airline_toggle()$/;"	c
AirlineToggleWhitespace	bundle/vim-airline/plugin/airline.vim	/^command! AirlineToggleWhitespace call airline#extensions#whitespace#toggle()$/;"	c
AlreadyExistsGetter	bundle/php_getset.vim/ftplugin/php_getset.vim	/^  function s:AlreadyExistsGetter()$/;"	f
AlreadyExistsSetter	bundle/php_getset.vim/ftplugin/php_getset.vim	/^  function s:AlreadyExistsSetter()$/;"	f
Alternate	bundle/vim-rails/autoload/rails.vim	/^function! s:Alternate(cmd,line1,line2,count,...)$/;"	f
ApplyMappings	bundle/ack.vim/autoload/ack.vim	/^function! s:ApplyMappings() "{{{$/;"	f
Args	bundle/syntastic/syntax_checkers/html/tidy.vim	/^function s:Args()$/;"	f
Args	bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^function s:Args()$/;"	f
AskUser	bundle/php_getset.vim/ftplugin/php_getset.vim	/^  function s:AskUser()$/;"	f
AssembleDefaultTagDictionary	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^function! s:AssembleDefaultTagDictionary()$/;"	f
AssembleTagList	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^function! s:AssembleTagList(taglist)$/;"	f
AutoClose	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:AutoClose() "{{{$/;"	f
AutoUpdate	bundle/tagbar/autoload/tagbar.vim	/^function! s:AutoUpdate(fname, force) abort$/;"	f
BackwardsSnippet	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! BackwardsSnippet()$/;"	f
BaseTag.New	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.New(name) abort dict$/;"	f
BaseTag._getPrefix	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag._getPrefix() abort dict$/;"	f
BaseTag._init	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag._init(name) abort dict$/;"	f
BaseTag.closeFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.closeFold() abort dict$/;"	f
BaseTag.getClosedParentTline	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.getClosedParentTline() abort dict$/;"	f
BaseTag.getPrototype	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.getPrototype(short) abort dict$/;"	f
BaseTag.initFoldState	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.initFoldState() abort dict$/;"	f
BaseTag.isFoldable	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isFoldable() abort dict$/;"	f
BaseTag.isFolded	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isFolded() abort dict$/;"	f
BaseTag.isKindheader	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isKindheader() abort dict$/;"	f
BaseTag.isNormalTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isNormalTag() abort dict$/;"	f
BaseTag.isPseudoTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isPseudoTag() abort dict$/;"	f
BaseTag.openFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.openFold() abort dict$/;"	f
BaseTag.openParents	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.openParents() abort dict$/;"	f
BaseTag.setFolded	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.setFolded(folded) abort dict$/;"	f
Blame	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Blame(bang,line1,line2,count,args) abort$/;"	f
BlameCommit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameCommit(cmd) abort$/;"	f
BlameJump	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameJump(suffix) abort$/;"	f
BlameSyntax	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameSyntax() abort$/;"	f
BlockGetCommentRx	bundle/tComment/autoload/tcomment.vim	/^function! s:BlockGetCommentRx(cdef)$/;"	f
BlockGetCommentString	bundle/tComment/autoload/tcomment.vim	/^function! s:BlockGetCommentString(cdef)$/;"	f
BlockGetMiddleString	bundle/tComment/autoload/tcomment.vim	/^function! s:BlockGetMiddleString(cdef)$/;"	f
Bookmark.AddBookmark	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.AddBookmark(name, path)$/;"	f
Bookmark.BookmarkExistsFor	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkExistsFor(name)$/;"	f
Bookmark.BookmarkFor	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkFor(name)$/;"	f
Bookmark.BookmarkNames	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkNames()$/;"	f
Bookmark.Bookmarks	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Bookmarks()$/;"	f
Bookmark.CacheBookmarks	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CacheBookmarks(silent)$/;"	f
Bookmark.ClearAll	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ClearAll()$/;"	f
Bookmark.GetNodeForName	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetNodeForName(name, searchFromAbsoluteRoot)$/;"	f
Bookmark.GetSelected	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetSelected()$/;"	f
Bookmark.InvalidBookmarks	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.InvalidBookmarks()$/;"	f
Bookmark.New	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.New(name, path)$/;"	f
Bookmark.Sort	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Sort()$/;"	f
Bookmark.ToRoot	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ToRoot(name)$/;"	f
Bookmark.Write	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Write()$/;"	f
Bookmark.activate	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.activate(...)$/;"	f
Bookmark.compareTo	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.compareTo(otherbookmark)$/;"	f
Bookmark.delete	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.delete()$/;"	f
Bookmark.getNode	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.getNode(searchFromAbsoluteRoot)$/;"	f
Bookmark.mustExist	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.mustExist()$/;"	f
Bookmark.open	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.open(...)$/;"	f
Bookmark.openInNewTab	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.openInNewTab(options)$/;"	f
Bookmark.setPath	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.setPath(path)$/;"	f
Bookmark.str	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.str()$/;"	f
Bookmark.toRoot	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.toRoot()$/;"	f
Bookmark.validate	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.validate()$/;"	f
Browse	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Browse(bang,line1,count,...) abort$/;"	f
BufAbbreviations	bundle/vim-rails/autoload/rails.vim	/^function! s:BufAbbreviations()$/;"	f
BufCommands	bundle/vim-rails/autoload/rails.vim	/^function! s:BufCommands()$/;"	f
BufDatabase	bundle/vim-rails/autoload/rails.vim	/^function! s:BufDatabase(level, ...)$/;"	f
BufMappings	bundle/vim-rails/autoload/rails.vim	/^function! s:BufMappings()$/;"	f
BufNavCommands	bundle/vim-rails/autoload/rails.vim	/^function! s:BufNavCommands()$/;"	f
BufProjectionCommands	bundle/vim-rails/autoload/rails.vim	/^function! s:BufProjectionCommands()$/;"	f
BufReadIndex	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndex() abort$/;"	f
BufReadIndexFile	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndexFile() abort$/;"	f
BufReadObject	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadObject() abort$/;"	f
BufScriptWrappers	bundle/vim-rails/autoload/rails.vim	/^function! s:BufScriptWrappers()$/;"	f
BufWinLeaveCleanup	bundle/syntastic/plugin/syntastic.vim	/^function! s:BufWinLeaveCleanup()$/;"	f
BufWriteIndexFile	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufWriteIndexFile() abort$/;"	f
BuildPrompt	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:BuildPrompt(upd)$/;"	f
BuildTabStops	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:BuildTabStops(snip, lnum, col, indent)$/;"	f
CacheErrors	bundle/syntastic/plugin/syntastic.vim	/^function! s:CacheErrors(...)$/;"	f
CheckExCtagsVersion	bundle/tagbar/autoload/tagbar.vim	/^function! s:CheckExCtagsVersion(output) abort$/;"	f
CheckFTCtags	bundle/tagbar/autoload/tagbar.vim	/^function! s:CheckFTCtags(bin, ftype) abort$/;"	f
CheckForExCtags	bundle/tagbar/autoload/tagbar.vim	/^function! s:CheckForExCtags(silent) abort$/;"	f
CheckForUpdate	bundle/TaskList.vim/plugin/tasklist.vim	/^function! s:CheckForUpdate()$/;"	f
CheckMouseClick	bundle/tagbar/autoload/tagbar.vim	/^function! s:CheckMouseClick() abort$/;"	f
Choose	bundle/matchit.zip/plugin/matchit.vim	/^fun! s:Choose(patterns, string, comma, branch, prefix, suffix, ...)$/;"	f
ChooseSnippet	bundle/snipmate.vim/plugin/snipMate.vim	/^fun s:ChooseSnippet(scope, trigger)$/;"	f
CleanUp	bundle/matchit.zip/plugin/matchit.vim	/^fun! s:CleanUp(options, mode, startline, startcol, ...)$/;"	f
ClearAllCtrlPCaches	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar ClearAllCtrlPCaches cal ctrlp#clra()$/;"	c
ClearCache	bundle/syntastic/plugin/syntastic.vim	/^function! s:ClearCache()$/;"	f
ClearCtrlPCache	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar ClearCtrlPCache     cal ctrlp#clr()$/;"	c
Close	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Close()$/;"	f
Close	bundle/snipmate.vim/ftplugin/html_snip_helper.vim	/^fun! Close()$/;"	f
CloseFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:CloseFold() abort$/;"	f
CloseWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:CloseWindow() abort$/;"	f
CommandEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:CommandEdit(cmd, name, projections, ...)$/;"	f
CommandList	bundle/vim-rails/autoload/rails.vim	/^function! s:CommandList(A,L,P)$/;"	f
CommentBlock	bundle/tComment/autoload/tcomment.vim	/^function! s:CommentBlock(beg, end, uncomment, checkRx, cdef, indentStr)$/;"	f
CommentDef	bundle/tComment/autoload/tcomment.vim	/^function! s:CommentDef(beg, end, checkRx, commentMode, cstart, cend)$/;"	f
CommentMode	bundle/tComment/autoload/tcomment.vim	/^function! s:CommentMode(commentMode, newmode) "{{{3$/;"	f
Commit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Commit(args, ...) abort$/;"	f
CommitComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:CommitComplete(A,L,P) abort$/;"	f
CompareByKind	bundle/tagbar/autoload/tagbar.vim	/^function! s:CompareByKind(tag1, tag2) abort$/;"	f
CompareByLine	bundle/tagbar/autoload/tagbar.vim	/^function! s:CompareByLine(tag1, tag2) abort$/;"	f
CompareCompilerPriority	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:CompareCompilerPriority(compiler1, compiler2) " {{{1$/;"	f
CompileInternal	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:CompileInternal(arg_list, async) " compile only {{{1$/;"	f
CompileRunInternal	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:CompileRunInternal(comp_param, async) " {{{1$/;"	f
CompleteCheckerName	bundle/syntastic/plugin/syntastic.vim	/^function! s:CompleteCheckerName(argLead, cmdLine, cursorPos)$/;"	f
Complete_cd	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_cd(ArgLead, CmdLine, CursorPos)$/;"	f
Complete_console	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_console(A,L,P)$/;"	f
Complete_destroy	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_destroy(A,L,P)$/;"	f
Complete_edit	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_edit(ArgLead, CmdLine, CursorPos)$/;"	f
Complete_environments	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_environments(...)$/;"	f
Complete_find	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_find(ArgLead, CmdLine, CursorPos)$/;"	f
Complete_generate	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_generate(A,L,P)$/;"	f
Complete_preview	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_preview(A,L,P)$/;"	f
Complete_related	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_related(A,L,P)$/;"	f
Complete_ruby	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_ruby(A,L,P)$/;"	f
Complete_script	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_script(ArgLead, CmdLine, P) abort$/;"	f
Complete_server	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_server(A,L,P)$/;"	f
ConfFlag	bundle/syntastic/syntax_checkers/javascript/jsl.vim	/^function s:ConfFlag()$/;"	f
ConstructFromComments	bundle/tComment/autoload/tcomment.vim	/^function! s:ConstructFromComments(commentMode)$/;"	f
CorrectFocusOnStartup	bundle/tagbar/autoload/tagbar.vim	/^function! s:CorrectFocusOnStartup() abort$/;"	f
Count	bundle/matchit.zip/plugin/matchit.vim	/^fun! s:Count(string, pattern, ...)$/;"	f
Count	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:Count(haystack, needle)$/;"	f
CreateAutocommands	bundle/tagbar/autoload/tagbar.vim	/^function! s:CreateAutocommands() abort$/;"	f
CreateNewFile	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:CreateNewFile(...)$/;"	f
CreatePseudoTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:CreatePseudoTag(name, parent, scope, typeinfo, fileinfo) abort$/;"	f
Creator.BufNamePrefix	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.BufNamePrefix()$/;"	f
Creator.CreateMirror	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateMirror()$/;"	f
Creator.CreatePrimary	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreatePrimary(name)$/;"	f
Creator.CreateSecondary	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateSecondary(dir)$/;"	f
Creator.New	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.New()$/;"	f
Creator.TogglePrimary	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.TogglePrimary(dir)$/;"	f
Creator._bindMappings	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._bindMappings()$/;"	f
Creator._broadcastInitEvent	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._broadcastInitEvent()$/;"	f
Creator._createTreeWin	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createTreeWin()$/;"	f
Creator._nextBufferName	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferName()$/;"	f
Creator._nextBufferNumber	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferNumber()$/;"	f
Creator._pathForString	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._pathForString(str)$/;"	f
Creator._setCommonBufOptions	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setCommonBufOptions()$/;"	f
Creator._setupStatusline	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setupStatusline()$/;"	f
Creator.createMirror	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createMirror()$/;"	f
Creator.createPrimary	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createPrimary(name)$/;"	f
Creator.createSecondary	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createSecondary(dir)$/;"	f
Creator.togglePrimary	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.togglePrimary(dir)$/;"	f
CtagsErrMsg	bundle/tagbar/autoload/tagbar.vim	/^function! s:CtagsErrMsg(errmsg, infomsg, silent, ...) abort$/;"	f
CtrlP	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlP         cal ctrlp#init(0, { 'dir': <q-args> })$/;"	c
CtrlPAug	bundle/ctrlp.vim/autoload/ctrlp.vim	/^	aug CtrlPAug$/;"	a
CtrlPBookmarkDir	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPBookmarkDir cal ctrlp#init(ctrlp#bookmarkdir#id())$/;"	c
CtrlPBookmarkDirAdd	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlPBookmarkDirAdd$/;"	c
CtrlPBufTag	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=buffer CtrlPBufTag$/;"	c
CtrlPBufTagAll	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPBufTagAll cal ctrlp#init(ctrlp#buffertag#cmd(1))$/;"	c
CtrlPBuffer	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPBuffer   cal ctrlp#init(1)$/;"	c
CtrlPChange	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=buffer CtrlPChange$/;"	c
CtrlPChangeAll	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPChangeAll   cal ctrlp#init(ctrlp#changes#cmd(1))$/;"	c
CtrlPClearAllCaches	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPClearAllCaches cal ctrlp#clra()$/;"	c
CtrlPClearCache	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPClearCache     cal ctrlp#clr()$/;"	c
CtrlPCurFile	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPCurFile cal ctrlp#init(0, { 'mode': 'c' })$/;"	c
CtrlPCurWD	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPCurWD   cal ctrlp#init(0, { 'mode': '' })$/;"	c
CtrlPDir	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlPDir$/;"	c
CtrlPLastMode	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? CtrlPLastMode cal ctrlp#init(-1, { 'args': <q-args> })$/;"	c
CtrlPLine	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPLine      cal ctrlp#init(ctrlp#line#id())$/;"	c
CtrlPMRUFiles	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlPMRUFiles cal ctrlp#init(2, { 'dir': <q-args> })$/;"	c
CtrlPMixed	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPMixed       cal ctrlp#init(ctrlp#mixed#id())$/;"	c
CtrlPQuickfix	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPQuickfix cal ctrlp#init(ctrlp#quickfix#id())$/;"	c
CtrlPRTS	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPRTS       cal ctrlp#init(ctrlp#rtscript#id())$/;"	c
CtrlPRoot	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPRoot    cal ctrlp#init(0, { 'mode': 'r' })$/;"	c
CtrlPTag	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPTag      cal ctrlp#init(ctrlp#tag#id())$/;"	c
CtrlPUndo	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPUndo      cal ctrlp#init(ctrlp#undo#id())$/;"	c
CurrentFiletypes	bundle/syntastic/plugin/syntastic.vim	/^function! s:CurrentFiletypes()$/;"	f
CustomComplete	bundle/vim-rails/autoload/rails.vim	/^function! s:CustomComplete(A,L,P,cmd)$/;"	f
DISABLED	bundle/vim-css3-syntax/test/test.css	/^.selectors3:not([DISABLED]) {$/;"	s
DOC	bundle/delimitMate/Makefile	/^DOC=$(wildcard doc\/*.txt)$/;"	m
DebugParsing	bundle/php_getset.vim/ftplugin/php_getset.vim	/^  function s:DebugParsing(variable)$/;"	f
DefaultValue	bundle/tComment/autoload/tcomment.vim	/^function! s:DefaultValue(option)$/;"	f
DefineSnips	bundle/snipmate.vim/plugin/snipMate.vim	/^fun s:DefineSnips(dir, aliasft, realft)$/;"	f
DelimitMateDo	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:DelimitMateDo(...) "{{{$/;"	f
DelimitMateReload	bundle/delimitMate/plugin/delimitMate.vim	/^command! -bar DelimitMateReload call s:DelimitMateDo(1)$/;"	c
DelimitMateSwitch	bundle/delimitMate/plugin/delimitMate.vim	/^command! -bar DelimitMateSwitch call s:DelimitMateSwitch()$/;"	c
DelimitMateSwitch	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:DelimitMateSwitch() "{{{$/;"	f
DelimitMateTest	bundle/delimitMate/plugin/delimitMate.vim	/^command! -bar DelimitMateTest call s:TestMappingsDo()$/;"	c
DetectCompiler	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:DetectCompiler(lang_name) " {{{1$/;"	f
DetectCompilerGenerally	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:DetectCompilerGenerally(compiling_command) " {{{2$/;"	f
DetectFiletype	bundle/tagbar/autoload/tagbar.vim	/^function! s:DetectFiletype(bufnr) abort$/;"	f
DetectGmake	bundle/SingleCompile/autoload/SingleCompile/templates/make.vim	/^function! s:DetectGmake(not_used_arg)$/;"	f
DetermineAction	bundle/php_getset.vim/ftplugin/php_getset.vim	/^  function s:DetermineAction(flag)$/;"	f
Diff	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Diff(vert,...) abort$/;"	f
DirComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:DirComplete(A,L,P) abort$/;"	f
Dispatch	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Dispatch(bang, args)$/;"	f
Edit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Edit(cmd,bang,...) abort$/;"	f
Edit	bundle/vim-rails/autoload/rails.vim	/^function! s:Edit(count,cmd,...)$/;"	f
EditClasspath	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:EditClasspath()$/;"	f
EditComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:EditComplete(A,L,P) abort$/;"	f
EditRunComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:EditRunComplete(A,L,P) abort$/;"	f
Emmet	bundle/emmet-vim/plugin/emmet.vim	/^  command! -nargs=1 Emmet call emmet#expandAbbr(4, <q-args>)$/;"	c
EmmetInstall	bundle/emmet-vim/plugin/emmet.vim	/^command! -nargs=0 EmmetInstall call <SID>install_plugin(get(g:, 'user_emmet_mode', 'a'), 1)$/;"	c
EmmetUnitTest	bundle/emmet-vim/unittest.vim	/^command! -nargs=* -complete=customlist,<SID>emmet_unittest_complete EmmetUnitTest call s:do_tests(<f-args>)$/;"	c
EncodeCommentPart	bundle/tComment/autoload/tcomment.vim	/^function! s:EncodeCommentPart(string)$/;"	f
EndColRx	bundle/tComment/autoload/tcomment.vim	/^function! s:EndColRx(pos)$/;"	f
EndLineRx	bundle/tComment/autoload/tcomment.vim	/^function! s:EndLineRx(pos)$/;"	f
EndPosRx	bundle/tComment/autoload/tcomment.vim	/^function! s:EndPosRx(mode, line, col)$/;"	f
Errors	bundle/syntastic/plugin/syntastic.vim	/^command! Errors call s:ShowLocList()$/;"	c
EscapeCtagsCmd	bundle/tagbar/autoload/tagbar.vim	/^function! s:EscapeCtagsCmd(ctags_bin, args, ...) abort$/;"	f
Examples	bundle/syntastic/syntax_checkers/perl/efm_perl.pl	/^Examples:$/;"	l
ExecuteCtags	bundle/tagbar/autoload/tagbar.vim	/^function! s:ExecuteCtags(ctags_cmd) abort$/;"	f
ExecuteCtagsOnFile	bundle/tagbar/autoload/tagbar.vim	/^function! s:ExecuteCtagsOnFile(fname, realfname, typeinfo) abort$/;"	f
ExecuteInTree	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:ExecuteInTree(cmd) abort$/;"	f
Exit	bundle/TaskList.vim/plugin/tasklist.vim	/^function! s:Exit(key)$/;"	f
Expand	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:Expand(str, ...) " expand the string{{{2$/;"	f
ExtendCDef	bundle/tComment/autoload/tcomment.vim	/^function! s:ExtendCDef(beg, end, commentMode, cdef, args)$/;"	f
ExtraMakeprgArgs	bundle/syntastic/syntax_checkers/perl/perl.vim	/^function! s:ExtraMakeprgArgs()$/;"	f
ExtraMappings	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:ExtraMappings() "{{{$/;"	f
Extract	bundle/vim-rails/autoload/rails.vim	/^function! s:Extract(bang,...) range abort$/;"	f
ExtractCommentsPart	bundle/tComment/autoload/tcomment.vim	/^function! s:ExtractCommentsPart(key)$/;"	f
ExtractSnips	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! ExtractSnips(dir, ft)$/;"	f
ExtractSnipsFile	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! ExtractSnipsFile(file, ft)$/;"	f
FileInfo.New	bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.New(fname, ftype, typeinfo) abort dict$/;"	f
FileInfo.clearOldFolds	bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.clearOldFolds() abort dict$/;"	f
FileInfo.closeKindFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.closeKindFold(kind) abort dict$/;"	f
FileInfo.openKindFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.openKindFold(kind) abort dict$/;"	f
FileInfo.reset	bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.reset() abort dict$/;"	f
FileInfo.sortTags	bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.sortTags() abort dict$/;"	f
FileRead	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:FileRead() abort$/;"	f
Filename	bundle/snipmate.vim/autoload/snipMate.vim	/^fun! Filename(...)$/;"	f
Filetype	bundle/tComment/autoload/tcomment.vim	/^function! s:Filetype(...) "{{{3$/;"	f
Find	bundle/vim-rails/autoload/rails.vim	/^function! s:Find(count,cmd,...)$/;"	f
FindInParent	bundle/syntastic/syntax_checkers/haxe/haxe.vim	/^function! s:FindInParent(fln,flsrt,flstp)$/;"	f
Findcomplete	autoload/pathogen.vim	/^function! s:Findcomplete(A,L,P) " {{{1$/;"	f
Finish	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:Finish() " {{{$/;"	f
FinishCommit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:FinishCommit() abort$/;"	f
FlushBuffer	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:FlushBuffer() " {{{$/;"	f
ForceUpdate	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ForceUpdate()$/;"	f
ForwardToZshChecker	bundle/syntastic/syntax_checkers/sh/sh.vim	/^function! s:ForwardToZshChecker()$/;"	f
GF	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:GF(mode) abort$/;"	f
GetCommentDefinition	bundle/tComment/autoload/tcomment.vim	/^function! s:GetCommentDefinition(beg, end, commentMode, ...)$/;"	f
GetCommentDefinitionForType	bundle/tComment/autoload/tcomment.vim	/^function! s:GetCommentDefinitionForType(beg, end, commentMode, filetype) "{{{3$/;"	f
GetCommentReplace	bundle/tComment/autoload/tcomment.vim	/^function! s:GetCommentReplace(cdef, cms0)$/;"	f
GetCompilerSingleTemplate	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:GetCompilerSingleTemplate(lang_name, compiler_name, key) " {{{1$/;"	f
GetCurrentCursorTag	bundle/MatchTag/ftplugin/html.vim	/^fu! s:GetCurrentCursorTag()$/;"	f
GetCurrentShell	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:GetCurrentShell() " {{{2$/;"	f
GetCustomCommentString	bundle/tComment/autoload/tcomment.vim	/^function! s:GetCustomCommentString(ft, commentMode, ...)$/;"	f
GetDocLocations	bundle/ack.vim/autoload/ack.vim	/^function! s:GetDocLocations() "{{{$/;"	f
GetFileWinnr	bundle/tagbar/autoload/tagbar.vim	/^function! s:GetFileWinnr(fileinfo) abort$/;"	f
GetIndentString	bundle/tComment/autoload/tcomment.vim	/^function! s:GetIndentString(line, start)$/;"	f
GetMakeprg	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function s:GetMakeprg()$/;"	f
GetMavenClasspath	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:GetMavenClasspath()$/;"	f
GetNearbyTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:GetNearbyTag(all, forcecurrent, ...) abort$/;"	f
GetOcamlBuildMakeprg	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function s:GetOcamlBuildMakeprg()$/;"	f
GetOcamlcMakeprg	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function s:GetOcamlcMakeprg()$/;"	f
GetOtherMakeprg	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function s:GetOtherMakeprg()$/;"	f
GetOutputPython	bundle/SingleCompile/autoload/SingleCompileAsync.vim	/^function! s:GetOutputPython() " {{{2$/;"	f
GetRangeAsString	bundle/php_getset.vim/ftplugin/php_getset.vim	/^  function s:GetRangeAsString(first, last)$/;"	f
GetShell	bundle/syntastic/syntax_checkers/sh/sh.vim	/^function! s:GetShell()$/;"	f
GetShellLastExitCodeVariable	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:GetShellLastExitCodeVariable() " {{{2$/;"	f
GetShellPipe	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:GetShellPipe(tee_used) " {{{2$/;"	f
GetSnippet	bundle/snipmate.vim/plugin/snipMate.vim	/^fun s:GetSnippet(word, scope)$/;"	f
GetSnippets	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! GetSnippets(dir, filetypes)$/;"	f
GetStartEnd	bundle/tComment/autoload/tcomment.vim	/^function! s:GetStartEnd(beg, end, commentMode) "{{{3$/;"	f
GetSupportedFiletypes	bundle/tagbar/autoload/tagbar.vim	/^function! s:GetSupportedFiletypes() abort$/;"	f
GetSyntaxName	bundle/tComment/autoload/tcomment.vim	/^function! s:GetSyntaxName(lnum, col) "{{{3$/;"	f
GetTagInfo	bundle/tagbar/autoload/tagbar.vim	/^function! s:GetTagInfo(linenr, ignorepseudo) abort$/;"	f
GetValaModules	bundle/syntastic/syntax_checkers/vala/valac.vim	/^function! s:GetValaModules()$/;"	f
Git	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Git(bang, args) abort$/;"	f
GitComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:GitComplete(A, L, P) abort$/;"	f
GlobPath	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:GlobPath(dirs, depth)$/;"	f
GotoFileWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:GotoFileWindow(fileinfo, ...) abort$/;"	f
GotoNextFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:GotoNextFold() abort$/;"	f
GotoNextToplevelTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:GotoNextToplevelTag(direction) abort$/;"	f
GotoPrevFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:GotoPrevFold() abort$/;"	f
Grep	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Grep(cmd,bang,arg) abort$/;"	f
GuessCurrentCommentString	bundle/tComment/autoload/tcomment.vim	/^function! s:GuessCurrentCommentString(commentMode)$/;"	f
GuessFileType	bundle/tComment/autoload/tcomment.vim	/^function! s:GuessFileType(beg, end, commentMode, filetype, ...)$/;"	f
HL	badwolf.vim	/^function! s:HL(group, fg, ...)$/;"	f
HTML5Validate	bundle/vim-html5validator/plugin/html5validator.vim	/^command! -complete=file -nargs=0 HTML5Validate call s:html5validate()$/;"	c
Helptags	autoload/pathogen.vim	/^command! -bar Helptags :call pathogen#helptags()$/;"	c
HiDefaults	bundle/vim-rails/autoload/rails.vim	/^function! s:HiDefaults()$/;"	f
Highlight	bundle/ack.vim/autoload/ack.vim	/^function! s:Highlight(args) "{{{$/;"	f
HighlightTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:HighlightTag(openfolds, ...) abort$/;"	f
HighlightTagAtPosition	bundle/MatchTag/ftplugin/html.vim	/^fu! s:HighlightTagAtPosition(position)$/;"	f
Highlight_Matching_Pair	bundle/MatchTag/ftplugin/html.vim	/^fu! s:Highlight_Matching_Pair()$/;"	f
IgnoreErrror	bundle/syntastic/syntax_checkers/html/tidy.vim	/^function! s:IgnoreErrror(text)$/;"	f
IgnoreErrror	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^function! s:IgnoreErrror(text)$/;"	f
Init	bundle/ack.vim/autoload/ack.vim	/^function! s:Init(cmd) "{{{$/;"	f
Init	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:Init()$/;"	f
Init	bundle/tagbar/autoload/tagbar.vim	/^function! s:Init(silent) abort$/;"	f
InitTypes	bundle/tagbar/autoload/tagbar.vim	/^function! s:InitTypes() abort$/;"	f
InitWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:InitWindow(autoclose) abort$/;"	f
Initialize	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:Initialize() "{{{1$/;"	f
InitializePython	bundle/SingleCompile/autoload/SingleCompileAsync.vim	/^function! s:InitializePython() " {{{2$/;"	f
InsertBothGetterSetter	bundle/php_getset.vim/ftplugin/php_getset.vim	/^    \\ InsertBothGetterSetter$/;"	c
InsertGetter	bundle/php_getset.vim/ftplugin/php_getset.vim	/^  function s:InsertGetter()$/;"	f
InsertGetterOnly	bundle/php_getset.vim/ftplugin/php_getset.vim	/^    \\ InsertGetterOnly$/;"	c
InsertGetterSetter	bundle/php_getset.vim/ftplugin/php_getset.vim	/^    \\ InsertGetterSetter $/;"	c
InsertGetterSetter	bundle/php_getset.vim/ftplugin/php_getset.vim	/^  function s:InsertGetterSetter(flag) range$/;"	f
InsertMethodBody	bundle/php_getset.vim/ftplugin/php_getset.vim	/^  function s:InsertMethodBody(text)$/;"	f
InsertRefs	bundle/matchit.zip/plugin/matchit.vim	/^fun! s:InsertRefs(groupBR, prefix, group, suffix, matchline)$/;"	f
InsertSetter	bundle/php_getset.vim/ftplugin/php_getset.vim	/^  function s:InsertSetter()$/;"	f
InsertSetterOnly	bundle/php_getset.vim/ftplugin/php_getset.vim	/^    \\ InsertSetterOnly$/;"	c
Invert	bundle/vim-rails/autoload/rails.vim	/^function! s:Invert(bang)$/;"	f
IsLanguageInterpreting	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:IsLanguageInterpreting(filetype_name) "{{{1$/;"	f
IsRedrawRequiredAfterMake	bundle/syntastic/plugin/syntastic.vim	/^function! s:IsRedrawRequiredAfterMake()$/;"	f
IsRunningPython	bundle/SingleCompile/autoload/SingleCompileAsync.vim	/^function! s:IsRunningPython() " {{{2$/;"	f
IsShellCsh	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:IsShellCsh(shell_name) " is the shell C Shell? {{2$/;"	f
IsShellFish	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:IsShellFish(shell_name) " is the shell FISH shell {{2$/;"	f
IsShellSh	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:IsShellSh(shell_name) " is the shell Bourne shell? {{2$/;"	f
IsShellValid	bundle/syntastic/syntax_checkers/sh/sh.vim	/^function! s:IsShellValid()$/;"	f
IsValidFile	bundle/tagbar/autoload/tagbar.vim	/^function! s:IsValidFile(fname, ftype) abort$/;"	f
JshintNew	bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^function s:JshintNew()$/;"	f
JumpInit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:JumpInit() abort$/;"	f
JumpToTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:JumpToTag(stay_in_tagbar) abort$/;"	f
KeyLoop	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:KeyLoop()$/;"	f
KeyMap.Add	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Add(keymap)$/;"	f
KeyMap.All	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.All()$/;"	f
KeyMap.BindAll	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.BindAll()$/;"	f
KeyMap.Create	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Create(options)$/;"	f
KeyMap.FindFor	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.FindFor(key, scope)$/;"	f
KeyMap.Invoke	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Invoke(key)$/;"	f
KeyMap.Remove	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Remove(key, scope)$/;"	f
KeyMap.bind	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.bind()$/;"	f
KeyMap.invoke	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.invoke(...)$/;"	f
KindheaderTag.closeFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.closeFold() abort dict$/;"	f
KindheaderTag.getPrototype	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.getPrototype(short) abort dict$/;"	f
KindheaderTag.isFoldable	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.isFoldable() abort dict$/;"	f
KindheaderTag.isFolded	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.isFolded() abort dict$/;"	f
KindheaderTag.isKindheader	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.isKindheader() abort dict$/;"	f
KindheaderTag.openFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.openFold() abort dict$/;"	f
KindheaderTag.toggleFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.toggleFold() abort dict$/;"	f
LAck	bundle/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=file LAck          call ack#Ack('lgrep<bang>', <q-args>)$/;"	c
LAckAdd	bundle/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=file LAckAdd       call ack#Ack('lgrepadd<bang>', <q-args>)$/;"	c
LAckHelp	bundle/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=help LAckHelp      call ack#AckHelp('lgrep<bang>', <q-args>)$/;"	c
LAckWindow	bundle/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=help LAckWindow    call ack#AckWindow('lgrep<bang>', <q-args>)$/;"	c
LegacyCommandEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:LegacyCommandEdit(cmd, target, prefix, suffix)$/;"	f
LineNumber	bundle/TaskList.vim/plugin/tasklist.vim	/^function! s:LineNumber()$/;"	f
LoadClasspathFromConfigFile	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:LoadClasspathFromConfigFile()$/;"	f
LoadUserTypeDefs	bundle/tagbar/autoload/tagbar.vim	/^function! s:LoadUserTypeDefs(...) abort$/;"	f
Log	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Log(cmd, line1, line2, ...) abort$/;"	f
Log	bundle/vim-rails/autoload/rails.vim	/^function! s:Log(bang,arg)$/;"	f
MUClient	bundle/vim-multiuser/plugin/vim_multiuser_server.py	/^class MUClient(asynchat.async_chat):$/;"	c
MUConnection	bundle/vim-multiuser/plugin/vim_multiuser.py	/^MUConnection = None$/;"	v
MUServer	bundle/vim-multiuser/plugin/vim_multiuser_server.py	/^class MUServer(asyncore.dispatcher):$/;"	c
MUSessionHandler	bundle/vim-multiuser/plugin/vim_multiuser_server.py	/^class MUSessionHandler(asynchat.async_chat):$/;"	c
MakeSnip	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! MakeSnip(scope, trigger, content, ...)$/;"	f
Map	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:Map() "{{{$/;"	f
MapKeys	bundle/tagbar/autoload/tagbar.vim	/^function! s:MapKeys() abort$/;"	f
MapNorms	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MapNorms()$/;"	f
MapSpecs	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MapSpecs()$/;"	f
MarkToOpen	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MarkToOpen()$/;"	f
MarkdownFold	bundle/vim-markdown/ftplugin/markdown.vim	/^function! MarkdownFold()$/;"	f
MatchDebug	bundle/matchit.zip/plugin/matchit.vim	/^  command! -nargs=0 MatchDebug call s:Match_debug()$/;"	c
MatchIt	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MatchIt(items, pat, limit, exc)$/;"	f
Match_debug	bundle/matchit.zip/plugin/matchit.vim	/^fun! s:Match_debug()$/;"	f
Match_wrapper	bundle/matchit.zip/plugin/matchit.vim	/^function! s:Match_wrapper(word, forward, mode) range$/;"	f
MatchedItems	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MatchedItems(items, pat, limit)$/;"	f
MenuController.New	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.New(menuItems)$/;"	f
MenuController._allIndexesFor	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._allIndexesFor(shortcut)$/;"	f
MenuController._current	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._current()$/;"	f
MenuController._cursorDown	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorDown()$/;"	f
MenuController._cursorUp	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorUp()$/;"	f
MenuController._echoPrompt	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._echoPrompt()$/;"	f
MenuController._handleKeypress	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._handleKeypress(key)$/;"	f
MenuController._nextIndexFor	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._nextIndexFor(shortcut)$/;"	f
MenuController._restoreOptions	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._restoreOptions()$/;"	f
MenuController._saveOptions	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._saveOptions()$/;"	f
MenuController._setCmdheight	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._setCmdheight()$/;"	f
MenuController.showMenu	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.showMenu()$/;"	f
MenuItem.All	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.All()$/;"	f
MenuItem.AllEnabled	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.AllEnabled()$/;"	f
MenuItem.Create	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.Create(options)$/;"	f
MenuItem.CreateSeparator	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSeparator(options)$/;"	f
MenuItem.CreateSubmenu	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSubmenu(options)$/;"	f
MenuItem.enabled	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.enabled()$/;"	f
MenuItem.execute	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.execute()$/;"	f
MenuItem.isSeparator	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSeparator()$/;"	f
MenuItem.isSubmenu	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSubmenu()$/;"	f
Merge	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Merge(cmd, bang, args) abort$/;"	f
Move	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Move(force,destination) abort$/;"	f
MoveComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:MoveComplete(A,L,P) abort$/;"	f
MoveToInsertPosition	bundle/php_getset.vim/ftplugin/php_getset.vim	/^  function s:MoveToInsertPosition()$/;"	f
MultiMatch	bundle/matchit.zip/plugin/matchit.vim	/^fun! s:MultiMatch(spflag, mode)$/;"	f
MultiUserClient	bundle/vim-multiuser/plugin/vim_multiuser.vim	/^function! MultiUserClient(arg1, arg2)$/;"	f
MultiUserCursorMoved	bundle/vim-multiuser/plugin/vim_multiuser.vim	/^function! MultiUserCursorMoved()$/;"	f
MultiUserServer	bundle/vim-multiuser/plugin/vim_multiuser.vim	/^function! MultiUserServer(arg1)$/;"	f
MyAppend1	bundle/vim-airline/t/airline.vim	/^function! MyAppend1(...)$/;"	f
MyAppend2	bundle/vim-airline/t/airline.vim	/^function! MyAppend2(...)$/;"	f
MyFuncref	bundle/vim-airline/t/airline.vim	/^function! MyFuncref(...)$/;"	f
MyIgnoreFuncref	bundle/vim-airline/t/airline.vim	/^function! MyIgnoreFuncref(...)$/;"	f
NERDTree	bundle/nerdtree/plugin/NERD_tree.vim	/^augroup NERDTree$/;"	a
NERDTree	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=? -complete=dir -bar NERDTree :call g:NERDTreeCreator.CreatePrimary('<args>')$/;"	c
NERDTreeAddKeyMap	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddKeyMap(options)$/;"	f
NERDTreeAddMenuItem	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuItem(options)$/;"	f
NERDTreeAddMenuSeparator	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuSeparator(...)$/;"	f
NERDTreeAddNode	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeAddNode()$/;"	f
NERDTreeAddSubmenu	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddSubmenu(options)$/;"	f
NERDTreeCWD	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeCWD call NERDTreeCWD()$/;"	c
NERDTreeCWD	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeCWD()$/;"	f
NERDTreeClose	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeClose :call nerdtree#closeTreeIfOpen()$/;"	c
NERDTreeCopyNode	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyNode()$/;"	f
NERDTreeDeleteNode	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeDeleteNode()$/;"	f
NERDTreeExecFile	bundle/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFile()$/;"	f
NERDTreeExecFileActive	bundle/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFileActive()$/;"	f
NERDTreeExecuteFile	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFile()$/;"	f
NERDTreeFind	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeFind call nerdtree#findAndRevealPath()$/;"	c
NERDTreeFocus	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeFocus call NERDTreeFocus()$/;"	c
NERDTreeFocus	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeFocus()$/;"	f
NERDTreeFromBookmark	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=1 -complete=customlist,nerdtree#completeBookmarks -bar NERDTreeFromBookmark call g:NERDTreeCreator.CreatePrimary('<args>')$/;"	c
NERDTreeHijackNetrw	bundle/nerdtree/plugin/NERD_tree.vim	/^    augroup NERDTreeHijackNetrw$/;"	a
NERDTreeMirror	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeMirror call g:NERDTreeCreator.CreateMirror()$/;"	c
NERDTreeMoveNode	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeMoveNode()$/;"	f
NERDTreeQuickLook	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeQuickLook()$/;"	f
NERDTreeRender	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeRender()$/;"	f
NERDTreeRevealInFinder	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealInFinder()$/;"	f
NERDTreeToggle	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=? -complete=dir -bar NERDTreeToggle :call g:NERDTreeCreator.TogglePrimary('<args>')$/;"	c
Navcommand	bundle/vim-rails/autoload/rails.vim	/^function! s:Navcommand(bang,...)$/;"	f
NextNormalWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:NextNormalWindow() abort$/;"	f
NoAutoClose	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:NoAutoClose() "{{{$/;"	f
NormalPasta	bundle/vim-pasta/plugin/pasta.vim	/^function! s:NormalPasta(p, o)$/;"	f
NormalTag.getPrototype	bundle/tagbar/autoload/tagbar.vim	/^function! s:NormalTag.getPrototype(short) abort dict$/;"	f
NormalTag.isNormalTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:NormalTag.isNormalTag() abort dict$/;"	f
NormalTag.str	bundle/tagbar/autoload/tagbar.vim	/^function! s:NormalTag.str(longsig, full) abort dict$/;"	f
NormalTag.strfmt	bundle/tagbar/autoload/tagbar.vim	/^function! s:NormalTag.strfmt() abort dict$/;"	f
OSSupportsShellpipeHack	bundle/syntastic/plugin/syntastic.vim	/^function! s:OSSupportsShellpipeHack()$/;"	f
Open	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Open()$/;"	f
OpenFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:OpenFold() abort$/;"	f
OpenMulti	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:OpenMulti(...)$/;"	f
OpenNoMarks	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:OpenNoMarks(md, line)$/;"	f
OpenParents	bundle/tagbar/autoload/tagbar.vim	/^function! s:OpenParents(...) abort$/;"	f
OpenWindow	bundle/TaskList.vim/plugin/tasklist.vim	/^function! s:OpenWindow(buffnr, lineno)$/;"	f
OpenWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:OpenWindow(flags) abort$/;"	f
Opener.New	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.New(path, opts)$/;"	f
Opener._checkToCloseTree	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._checkToCloseTree(newtab)$/;"	f
Opener._gotoTargetWin	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._gotoTargetWin()$/;"	f
Opener._newSplit	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newSplit()$/;"	f
Opener._newVSplit	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newVSplit()$/;"	f
Opener._openDirectory	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openDirectory(node)$/;"	f
Opener._openFile	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openFile()$/;"	f
Opener._previousWindow	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._previousWindow()$/;"	f
Opener._restoreCursorPos	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._restoreCursorPos()$/;"	f
Opener._reuseWindow	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._reuseWindow()$/;"	f
Opener._saveCursorPos	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._saveCursorPos()$/;"	f
Opener.open	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.open(target)$/;"	f
PLUGIN	bundle/delimitMate/Makefile	/^PLUGIN=$(shell basename "$$PWD")$/;"	m
ParseArgs	bundle/tComment/autoload/tcomment.vim	/^function! s:ParseArgs(beg, end, commentMode, arglist) "{{{3$/;"	f
ParseSkip	bundle/matchit.zip/plugin/matchit.vim	/^fun! s:ParseSkip(str)$/;"	f
ParseTagline	bundle/tagbar/autoload/tagbar.vim	/^function! s:ParseTagline(part1, part2, typeinfo, fileinfo) abort$/;"	f
ParseWords	bundle/matchit.zip/plugin/matchit.vim	/^fun! s:ParseWords(groups)$/;"	f
Path.AbsolutePathFor	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.AbsolutePathFor(str)$/;"	f
Path.CopyingSupported	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.CopyingSupported()$/;"	f
Path.Create	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Create(fullpath)$/;"	f
Path.JoinPathStrings	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.JoinPathStrings(...)$/;"	f
Path.New	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.New(path)$/;"	f
Path.Resolve	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Resolve(path)$/;"	f
Path.Slash	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Slash()$/;"	f
Path.WinToUnixPath	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.WinToUnixPath(pathstr)$/;"	f
Path._ignorePatternMatches	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._ignorePatternMatches(pattern)$/;"	f
Path._str	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._str()$/;"	f
Path._strForCd	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForCd()$/;"	f
Path._strForEdit	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForEdit()$/;"	f
Path._strForGlob	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForGlob()$/;"	f
Path._strForUI	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForUI()$/;"	f
Path.bookmarkNames	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.bookmarkNames()$/;"	f
Path.cacheDisplayString	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.cacheDisplayString()$/;"	f
Path.changeToDir	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.changeToDir()$/;"	f
Path.compareTo	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.compareTo(path)$/;"	f
Path.copy	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copy(dest)$/;"	f
Path.copyingWillOverwrite	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copyingWillOverwrite(dest)$/;"	f
Path.delete	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.delete()$/;"	f
Path.displayString	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.displayString()$/;"	f
Path.edit	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.edit()$/;"	f
Path.equals	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.equals(path)$/;"	f
Path.exists	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.exists()$/;"	f
Path.extractDriveLetter	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.extractDriveLetter(fullpath)$/;"	f
Path.getDir	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getDir()$/;"	f
Path.getLastPathComponent	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getLastPathComponent(dirSlash)$/;"	f
Path.getParent	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getParent()$/;"	f
Path.getSortOrderIndex	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortOrderIndex()$/;"	f
Path.ignore	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.ignore()$/;"	f
Path.isUnder	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnder(path)$/;"	f
Path.isUnixHiddenFile	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenFile()$/;"	f
Path.isUnixHiddenPath	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenPath()$/;"	f
Path.readInfoFromDisk	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.readInfoFromDisk(fullpath)$/;"	f
Path.refresh	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refresh()$/;"	f
Path.rename	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.rename(newPath)$/;"	f
Path.str	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.str(...)$/;"	f
Path.strTrunk	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.strTrunk()$/;"	f
Path.tabnr	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.tabnr()$/;"	f
PhpDoc	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^func! PhpDoc()$/;"	f
PhpDocClass	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^func! PhpDocClass()$/;"	f
PhpDocDefault	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^func! PhpDocDefault()$/;"	f
PhpDocFunc	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^func! PhpDocFunc()$/;"	f
PhpDocRange	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^func! PhpDocRange() range$/;"	f
PhpDocScope	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^func! PhpDocScope(modifiers, identifier)$/;"	f
PhpDocSingle	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^func! PhpDocSingle()$/;"	f
PhpDocType	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^func! PhpDocType(typeString)$/;"	f
PhpDocVar	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^func! PhpDocVar()$/;"	f
PopEnvironmentVaribles	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:PopEnvironmentVaribles() " {{{2$/;"	f
Preview	bundle/vim-rails/autoload/rails.vim	/^function! s:Preview(bang, lnum, uri) abort$/;"	f
PrintHelp	bundle/tagbar/autoload/tagbar.vim	/^function! s:PrintHelp() abort$/;"	f
PrintKinds	bundle/tagbar/autoload/tagbar.vim	/^function! s:PrintKinds(typeinfo, fileinfo) abort$/;"	f
PrintTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:PrintTag(tag, depth, is_first, fileinfo, typeinfo) abort$/;"	f
ProcessFile	bundle/snipmate.vim/plugin/snipMate.vim	/^fun s:ProcessFile(file, ft, ...)$/;"	f
ProcessFile	bundle/tagbar/autoload/tagbar.vim	/^function! s:ProcessFile(fname, ftype) abort$/;"	f
ProcessPseudoChildren	bundle/tagbar/autoload/tagbar.vim	/^function! s:ProcessPseudoChildren(tags, tag, depth, typeinfo, fileinfo) abort$/;"	f
ProcessPseudoTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:ProcessPseudoTag(curtags, tag, parent, typeinfo, fileinfo) abort$/;"	f
ProcessRegion	bundle/php_getset.vim/ftplugin/php_getset.vim	/^  function s:ProcessRegion(region)$/;"	f
ProcessSnippet	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:ProcessSnippet(snip)$/;"	f
ProcessVariable	bundle/php_getset.vim/ftplugin/php_getset.vim	/^  function s:ProcessVariable(variable)$/;"	f
ProcessedLine	bundle/tComment/autoload/tcomment.vim	/^function! s:ProcessedLine(uncomment, match, checkRx, replace)$/;"	f
PrtAdd	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtAdd(char)$/;"	f
PrtBS	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtBS()$/;"	f
PrtClear	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtClear()$/;"	f
PrtClearCache	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtClearCache()$/;"	f
PrtCurEnd	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurEnd()$/;"	f
PrtCurLeft	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurLeft()$/;"	f
PrtCurRight	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurRight()$/;"	f
PrtCurStart	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurStart()$/;"	f
PrtDelete	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDelete()$/;"	f
PrtDeleteEnt	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDeleteEnt()$/;"	f
PrtDeleteMRU	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDeleteMRU()$/;"	f
PrtDeleteWord	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDeleteWord()$/;"	f
PrtExit	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtExit()$/;"	f
PrtExpandDir	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtExpandDir()$/;"	f
PrtFocusMap	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtFocusMap(char)$/;"	f
PrtHistory	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtHistory(...)$/;"	f
PrtInsert	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtInsert(...)$/;"	f
PrtSelectJump	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtSelectJump(char)$/;"	f
PrtSelectMove	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtSelectMove(dir)$/;"	f
PrtSwitcher	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtSwitcher()$/;"	f
PseudoTag.isPseudoTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:PseudoTag.isPseudoTag() abort dict$/;"	f
PseudoTag.strfmt	bundle/tagbar/autoload/tagbar.vim	/^function! s:PseudoTag.strfmt() abort dict$/;"	f
PuppetLintVersion	bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^function! s:PuppetLintVersion()$/;"	f
PuppetVersion	bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^function! s:PuppetVersion()$/;"	f
PushEnvironmentVaribles	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:PushEnvironmentVaribles() " {{{2$/;"	f
QuickHelp	bundle/ack.vim/autoload/ack.vim	/^function! s:QuickHelp() "{{{$/;"	f
QuitIfOnlyWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:QuitIfOnlyWindow() abort$/;"	f
Rails	bundle/vim-rails/plugin/rails.vim	/^command! -bar -bang -nargs=* -complete=customlist,rails#complete_rails Rails execute rails#new_app_command(<bang>0,<f-args>)$/;"	c
RailsDetect	bundle/vim-rails/plugin/rails.vim	/^function! RailsDetect(...) abort$/;"	f
RailsFile	bundle/vim-rails/autoload/rails.vim	/^function! RailsFile()$/;"	f
RailsFilePath	bundle/vim-rails/autoload/rails.vim	/^function! RailsFilePath()$/;"	f
RailsFileType	bundle/vim-rails/autoload/rails.vim	/^function! RailsFileType()$/;"	f
RailsFind	bundle/vim-rails/autoload/rails.vim	/^function! s:RailsFind()$/;"	f
RailsIncludeexpr	bundle/vim-rails/autoload/rails.vim	/^function! RailsIncludeexpr()$/;"	f
RailsIncludefind	bundle/vim-rails/autoload/rails.vim	/^function! s:RailsIncludefind(str,...)$/;"	f
RailsRevision	bundle/vim-rails/autoload/rails.vim	/^function! RailsRevision()$/;"	f
RailsRoot	bundle/vim-rails/autoload/rails.vim	/^function! RailsRoot()$/;"	f
Rake	bundle/vim-rails/autoload/rails.vim	/^function! s:Rake(bang,lnum,arg)$/;"	f
Redraw	bundle/syntastic/plugin/syntastic.vim	/^function! s:Redraw()$/;"	f
Ref	bundle/matchit.zip/plugin/matchit.vim	/^fun! s:Ref(string, d, ...)$/;"	f
Refresh	bundle/vim-rails/autoload/rails.vim	/^function! s:Refresh(bang)$/;"	f
RefreshBuffer	bundle/vim-rails/autoload/rails.vim	/^function! s:RefreshBuffer()$/;"	f
RegHandler	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:RegHandler(regex, function, args)$/;"	f
RehighlightBlame	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:RehighlightBlame() abort$/;"	f
Related	bundle/vim-rails/autoload/rails.vim	/^function! s:Related(cmd,line1,line2,count,...)$/;"	f
ReloadAllSnippets	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! ReloadAllSnippets()$/;"	f
ReloadSnippets	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! ReloadSnippets(ft)$/;"	f
RemoteComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:RemoteComplete(A, L, P) abort$/;"	f
Remove	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Remove(force) abort$/;"	f
RemoveDir	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:RemoveDir(dir)$/;"	f
RemoveSnippet	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:RemoveSnippet()$/;"	f
Render	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Render(lines, pat)$/;"	f
RenderContent	bundle/tagbar/autoload/tagbar.vim	/^function! s:RenderContent(...) abort$/;"	f
RenderKeepView	bundle/tagbar/autoload/tagbar.vim	/^function! s:RenderKeepView(...) abort$/;"	f
RepeatCommentstring	bundle/tComment/autoload/tcomment.vim	/^function! s:RepeatCommentstring(cdef) "{{{3$/;"	f
RepeatLast	bundle/delimitMate/autoload/delimitMateTests.vim	/^	function! RepeatLast(name, output, ...) " {{{$/;"	f
ReplaceCmd	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:ReplaceCmd(cmd,...) abort$/;"	f
ReplaceInLine	bundle/tComment/autoload/tcomment.vim	/^function! s:ReplaceInLine(text) "{{{3$/;"	f
Reset	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Reset(args)$/;"	f
ResetAllSnippets	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! ResetAllSnippets()$/;"	f
ResetSnippets	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! ResetSnippets(ft)$/;"	f
Resolve	bundle/matchit.zip/plugin/matchit.vim	/^fun! s:Resolve(source, target, output)$/;"	f
RestoreSession	bundle/tagbar/autoload/tagbar.vim	/^function! s:RestoreSession() abort$/;"	f
RevisionComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:RevisionComplete(A, L, P) abort$/;"	f
RubyExtract	bundle/vim-rails/autoload/rails.vim	/^function! s:RubyExtract(bang, root, before, name) range abort$/;"	f
Run	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:Run(async) " {{{1$/;"	f
RunAsyncWithMessage	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:RunAsyncWithMessage(run_cmd) " {{{2$/;"	f
RunPython	bundle/SingleCompile/autoload/SingleCompileAsync.vim	/^function! s:RunPython(run_command) " {{{2$/;"	f
SCChooseCompiler	bundle/SingleCompile/plugin/SingleCompile.vim	/^command SCChooseCompiler call SingleCompile#ChooseCompiler(&filetype)$/;"	c
SCChooseInterpreter	bundle/SingleCompile/plugin/SingleCompile.vim	/^command SCChooseInterpreter call SingleCompile#ChooseCompiler(&filetype)$/;"	c
SCCompile	bundle/SingleCompile/plugin/SingleCompile.vim	/^command -nargs=* SCCompile$/;"	c
SCCompileAF	bundle/SingleCompile/plugin/SingleCompile.vim	/^command -nargs=+ SCCompileAF$/;"	c
SCCompileRun	bundle/SingleCompile/plugin/SingleCompile.vim	/^command -nargs=* SCCompileRun$/;"	c
SCCompileRunAF	bundle/SingleCompile/plugin/SingleCompile.vim	/^command -nargs=+ SCCompileRunAF$/;"	c
SCCompileRunAsync	bundle/SingleCompile/plugin/SingleCompile.vim	/^command -nargs=* SCCompileRunAsync$/;"	c
SCCompileRunAsyncAF	bundle/SingleCompile/plugin/SingleCompile.vim	/^command -nargs=+ SCCompileRunAsyncAF$/;"	c
SCIsRunningAsync	bundle/SingleCompile/plugin/SingleCompile.vim	/^command SCIsRunningAsync$/;"	c
SCRIPT	bundle/delimitMate/Makefile	/^SCRIPT=$(wildcard plugin\/*.vim)$/;"	m
SCTerminateAsync	bundle/SingleCompile/plugin/SingleCompile.vim	/^command SCTerminateAsync$/;"	c
SCViewResult	bundle/SingleCompile/plugin/SingleCompile.vim	/^command SCViewResult call SingleCompile#ViewResult(0)$/;"	c
SCViewResultAsync	bundle/SingleCompile/plugin/SingleCompile.vim	/^command SCViewResultAsync call SingleCompile#ViewResult(1)$/;"	c
SID	bundle/nerdtree/autoload/nerdtree.vim	/^function s:SID()$/;"	f
SaveClasspath	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:SaveClasspath()$/;"	f
SearchFile	bundle/TaskList.vim/plugin/tasklist.vim	/^function! s:SearchFile(hits, word)$/;"	f
SearchForMatchingTag	bundle/MatchTag/ftplugin/html.vim	/^fu! s:SearchForMatchingTag(tagname, forwards)$/;"	f
SearchWithDispatch	bundle/ack.vim/autoload/ack.vim	/^function! s:SearchWithDispatch(grepprg, grepargs, grepformat) "{{{$/;"	f
SearchWithGrep	bundle/ack.vim/autoload/ack.vim	/^function! s:SearchWithGrep(grepcmd, grepprg, grepargs, grepformat) "{{{$/;"	f
SearchingFilepaths	bundle/ack.vim/autoload/ack.vim	/^function! s:SearchingFilepaths() "{{{$/;"	f
SectionSpec	bundle/vim-airline/t/section.vim	/^function! SectionSpec()$/;"	f
SelectWord	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:SelectWord()$/;"	f
Set	bundle/vim-rails/autoload/rails.vim	/^function! s:Set(bang,...)$/;"	f
SetBasePath	bundle/vim-rails/autoload/rails.vim	/^function! s:SetBasePath() abort$/;"	f
SetCompilerSingleTemplate	bundle/SingleCompile/autoload/SingleCompile.vim	/^fun! s:SetCompilerSingleTemplate(lang_name, compiler, key, value, ...)$/;"	f
SetDefTxt	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SetDefTxt()$/;"	f
SetFoldLevel	bundle/tagbar/autoload/tagbar.vim	/^function! s:SetFoldLevel(level, force) abort$/;"	f
SetFoldLevelRecursive	bundle/tagbar/autoload/tagbar.vim	/^function! s:SetFoldLevelRecursive(fileinfo, tags, level) abort$/;"	f
SetGlobalVimCompiler	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:SetGlobalVimCompiler(lang_name, compiler) " {{{1$/;"	f
SetStatusLine	bundle/tagbar/autoload/tagbar.vim	/^function! s:SetStatusLine(current)$/;"	f
SetVimCompiler	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:SetVimCompiler(lang_name, compiler) " {{{1$/;"	f
SetWD	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SetWD(args)$/;"	f
SetupMovementDetection	bundle/vim-multiuser/plugin/vim_multiuser.vim	/^function! SetupMovementDetection()$/;"	f
SetupPasta	bundle/vim-pasta/plugin/pasta.vim	/^function! s:SetupPasta()$/;"	f
ShouldQuickfixBeUsed	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:ShouldQuickfixBeUsed() " tell whether quickfix sould be used{{{1$/;"	f
ShowAvailableSnips	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! ShowAvailableSnips()$/;"	f
ShowInPreviewWin	bundle/tagbar/autoload/tagbar.vim	/^function! s:ShowInPreviewWin() abort$/;"	f
ShowLocList	bundle/syntastic/plugin/syntastic.vim	/^function! s:ShowLocList()$/;"	f
ShowMessage	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:ShowMessage(message) "{{{1$/;"	f
ShowPrototype	bundle/tagbar/autoload/tagbar.vim	/^function! s:ShowPrototype(short) abort$/;"	f
ShrinkIfExpanded	bundle/tagbar/autoload/tagbar.vim	/^function! s:ShrinkIfExpanded() abort$/;"	f
SingleCompile	bundle/SingleCompile/plugin/SingleCompile.vim	/^command -nargs=* SingleCompile$/;"	c
SingleCompile#ChooseCompiler	bundle/SingleCompile/autoload/SingleCompile.vim	/^fun! SingleCompile#ChooseCompiler(lang_name, ...) " choose a compiler {{{1$/;"	f
SingleCompile#CloseViewResult	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#CloseViewResult() " close the last result {{{1$/;"	f
SingleCompile#Compile	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#Compile(...) " compile synchronously {{{1$/;"	f
SingleCompile#CompileAsync	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#CompileAsync(...) " compile asynchronously {{{1$/;"	f
SingleCompile#CompileRun	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#CompileRun(...) " compile and run {{{1$/;"	f
SingleCompile#CompileRunAsync	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#CompileRunAsync(...) " {{{1$/;"	f
SingleCompile#DetectCompilerGenerally	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#DetectCompilerGenerally(compiling_command)$/;"	f
SingleCompile#DetectIe	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#DetectIe(not_used_arg) " {{{2$/;"	f
SingleCompile#DetectMicrosoftVC	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#DetectMicrosoftVC(compiling_command) " {{{2$/;"	f
SingleCompile#DetectWatcom	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#DetectWatcom(compiling_command) " {{{2$/;"	f
SingleCompile#GetDefaultOpenCommand	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#GetDefaultOpenCommand() " {{{2$/;"	f
SingleCompile#GetExecutableSuffix	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#GetExecutableSuffix()$/;"	f
SingleCompile#GetVersion	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#GetVersion() " get the script version {{{1$/;"	f
SingleCompile#PostdoMicrosoftVC	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#PostdoMicrosoftVC(not_used_arg) " MSVC post-do {{{2$/;"	f
SingleCompile#PostdoWatcom	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#PostdoWatcom(compiling_info) " watcom pre-do {{{2$/;"	f
SingleCompile#PredoClang	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#PredoClang(compiling_info) " clang Predo {{{2$/;"	f
SingleCompile#PredoGcc	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#PredoGcc(compiling_info) " gcc pre-do {{{2$/;"	f
SingleCompile#PredoMicrosoftVC	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#PredoMicrosoftVC(compiling_info) " MSVC Predo {{{2$/;"	f
SingleCompile#PredoSolStudioC	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#PredoSolStudioC(compiling_info) " solaris studio C\/C++ pre-do {{{2$/;"	f
SingleCompile#PredoWatcom	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#PredoWatcom(compiling_info) " watcom pre-do {{{2$/;"	f
SingleCompile#SetCompilerTemplate	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#SetCompilerTemplate(lang_name, compiler,$/;"	f
SingleCompile#SetCompilerTemplateByDict	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#SetCompilerTemplateByDict($/;"	f
SingleCompile#SetDetectFunc	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#SetDetectFunc(lang_name, compiler, detect_func) " {{{2$/;"	f
SingleCompile#SetOutfile	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#SetOutfile(lang_name, compiler, outfile) " {{{2$/;"	f
SingleCompile#SetPostdo	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#SetPostdo(lang_name, compiler, postdo_func) " {{{2$/;"	f
SingleCompile#SetPredo	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#SetPredo(lang_name, compiler, predo_func) " {{{2$/;"	f
SingleCompile#SetPriority	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#SetPriority(lang_name, compiler, priority) " {{{2$/;"	f
SingleCompile#SetTemplate	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#SetTemplate(lang_name, stype, string,...) " {{{1$/;"	f
SingleCompile#SetVimCompiler	bundle/SingleCompile/autoload/SingleCompile.vim	/^fun! SingleCompile#SetVimCompiler(lang_name, compiler, vim_compiler) " {{{2$/;"	f
SingleCompile#ViewResult	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#ViewResult(async) " view the running result {{{1$/;"	f
SingleCompile#templates#ada#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/ada.vim	/^function! SingleCompile#templates#ada#Initialize()$/;"	f
SingleCompile#templates#bash#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/bash.vim	/^function! SingleCompile#templates#bash#Initialize()$/;"	f
SingleCompile#templates#c#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/c.vim	/^function! SingleCompile#templates#c#Initialize()$/;"	f
SingleCompile#templates#cmake#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/cmake.vim	/^function! SingleCompile#templates#cmake#Initialize()$/;"	f
SingleCompile#templates#coffee#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/coffee.vim	/^function! SingleCompile#templates#coffee#Initialize()$/;"	f
SingleCompile#templates#cpp#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/cpp.vim	/^function! SingleCompile#templates#cpp#Initialize()$/;"	f
SingleCompile#templates#cs#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/cs.vim	/^function! SingleCompile#templates#cs#Initialize()$/;"	f
SingleCompile#templates#csh#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/csh.vim	/^function! SingleCompile#templates#csh#Initialize()$/;"	f
SingleCompile#templates#d#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/d.vim	/^function! SingleCompile#templates#d#Initialize()$/;"	f
SingleCompile#templates#dosbatch#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/dosbatch.vim	/^function! SingleCompile#templates#dosbatch#Initialize()$/;"	f
SingleCompile#templates#erlang#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/erlang.vim	/^function! SingleCompile#templates#erlang#Initialize()$/;"	f
SingleCompile#templates#fortran#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/fortran.vim	/^function! SingleCompile#templates#fortran#Initialize()$/;"	f
SingleCompile#templates#go#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/go.vim	/^function! SingleCompile#templates#go#Initialize()$/;"	f
SingleCompile#templates#haskell#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/haskell.vim	/^function! SingleCompile#templates#haskell#Initialize()$/;"	f
SingleCompile#templates#html#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/html.vim	/^function! SingleCompile#templates#html#Initialize()$/;"	f
SingleCompile#templates#idlang#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/idlang.vim	/^function! SingleCompile#templates#idlang#Initialize()$/;"	f
SingleCompile#templates#java#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/java.vim	/^function! SingleCompile#templates#java#Initialize()$/;"	f
SingleCompile#templates#javascript#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/javascript.vim	/^function! SingleCompile#templates#javascript#Initialize()$/;"	f
SingleCompile#templates#ksh#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/ksh.vim	/^function! SingleCompile#templates#ksh#Initialize()$/;"	f
SingleCompile#templates#lisp#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/lisp.vim	/^function! SingleCompile#templates#lisp#Initialize()$/;"	f
SingleCompile#templates#ls#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/ls.vim	/^function! SingleCompile#templates#ls#Initialize()$/;"	f
SingleCompile#templates#lua#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/lua.vim	/^function! SingleCompile#templates#lua#Initialize()$/;"	f
SingleCompile#templates#make#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/make.vim	/^function! SingleCompile#templates#make#Initialize()$/;"	f
SingleCompile#templates#markdown#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/markdown.vim	/^function! SingleCompile#templates#markdown#Initialize()$/;"	f
SingleCompile#templates#matlab#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/matlab.vim	/^function! SingleCompile#templates#matlab#Initialize()$/;"	f
SingleCompile#templates#objc#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/objc.vim	/^function! SingleCompile#templates#objc#Initialize()$/;"	f
SingleCompile#templates#pascal#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/pascal.vim	/^function! SingleCompile#templates#pascal#Initialize()$/;"	f
SingleCompile#templates#perl#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/perl.vim	/^function! SingleCompile#templates#perl#Initialize()$/;"	f
SingleCompile#templates#php#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/php.vim	/^function! SingleCompile#templates#php#Initialize()$/;"	f
SingleCompile#templates#python#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/python.vim	/^function! SingleCompile#templates#python#Initialize()$/;"	f
SingleCompile#templates#qml#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/qml.vim	/^function! SingleCompile#templates#qml#Initialize()$/;"	f
SingleCompile#templates#r#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/r.vim	/^function! SingleCompile#templates#r#Initialize()$/;"	f
SingleCompile#templates#rst#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/rst.vim	/^function! SingleCompile#templates#rst#Initialize()$/;"	f
SingleCompile#templates#ruby#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/ruby.vim	/^function! SingleCompile#templates#ruby#Initialize()$/;"	f
SingleCompile#templates#rust#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/rust.vim	/^function! SingleCompile#templates#rust#Initialize()$/;"	f
SingleCompile#templates#scala#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/scala.vim	/^function! SingleCompile#templates#scala#Initialize()$/;"	f
SingleCompile#templates#sh#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/sh.vim	/^function! SingleCompile#templates#sh#Initialize()$/;"	f
SingleCompile#templates#tcl#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/tcl.vim	/^function! SingleCompile#templates#tcl#Initialize()$/;"	f
SingleCompile#templates#tcsh#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/tcsh.vim	/^function! SingleCompile#templates#tcsh#Initialize()$/;"	f
SingleCompile#templates#tex#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/tex.vim	/^function! SingleCompile#templates#tex#Initialize()$/;"	f
SingleCompile#templates#vb#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/vb.vim	/^function! SingleCompile#templates#vb#Initialize()$/;"	f
SingleCompile#templates#vim#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/vim.vim	/^function! SingleCompile#templates#vim#Initialize()$/;"	f
SingleCompile#templates#xhtml#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/xhtml.vim	/^function! SingleCompile#templates#xhtml#Initialize()$/;"	f
SingleCompile#templates#zsh#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/zsh.vim	/^function! SingleCompile#templates#zsh#Initialize()$/;"	f
SingleCompileAsync#GetMode	bundle/SingleCompile/autoload/SingleCompileAsync.vim	/^function! SingleCompileAsync#GetMode() " {{{1$/;"	f
SingleCompileAsync#GetOutput	bundle/SingleCompile/autoload/SingleCompileAsync.vim	/^function! SingleCompileAsync#GetOutput() " {{{1$/;"	f
SingleCompileAsync#Initialize	bundle/SingleCompile/autoload/SingleCompileAsync.vim	/^function! SingleCompileAsync#Initialize(mode) " {{{1$/;"	f
SingleCompileAsync#IsRunning	bundle/SingleCompile/autoload/SingleCompileAsync.vim	/^function! SingleCompileAsync#IsRunning() " {{{1$/;"	f
SingleCompileAsync#Run	bundle/SingleCompile/autoload/SingleCompileAsync.vim	/^function! SingleCompileAsync#Run(run_command) " {{{1$/;"	f
SingleCompileAsync#Terminate	bundle/SingleCompile/autoload/SingleCompileAsync.vim	/^function! SingleCompileAsync#Terminate() " {{{1$/;"	f
SingleCompileRun	bundle/SingleCompile/plugin/SingleCompile.vim	/^command -nargs=* SingleCompileRun$/;"	c
SkipFile	bundle/syntastic/plugin/syntastic.vim	/^function! s:SkipFile()$/;"	f
SlimrbVersion	bundle/syntastic/syntax_checkers/slim/slimrb.vim	/^function! s:SlimrbVersion()$/;"	f
SortTags	bundle/tagbar/autoload/tagbar.vim	/^function! s:SortTags(tags, comparemethod) abort$/;"	f
SpecInputs	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SpecInputs(str)$/;"	f
SplitPattern	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SplitPattern(str)$/;"	f
StageDiff	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageDiff(diff) abort$/;"	f
StageDiffEdit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageDiffEdit() abort$/;"	f
StageNext	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageNext(count) abort$/;"	f
StagePatch	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StagePatch(lnum1,lnum2) abort$/;"	f
StagePrevious	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StagePrevious(count) abort$/;"	f
StageReloadSeek	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageReloadSeek(target,lnum1,lnum2) abort$/;"	f
StageToggle	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageToggle(lnum1,lnum2) abort$/;"	f
StageUndo	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageUndo() abort$/;"	f
StartColRx	bundle/tComment/autoload/tcomment.vim	/^function! s:StartColRx(pos)$/;"	f
StartDebug	bundle/tagbar/autoload/tagbar.vim	/^function! s:StartDebug(filename) abort$/;"	f
StartLineRx	bundle/tComment/autoload/tcomment.vim	/^function! s:StartLineRx(pos)$/;"	f
StartPosRx	bundle/tComment/autoload/tcomment.vim	/^function! s:StartPosRx(mode, line, col)$/;"	f
Status	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Status() abort$/;"	f
StopDebug	bundle/tagbar/autoload/tagbar.vim	/^function! s:StopDebug() abort$/;"	f
SynFold	bundle/php.vim/syntax/php.vim	/^  command! -nargs=+ SynFold <args> fold$/;"	c
SynFold	bundle/php.vim/syntax/php.vim	/^  command! -nargs=+ SynFold <args>$/;"	c
SynFoldDoc	bundle/php.vim/syntax/php.vim	/^  command! -nargs=+ SynFoldDoc <args> fold$/;"	c
SynFoldDoc	bundle/php.vim/syntax/php.vim	/^  command! -nargs=+ SynFoldDoc <args>$/;"	c
SyntasticAddToErrors	bundle/syntastic/plugin/syntastic.vim	/^function! SyntasticAddToErrors(errors, options)$/;"	f
SyntasticAutoloclistNotifier.AutoToggle	bundle/syntastic/plugin/syntastic/autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.AutoToggle(loclist)$/;"	f
SyntasticAutoloclistNotifier.New	bundle/syntastic/plugin/syntastic/autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.New()$/;"	f
SyntasticAutoloclistNotifier.refresh	bundle/syntastic/plugin/syntastic/autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.refresh(loclist)$/;"	f
SyntasticBalloonsExprNotifier	bundle/syntastic/plugin/syntastic/balloons.vim	/^function! SyntasticBalloonsExprNotifier()$/;"	f
SyntasticBalloonsNotifier.New	bundle/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.New()$/;"	f
SyntasticBalloonsNotifier.enabled	bundle/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.enabled()$/;"	f
SyntasticBalloonsNotifier.refresh	bundle/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.refresh(loclist)$/;"	f
SyntasticCheck	bundle/syntastic/plugin/syntastic.vim	/^command! -nargs=? -complete=custom,s:CompleteCheckerName SyntasticCheck call s:UpdateErrors(0, <f-args>) <bar> call s:Redraw()$/;"	c
SyntasticChecker.New	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.New(args)$/;"	f
SyntasticChecker._populateHighlightRegexes	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker._populateHighlightRegexes(list)$/;"	f
SyntasticChecker.filetype	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.filetype()$/;"	f
SyntasticChecker.getHighlightRegexFor	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getHighlightRegexFor(error)$/;"	f
SyntasticChecker.getLocList	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getLocList()$/;"	f
SyntasticChecker.isAvailable	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.isAvailable()$/;"	f
SyntasticChecker.name	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.name()$/;"	f
SyntasticCursorNotifier.New	bundle/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.New()$/;"	f
SyntasticCursorNotifier.refresh	bundle/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.refresh(loclist)$/;"	f
SyntasticCursorNotifier.reset	bundle/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.reset(loclist)$/;"	f
SyntasticHighlightingNotifier.New	bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.New()$/;"	f
SyntasticHighlightingNotifier.enabled	bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.enabled()$/;"	f
SyntasticHighlightingNotifier.refresh	bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.refresh(loclist)$/;"	f
SyntasticHighlightingNotifier.reset	bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.reset(loclist)$/;"	f
SyntasticInfo	bundle/syntastic/plugin/syntastic.vim	/^command! SyntasticInfo call s:registry.echoInfoFor(&ft)$/;"	c
SyntasticJavacEditClasspath	bundle/syntastic/syntax_checkers/java/javac.vim	/^command! SyntasticJavacEditClasspath call s:EditClasspath()$/;"	c
SyntasticLoclist.Current	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.Current()$/;"	f
SyntasticLoclist.New	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.New(rawLoclist)$/;"	f
SyntasticLoclist.errors	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.errors()$/;"	f
SyntasticLoclist.extend	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.extend(other)$/;"	f
SyntasticLoclist.filter	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.filter(filters)$/;"	f
SyntasticLoclist.filteredRaw	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.filteredRaw()$/;"	f
SyntasticLoclist.hasErrorsOrWarningsToDisplay	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.hasErrorsOrWarningsToDisplay()$/;"	f
SyntasticLoclist.isEmpty	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.isEmpty()$/;"	f
SyntasticLoclist.length	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.length()$/;"	f
SyntasticLoclist.messages	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.messages()$/;"	f
SyntasticLoclist.quietWarnings	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.quietWarnings()$/;"	f
SyntasticLoclist.show	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.show()$/;"	f
SyntasticLoclist.toRaw	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.toRaw()$/;"	f
SyntasticLoclist.warnings	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.warnings()$/;"	f
SyntasticLoclistHide	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclistHide()$/;"	f
SyntasticMake	bundle/syntastic/plugin/syntastic.vim	/^function! SyntasticMake(options)$/;"	f
SyntasticMakeprgBuilder.New	bundle/syntastic/plugin/syntastic/makeprg_builder.vim	/^function! g:SyntasticMakeprgBuilder.New(exe, args, fname, post_args, tail, subchecker)$/;"	f
SyntasticMakeprgBuilder._getOpt	bundle/syntastic/plugin/syntastic/makeprg_builder.vim	/^function g:SyntasticMakeprgBuilder._getOpt(name)$/;"	f
SyntasticMakeprgBuilder._optExists	bundle/syntastic/plugin/syntastic/makeprg_builder.vim	/^function! g:SyntasticMakeprgBuilder._optExists(name)$/;"	f
SyntasticMakeprgBuilder._optName	bundle/syntastic/plugin/syntastic/makeprg_builder.vim	/^function! g:SyntasticMakeprgBuilder._optName(name)$/;"	f
SyntasticMakeprgBuilder.args	bundle/syntastic/plugin/syntastic/makeprg_builder.vim	/^function! g:SyntasticMakeprgBuilder.args()$/;"	f
SyntasticMakeprgBuilder.exe	bundle/syntastic/plugin/syntastic/makeprg_builder.vim	/^function! g:SyntasticMakeprgBuilder.exe()$/;"	f
SyntasticMakeprgBuilder.fname	bundle/syntastic/plugin/syntastic/makeprg_builder.vim	/^function! g:SyntasticMakeprgBuilder.fname()$/;"	f
SyntasticMakeprgBuilder.makeprg	bundle/syntastic/plugin/syntastic/makeprg_builder.vim	/^function! g:SyntasticMakeprgBuilder.makeprg()$/;"	f
SyntasticMakeprgBuilder.post_args	bundle/syntastic/plugin/syntastic/makeprg_builder.vim	/^function! g:SyntasticMakeprgBuilder.post_args()$/;"	f
SyntasticMakeprgBuilder.tail	bundle/syntastic/plugin/syntastic/makeprg_builder.vim	/^function! g:SyntasticMakeprgBuilder.tail()$/;"	f
SyntasticModeMap.Instance	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.Instance()$/;"	f
SyntasticModeMap._initModeMapFromGlobalOpts	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap._initModeMapFromGlobalOpts()$/;"	f
SyntasticModeMap._isOneFiletypeActive	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap._isOneFiletypeActive(filetypes)$/;"	f
SyntasticModeMap._noFiletypesArePassive	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap._noFiletypesArePassive(filetypes)$/;"	f
SyntasticModeMap.allowsAutoChecking	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.allowsAutoChecking(filetype)$/;"	f
SyntasticModeMap.echoMode	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.echoMode()$/;"	f
SyntasticModeMap.isPassive	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.isPassive()$/;"	f
SyntasticModeMap.toggleMode	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.toggleMode()$/;"	f
SyntasticNotifiers.New	bundle/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers.New()$/;"	f
SyntasticNotifiers.refresh	bundle/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers.refresh(loclist)$/;"	f
SyntasticNotifiers.reset	bundle/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers.reset(loclist)$/;"	f
SyntasticRefreshCursor	bundle/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticRefreshCursor()$/;"	f
SyntasticRegistry.CreateAndRegisterChecker	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.CreateAndRegisterChecker(args)$/;"	f
SyntasticRegistry.Instance	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.Instance()$/;"	f
SyntasticRegistry._allCheckersFor	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._allCheckersFor(filetype)$/;"	f
SyntasticRegistry._filterCheckersByAvailability	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._filterCheckersByAvailability(checkers)$/;"	f
SyntasticRegistry._filterCheckersByDefaultSettings	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._filterCheckersByDefaultSettings(checkers, filetype)$/;"	f
SyntasticRegistry._filterCheckersByUserSettings	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._filterCheckersByUserSettings(checkers, filetype)$/;"	f
SyntasticRegistry._haveLoadedCheckers	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._haveLoadedCheckers(filetype)$/;"	f
SyntasticRegistry._loadCheckers	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._loadCheckers(filetype)$/;"	f
SyntasticRegistry._userHasFiletypeSettings	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._userHasFiletypeSettings(filetype)$/;"	f
SyntasticRegistry._validateUniqueName	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._validateUniqueName(checker) abort$/;"	f
SyntasticRegistry.availableCheckersFor	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.availableCheckersFor(filetype)$/;"	f
SyntasticRegistry.checkable	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.checkable(filetype)$/;"	f
SyntasticRegistry.echoInfoFor	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.echoInfoFor(filetype)$/;"	f
SyntasticRegistry.getActiveCheckerNames	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getActiveCheckerNames(filetype)$/;"	f
SyntasticRegistry.getActiveCheckers	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getActiveCheckers(filetype)$/;"	f
SyntasticRegistry.getChecker	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getChecker(filetype, name)$/;"	f
SyntasticRegistry.registerChecker	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.registerChecker(checker) abort$/;"	f
SyntasticSignsNotifier.New	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier.New()$/;"	f
SyntasticSignsNotifier._bufSignIds	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._bufSignIds()$/;"	f
SyntasticSignsNotifier._removeSigns	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._removeSigns(ids)$/;"	f
SyntasticSignsNotifier._setup	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._setup()$/;"	f
SyntasticSignsNotifier._signErrors	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._signErrors(loclist)$/;"	f
SyntasticSignsNotifier._warningMasksError	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._warningMasksError(error, llist)$/;"	f
SyntasticSignsNotifier.enabled	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier.enabled()$/;"	f
SyntasticSignsNotifier.refresh	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier.refresh(loclist)$/;"	f
SyntasticStatuslineFlag	bundle/syntastic/plugin/syntastic.vim	/^function! SyntasticStatuslineFlag()$/;"	f
SyntasticToggleMode	bundle/syntastic/plugin/syntastic.vim	/^command! SyntasticToggleMode call s:ToggleMode()$/;"	c
SyntaxCheckers_ada_gcc_GetLocList	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^function! SyntaxCheckers_ada_gcc_GetLocList()$/;"	f
SyntaxCheckers_ada_gcc_IsAvailable	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^function! SyntaxCheckers_ada_gcc_IsAvailable()$/;"	f
SyntaxCheckers_applescript_osacompile_GetLocList	bundle/syntastic/syntax_checkers/applescript/osacompile.vim	/^function! SyntaxCheckers_applescript_osacompile_GetLocList()$/;"	f
SyntaxCheckers_applescript_osacompile_IsAvailable	bundle/syntastic/syntax_checkers/applescript/osacompile.vim	/^function! SyntaxCheckers_applescript_osacompile_IsAvailable()$/;"	f
SyntaxCheckers_c_checkpatch_GetLocList	bundle/syntastic/syntax_checkers/c/checkpatch.vim	/^function! SyntaxCheckers_c_checkpatch_GetLocList()$/;"	f
SyntaxCheckers_c_checkpatch_IsAvailable	bundle/syntastic/syntax_checkers/c/checkpatch.vim	/^function SyntaxCheckers_c_checkpatch_IsAvailable()$/;"	f
SyntaxCheckers_c_gcc_GetLocList	bundle/syntastic/syntax_checkers/c/gcc.vim	/^function! SyntaxCheckers_c_gcc_GetLocList()$/;"	f
SyntaxCheckers_c_gcc_IsAvailable	bundle/syntastic/syntax_checkers/c/gcc.vim	/^function! SyntaxCheckers_c_gcc_IsAvailable()$/;"	f
SyntaxCheckers_c_make_GetLocList	bundle/syntastic/syntax_checkers/c/make.vim	/^function! SyntaxCheckers_c_make_GetLocList()$/;"	f
SyntaxCheckers_c_make_IsAvailable	bundle/syntastic/syntax_checkers/c/make.vim	/^function SyntaxCheckers_c_make_IsAvailable()$/;"	f
SyntaxCheckers_c_sparse_GetLocList	bundle/syntastic/syntax_checkers/c/sparse.vim	/^function! SyntaxCheckers_c_sparse_GetLocList()$/;"	f
SyntaxCheckers_c_sparse_IsAvailable	bundle/syntastic/syntax_checkers/c/sparse.vim	/^function! SyntaxCheckers_c_sparse_IsAvailable()$/;"	f
SyntaxCheckers_c_splint_GetLocList	bundle/syntastic/syntax_checkers/c/splint.vim	/^function! SyntaxCheckers_c_splint_GetLocList()$/;"	f
SyntaxCheckers_c_splint_IsAvailable	bundle/syntastic/syntax_checkers/c/splint.vim	/^function! SyntaxCheckers_c_splint_IsAvailable()$/;"	f
SyntaxCheckers_c_ycm_GetLocList	bundle/syntastic/syntax_checkers/c/ycm.vim	/^function! SyntaxCheckers_c_ycm_GetLocList()$/;"	f
SyntaxCheckers_c_ycm_IsAvailable	bundle/syntastic/syntax_checkers/c/ycm.vim	/^function! SyntaxCheckers_c_ycm_IsAvailable()$/;"	f
SyntaxCheckers_co_coco_GetLocList	bundle/syntastic/syntax_checkers/co/coco.vim	/^function! SyntaxCheckers_co_coco_GetLocList()$/;"	f
SyntaxCheckers_coffee_coffee_GetLocList	bundle/syntastic/syntax_checkers/coffee/coffee.vim	/^function! SyntaxCheckers_coffee_coffee_GetLocList()$/;"	f
SyntaxCheckers_coffee_coffee_IsAvailable	bundle/syntastic/syntax_checkers/coffee/coffee.vim	/^function! SyntaxCheckers_coffee_coffee_IsAvailable()$/;"	f
SyntaxCheckers_coffee_coffeelint_GetLocList	bundle/syntastic/syntax_checkers/coffee/coffeelint.vim	/^function! SyntaxCheckers_coffee_coffeelint_GetLocList()$/;"	f
SyntaxCheckers_coffee_coffeelint_IsAvailable	bundle/syntastic/syntax_checkers/coffee/coffeelint.vim	/^function! SyntaxCheckers_coffee_coffeelint_IsAvailable()$/;"	f
SyntaxCheckers_coq_coqtop_GetLocList	bundle/syntastic/syntax_checkers/coq/coqtop.vim	/^function! SyntaxCheckers_coq_coqtop_GetLocList()$/;"	f
SyntaxCheckers_coq_coqtop_IsAvailable	bundle/syntastic/syntax_checkers/coq/coqtop.vim	/^function! SyntaxCheckers_coq_coqtop_IsAvailable()$/;"	f
SyntaxCheckers_cpp_cpplint_GetLocList	bundle/syntastic/syntax_checkers/cpp/cpplint.vim	/^function! SyntaxCheckers_cpp_cpplint_GetLocList()$/;"	f
SyntaxCheckers_cpp_cpplint_IsAvailable	bundle/syntastic/syntax_checkers/cpp/cpplint.vim	/^function! SyntaxCheckers_cpp_cpplint_IsAvailable()$/;"	f
SyntaxCheckers_cpp_gcc_GetLocList	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^function! SyntaxCheckers_cpp_gcc_GetLocList()$/;"	f
SyntaxCheckers_cpp_gcc_IsAvailable	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^function! SyntaxCheckers_cpp_gcc_IsAvailable()$/;"	f
SyntaxCheckers_cpp_ycm_GetLocList	bundle/syntastic/syntax_checkers/cpp/ycm.vim	/^function! SyntaxCheckers_cpp_ycm_GetLocList()$/;"	f
SyntaxCheckers_cpp_ycm_IsAvailable	bundle/syntastic/syntax_checkers/cpp/ycm.vim	/^function! SyntaxCheckers_cpp_ycm_IsAvailable()$/;"	f
SyntaxCheckers_cs_mcs_GetLocList	bundle/syntastic/syntax_checkers/cs/mcs.vim	/^function! SyntaxCheckers_cs_mcs_GetLocList()$/;"	f
SyntaxCheckers_cs_mcs_IsAvailable	bundle/syntastic/syntax_checkers/cs/mcs.vim	/^function! SyntaxCheckers_cs_mcs_IsAvailable()$/;"	f
SyntaxCheckers_css_csslint_GetLocList	bundle/syntastic/syntax_checkers/css/csslint.vim	/^function! SyntaxCheckers_css_csslint_GetLocList()$/;"	f
SyntaxCheckers_css_csslint_IsAvailable	bundle/syntastic/syntax_checkers/css/csslint.vim	/^function! SyntaxCheckers_css_csslint_IsAvailable()$/;"	f
SyntaxCheckers_css_phpcs_GetLocList	bundle/syntastic/syntax_checkers/css/phpcs.vim	/^function! SyntaxCheckers_css_phpcs_GetLocList()$/;"	f
SyntaxCheckers_css_phpcs_IsAvailable	bundle/syntastic/syntax_checkers/css/phpcs.vim	/^function! SyntaxCheckers_css_phpcs_IsAvailable()$/;"	f
SyntaxCheckers_css_prettycss_GetHighlightRegex	bundle/syntastic/syntax_checkers/css/prettycss.vim	/^function! SyntaxCheckers_css_prettycss_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_css_prettycss_GetLocList	bundle/syntastic/syntax_checkers/css/prettycss.vim	/^function! SyntaxCheckers_css_prettycss_GetLocList()$/;"	f
SyntaxCheckers_css_prettycss_IsAvailable	bundle/syntastic/syntax_checkers/css/prettycss.vim	/^function! SyntaxCheckers_css_prettycss_IsAvailable()$/;"	f
SyntaxCheckers_cucumber_cucumber_GetLocList	bundle/syntastic/syntax_checkers/cucumber/cucumber.vim	/^function! SyntaxCheckers_cucumber_cucumber_GetLocList()$/;"	f
SyntaxCheckers_cucumber_cucumber_IsAvailable	bundle/syntastic/syntax_checkers/cucumber/cucumber.vim	/^function! SyntaxCheckers_cucumber_cucumber_IsAvailable()$/;"	f
SyntaxCheckers_cuda_nvcc_GetLocList	bundle/syntastic/syntax_checkers/cuda/nvcc.vim	/^function! SyntaxCheckers_cuda_nvcc_GetLocList()$/;"	f
SyntaxCheckers_cuda_nvcc_IsAvailable	bundle/syntastic/syntax_checkers/cuda/nvcc.vim	/^function! SyntaxCheckers_cuda_nvcc_IsAvailable()$/;"	f
SyntaxCheckers_d_dmd_GetLocList	bundle/syntastic/syntax_checkers/d/dmd.vim	/^function! SyntaxCheckers_d_dmd_GetLocList()$/;"	f
SyntaxCheckers_d_dmd_IsAvailable	bundle/syntastic/syntax_checkers/d/dmd.vim	/^function! SyntaxCheckers_d_dmd_IsAvailable()$/;"	f
SyntaxCheckers_dart_dart_analyzer_GetHighlightRegex	bundle/syntastic/syntax_checkers/dart/dart_analyzer.vim	/^function! SyntaxCheckers_dart_dart_analyzer_GetHighlightRegex(error)$/;"	f
SyntaxCheckers_dart_dart_analyzer_GetLocList	bundle/syntastic/syntax_checkers/dart/dart_analyzer.vim	/^function! SyntaxCheckers_dart_dart_analyzer_GetLocList()$/;"	f
SyntaxCheckers_dart_dart_analyzer_IsAvailable	bundle/syntastic/syntax_checkers/dart/dart_analyzer.vim	/^function! SyntaxCheckers_dart_dart_analyzer_IsAvailable()$/;"	f
SyntaxCheckers_docbk_xmllint_GetLocList	bundle/syntastic/syntax_checkers/docbk/xmllint.vim	/^function! SyntaxCheckers_docbk_xmllint_GetLocList()$/;"	f
SyntaxCheckers_docbk_xmllint_IsAvailable	bundle/syntastic/syntax_checkers/docbk/xmllint.vim	/^function! SyntaxCheckers_docbk_xmllint_IsAvailable()$/;"	f
SyntaxCheckers_elixir_elixir_GetLocList	bundle/syntastic/syntax_checkers/elixir/elixir.vim	/^function! SyntaxCheckers_elixir_elixir_GetLocList()$/;"	f
SyntaxCheckers_elixir_elixir_IsAvailable	bundle/syntastic/syntax_checkers/elixir/elixir.vim	/^function! SyntaxCheckers_elixir_elixir_IsAvailable()$/;"	f
SyntaxCheckers_erlang_escript_GetLocList	bundle/syntastic/syntax_checkers/erlang/erlang.vim	/^function! SyntaxCheckers_erlang_escript_GetLocList()$/;"	f
SyntaxCheckers_erlang_escript_IsAvailable	bundle/syntastic/syntax_checkers/erlang/erlang.vim	/^function! SyntaxCheckers_erlang_escript_IsAvailable()$/;"	f
SyntaxCheckers_eruby_ruby_GetLocList	bundle/syntastic/syntax_checkers/eruby/ruby.vim	/^function! SyntaxCheckers_eruby_ruby_GetLocList()$/;"	f
SyntaxCheckers_eruby_ruby_IsAvailable	bundle/syntastic/syntax_checkers/eruby/ruby.vim	/^function! SyntaxCheckers_eruby_ruby_IsAvailable()$/;"	f
SyntaxCheckers_fortran_gfortran_GetLocList	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^function! SyntaxCheckers_fortran_gfortran_GetLocList()$/;"	f
SyntaxCheckers_fortran_gfortran_IsAvailable	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^function! SyntaxCheckers_fortran_gfortran_IsAvailable()$/;"	f
SyntaxCheckers_gentoo_metadata_xmllint_GetLocList	bundle/syntastic/syntax_checkers/gentoo_metadata/xmllint.vim	/^function! SyntaxCheckers_gentoo_metadata_xmllint_GetLocList()$/;"	f
SyntaxCheckers_gentoo_metadata_xmllint_IsAvailable	bundle/syntastic/syntax_checkers/gentoo_metadata/xmllint.vim	/^function! SyntaxCheckers_gentoo_metadata_xmllint_IsAvailable()$/;"	f
SyntaxCheckers_go_go_GetLocList	bundle/syntastic/syntax_checkers/go/go.vim	/^function! SyntaxCheckers_go_go_GetLocList()$/;"	f
SyntaxCheckers_go_go_IsAvailable	bundle/syntastic/syntax_checkers/go/go.vim	/^function! SyntaxCheckers_go_go_IsAvailable()$/;"	f
SyntaxCheckers_go_gofmt_GetLocList	bundle/syntastic/syntax_checkers/go/gofmt.vim	/^function! SyntaxCheckers_go_gofmt_GetLocList()$/;"	f
SyntaxCheckers_go_gofmt_IsAvailable	bundle/syntastic/syntax_checkers/go/gofmt.vim	/^function! SyntaxCheckers_go_gofmt_IsAvailable()$/;"	f
SyntaxCheckers_go_govet_GetLocList	bundle/syntastic/syntax_checkers/go/govet.vim	/^function! SyntaxCheckers_go_govet_GetLocList()$/;"	f
SyntaxCheckers_go_govet_IsAvailable	bundle/syntastic/syntax_checkers/go/govet.vim	/^function! SyntaxCheckers_go_govet_IsAvailable()$/;"	f
SyntaxCheckers_haml_haml_GetLocList	bundle/syntastic/syntax_checkers/haml/haml.vim	/^function! SyntaxCheckers_haml_haml_GetLocList()$/;"	f
SyntaxCheckers_haml_haml_IsAvailable	bundle/syntastic/syntax_checkers/haml/haml.vim	/^function! SyntaxCheckers_haml_haml_IsAvailable()$/;"	f
SyntaxCheckers_haskell_ghc_mod_GetLocList	bundle/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^function! SyntaxCheckers_haskell_ghc_mod_GetLocList()$/;"	f
SyntaxCheckers_haskell_ghc_mod_IsAvailable	bundle/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^function! SyntaxCheckers_haskell_ghc_mod_IsAvailable()$/;"	f
SyntaxCheckers_haskell_hdevtools_GetLocList	bundle/syntastic/syntax_checkers/haskell/hdevtools.vim	/^function! SyntaxCheckers_haskell_hdevtools_GetLocList()$/;"	f
SyntaxCheckers_haskell_hdevtools_IsAvailable	bundle/syntastic/syntax_checkers/haskell/hdevtools.vim	/^function! SyntaxCheckers_haskell_hdevtools_IsAvailable()$/;"	f
SyntaxCheckers_haxe_haxe_GetLocList	bundle/syntastic/syntax_checkers/haxe/haxe.vim	/^function! SyntaxCheckers_haxe_haxe_GetLocList()$/;"	f
SyntaxCheckers_haxe_haxe_IsAvailable	bundle/syntastic/syntax_checkers/haxe/haxe.vim	/^function! SyntaxCheckers_haxe_haxe_IsAvailable()$/;"	f
SyntaxCheckers_html_tidy_GetLocList	bundle/syntastic/syntax_checkers/html/tidy.vim	/^function! SyntaxCheckers_html_tidy_GetLocList()$/;"	f
SyntaxCheckers_html_tidy_IsAvailable	bundle/syntastic/syntax_checkers/html/tidy.vim	/^function! SyntaxCheckers_html_tidy_IsAvailable()$/;"	f
SyntaxCheckers_html_validator_GetLocList	bundle/syntastic/syntax_checkers/html/validator.vim	/^function! SyntaxCheckers_html_validator_GetLocList()$/;"	f
SyntaxCheckers_html_validator_IsAvailable	bundle/syntastic/syntax_checkers/html/validator.vim	/^function! SyntaxCheckers_html_validator_IsAvailable()$/;"	f
SyntaxCheckers_html_w3_GetLocList	bundle/syntastic/syntax_checkers/html/w3.vim	/^function! SyntaxCheckers_html_w3_GetLocList()$/;"	f
SyntaxCheckers_html_w3_IsAvailable	bundle/syntastic/syntax_checkers/html/w3.vim	/^function! SyntaxCheckers_html_w3_IsAvailable()$/;"	f
SyntaxCheckers_java_checkstyle_GetLocList	bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^function! SyntaxCheckers_java_checkstyle_GetLocList()$/;"	f
SyntaxCheckers_java_checkstyle_IsAvailable	bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^function! SyntaxCheckers_java_checkstyle_IsAvailable()$/;"	f
SyntaxCheckers_java_javac_GetLocList	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! SyntaxCheckers_java_javac_GetLocList()$/;"	f
SyntaxCheckers_java_javac_IsAvailable	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! SyntaxCheckers_java_javac_IsAvailable()$/;"	f
SyntaxCheckers_javascript_closurecompiler_GetLocList	bundle/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^function! SyntaxCheckers_javascript_closurecompiler_GetLocList()$/;"	f
SyntaxCheckers_javascript_closurecompiler_IsAvailable	bundle/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^function! SyntaxCheckers_javascript_closurecompiler_IsAvailable()$/;"	f
SyntaxCheckers_javascript_gjslint_GetLocList	bundle/syntastic/syntax_checkers/javascript/gjslint.vim	/^function! SyntaxCheckers_javascript_gjslint_GetLocList()$/;"	f
SyntaxCheckers_javascript_gjslint_IsAvailable	bundle/syntastic/syntax_checkers/javascript/gjslint.vim	/^function! SyntaxCheckers_javascript_gjslint_IsAvailable()$/;"	f
SyntaxCheckers_javascript_jshint_GetLocList	bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^function! SyntaxCheckers_javascript_jshint_GetLocList()$/;"	f
SyntaxCheckers_javascript_jshint_IsAvailable	bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^function! SyntaxCheckers_javascript_jshint_IsAvailable()$/;"	f
SyntaxCheckers_javascript_jsl_GetLocList	bundle/syntastic/syntax_checkers/javascript/jsl.vim	/^function! SyntaxCheckers_javascript_jsl_GetLocList()$/;"	f
SyntaxCheckers_javascript_jsl_IsAvailable	bundle/syntastic/syntax_checkers/javascript/jsl.vim	/^function! SyntaxCheckers_javascript_jsl_IsAvailable()$/;"	f
SyntaxCheckers_javascript_jslint_GetLocList	bundle/syntastic/syntax_checkers/javascript/jslint.vim	/^function! SyntaxCheckers_javascript_jslint_GetLocList()$/;"	f
SyntaxCheckers_javascript_jslint_HighlightTerm	bundle/syntastic/syntax_checkers/javascript/jslint.vim	/^function! SyntaxCheckers_javascript_jslint_HighlightTerm(error)$/;"	f
SyntaxCheckers_javascript_jslint_IsAvailable	bundle/syntastic/syntax_checkers/javascript/jslint.vim	/^function! SyntaxCheckers_javascript_jslint_IsAvailable()$/;"	f
SyntaxCheckers_json_jsonlint_GetLocList	bundle/syntastic/syntax_checkers/json/jsonlint.vim	/^function! SyntaxCheckers_json_jsonlint_GetLocList()$/;"	f
SyntaxCheckers_json_jsonlint_IsAvailable	bundle/syntastic/syntax_checkers/json/jsonlint.vim	/^function! SyntaxCheckers_json_jsonlint_IsAvailable()$/;"	f
SyntaxCheckers_json_jsonval_GetLocList	bundle/syntastic/syntax_checkers/json/jsonval.vim	/^function! SyntaxCheckers_json_jsonval_GetLocList()$/;"	f
SyntaxCheckers_json_jsonval_IsAvailable	bundle/syntastic/syntax_checkers/json/jsonval.vim	/^function! SyntaxCheckers_json_jsonval_IsAvailable()$/;"	f
SyntaxCheckers_less_lessc_GetLocList	bundle/syntastic/syntax_checkers/less/lessc.vim	/^function! SyntaxCheckers_less_lessc_GetLocList()$/;"	f
SyntaxCheckers_less_lessc_IsAvailable	bundle/syntastic/syntax_checkers/less/lessc.vim	/^function! SyntaxCheckers_less_lessc_IsAvailable()$/;"	f
SyntaxCheckers_lisp_clisp_GetLocList	bundle/syntastic/syntax_checkers/lisp/clisp.vim	/^function! SyntaxCheckers_lisp_clisp_GetLocList()$/;"	f
SyntaxCheckers_lisp_clisp_IsAvailable	bundle/syntastic/syntax_checkers/lisp/clisp.vim	/^function! SyntaxCheckers_lisp_clisp_IsAvailable()$/;"	f
SyntaxCheckers_lua_luac_GetHighlightRegex	bundle/syntastic/syntax_checkers/lua/luac.vim	/^function! SyntaxCheckers_lua_luac_GetHighlightRegex(pos)$/;"	f
SyntaxCheckers_lua_luac_GetLocList	bundle/syntastic/syntax_checkers/lua/luac.vim	/^function! SyntaxCheckers_lua_luac_GetLocList()$/;"	f
SyntaxCheckers_lua_luac_IsAvailable	bundle/syntastic/syntax_checkers/lua/luac.vim	/^function! SyntaxCheckers_lua_luac_IsAvailable()$/;"	f
SyntaxCheckers_matlab_mlint_GetLocList	bundle/syntastic/syntax_checkers/matlab/mlint.vim	/^function! SyntaxCheckers_matlab_mlint_GetLocList()$/;"	f
SyntaxCheckers_matlab_mlint_IsAvailable	bundle/syntastic/syntax_checkers/matlab/mlint.vim	/^function! SyntaxCheckers_matlab_mlint_IsAvailable()$/;"	f
SyntaxCheckers_nasm_nasm_GetLocList	bundle/syntastic/syntax_checkers/nasm/nasm.vim	/^function! SyntaxCheckers_nasm_nasm_GetLocList()$/;"	f
SyntaxCheckers_nasm_nasm_IsAvailable	bundle/syntastic/syntax_checkers/nasm/nasm.vim	/^function! SyntaxCheckers_nasm_nasm_IsAvailable()$/;"	f
SyntaxCheckers_objc_gcc_GetLocList	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^function! SyntaxCheckers_objc_gcc_GetLocList()$/;"	f
SyntaxCheckers_objc_gcc_IsAvailable	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^function! SyntaxCheckers_objc_gcc_IsAvailable()$/;"	f
SyntaxCheckers_objc_ycm_GetLocList	bundle/syntastic/syntax_checkers/objc/ycm.vim	/^function! SyntaxCheckers_objc_ycm_GetLocList()$/;"	f
SyntaxCheckers_objc_ycm_IsAvailable	bundle/syntastic/syntax_checkers/objc/ycm.vim	/^function! SyntaxCheckers_objc_ycm_IsAvailable()$/;"	f
SyntaxCheckers_ocaml_camlp4o_GetLocList	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! SyntaxCheckers_ocaml_camlp4o_GetLocList()$/;"	f
SyntaxCheckers_ocaml_camlp4o_IsAvailable	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! SyntaxCheckers_ocaml_camlp4o_IsAvailable()$/;"	f
SyntaxCheckers_perl_perl_GetLocList	bundle/syntastic/syntax_checkers/perl/perl.vim	/^function! SyntaxCheckers_perl_perl_GetLocList()$/;"	f
SyntaxCheckers_perl_perl_IsAvailable	bundle/syntastic/syntax_checkers/perl/perl.vim	/^function! SyntaxCheckers_perl_perl_IsAvailable()$/;"	f
SyntaxCheckers_perl_perlcritic_GetLocList	bundle/syntastic/syntax_checkers/perl/perlcritic.vim	/^function! SyntaxCheckers_perl_perlcritic_GetLocList()$/;"	f
SyntaxCheckers_perl_perlcritic_IsAvailable	bundle/syntastic/syntax_checkers/perl/perlcritic.vim	/^function! SyntaxCheckers_perl_perlcritic_IsAvailable()$/;"	f
SyntaxCheckers_php_php_GetHighlightRegex	bundle/syntastic/syntax_checkers/php/php.vim	/^function! SyntaxCheckers_php_php_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_php_php_GetLocList	bundle/syntastic/syntax_checkers/php/php.vim	/^function! SyntaxCheckers_php_php_GetLocList()$/;"	f
SyntaxCheckers_php_php_IsAvailable	bundle/syntastic/syntax_checkers/php/php.vim	/^function! SyntaxCheckers_php_php_IsAvailable()$/;"	f
SyntaxCheckers_php_phpcs_GetLocList	bundle/syntastic/syntax_checkers/php/phpcs.vim	/^function! SyntaxCheckers_php_phpcs_GetLocList()$/;"	f
SyntaxCheckers_php_phpcs_IsAvailable	bundle/syntastic/syntax_checkers/php/phpcs.vim	/^function! SyntaxCheckers_php_phpcs_IsAvailable()$/;"	f
SyntaxCheckers_php_phpmd_GetHighlightRegex	bundle/syntastic/syntax_checkers/php/phpmd.vim	/^function! SyntaxCheckers_php_phpmd_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_php_phpmd_GetLocList	bundle/syntastic/syntax_checkers/php/phpmd.vim	/^function! SyntaxCheckers_php_phpmd_GetLocList()$/;"	f
SyntaxCheckers_php_phpmd_IsAvailable	bundle/syntastic/syntax_checkers/php/phpmd.vim	/^function! SyntaxCheckers_php_phpmd_IsAvailable()$/;"	f
SyntaxCheckers_puppet_puppetlint_GetLocList	bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^function! SyntaxCheckers_puppet_puppetlint_GetLocList()$/;"	f
SyntaxCheckers_puppet_puppetlint_IsAvailable	bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^function! SyntaxCheckers_puppet_puppetlint_IsAvailable()$/;"	f
SyntaxCheckers_python_flake8_GetHighlightRegex	bundle/syntastic/syntax_checkers/python/flake8.vim	/^function! SyntaxCheckers_python_flake8_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_python_flake8_GetLocList	bundle/syntastic/syntax_checkers/python/flake8.vim	/^function! SyntaxCheckers_python_flake8_GetLocList()$/;"	f
SyntaxCheckers_python_flake8_IsAvailable	bundle/syntastic/syntax_checkers/python/flake8.vim	/^function! SyntaxCheckers_python_flake8_IsAvailable()$/;"	f
SyntaxCheckers_python_py3kwarn_GetLocList	bundle/syntastic/syntax_checkers/python/py3kwarn.vim	/^function! SyntaxCheckers_python_py3kwarn_GetLocList()$/;"	f
SyntaxCheckers_python_py3kwarn_IsAvailable	bundle/syntastic/syntax_checkers/python/py3kwarn.vim	/^function! SyntaxCheckers_python_py3kwarn_IsAvailable()$/;"	f
SyntaxCheckers_python_pyflakes_GetHighlightRegex	bundle/syntastic/syntax_checkers/python/pyflakes.vim	/^function! SyntaxCheckers_python_pyflakes_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_python_pyflakes_GetLocList	bundle/syntastic/syntax_checkers/python/pyflakes.vim	/^function! SyntaxCheckers_python_pyflakes_GetLocList()$/;"	f
SyntaxCheckers_python_pyflakes_IsAvailable	bundle/syntastic/syntax_checkers/python/pyflakes.vim	/^function! SyntaxCheckers_python_pyflakes_IsAvailable()$/;"	f
SyntaxCheckers_python_pylint_GetLocList	bundle/syntastic/syntax_checkers/python/pylint.vim	/^function! SyntaxCheckers_python_pylint_GetLocList()$/;"	f
SyntaxCheckers_python_pylint_IsAvailable	bundle/syntastic/syntax_checkers/python/pylint.vim	/^function! SyntaxCheckers_python_pylint_IsAvailable()$/;"	f
SyntaxCheckers_python_python_GetLocList	bundle/syntastic/syntax_checkers/python/python.vim	/^function! SyntaxCheckers_python_python_GetLocList()$/;"	f
SyntaxCheckers_python_python_IsAvailable	bundle/syntastic/syntax_checkers/python/python.vim	/^function! SyntaxCheckers_python_python_IsAvailable()$/;"	f
SyntaxCheckers_rst_rst2pseudoxml_GetLocList	bundle/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^function! SyntaxCheckers_rst_rst2pseudoxml_GetLocList()$/;"	f
SyntaxCheckers_rst_rst2pseudoxml_IsAvailable	bundle/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^function! SyntaxCheckers_rst_rst2pseudoxml_IsAvailable()$/;"	f
SyntaxCheckers_ruby_jruby_GetLocList	bundle/syntastic/syntax_checkers/ruby/jruby.vim	/^function! SyntaxCheckers_ruby_jruby_GetLocList()$/;"	f
SyntaxCheckers_ruby_jruby_IsAvailable	bundle/syntastic/syntax_checkers/ruby/jruby.vim	/^function! SyntaxCheckers_ruby_jruby_IsAvailable()$/;"	f
SyntaxCheckers_ruby_macruby_GetLocList	bundle/syntastic/syntax_checkers/ruby/macruby.vim	/^function! SyntaxCheckers_ruby_macruby_GetLocList()$/;"	f
SyntaxCheckers_ruby_macruby_IsAvailable	bundle/syntastic/syntax_checkers/ruby/macruby.vim	/^function! SyntaxCheckers_ruby_macruby_IsAvailable()$/;"	f
SyntaxCheckers_ruby_mri_GetHighlightRegex	bundle/syntastic/syntax_checkers/ruby/mri.vim	/^function! SyntaxCheckers_ruby_mri_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_ruby_mri_GetLocList	bundle/syntastic/syntax_checkers/ruby/mri.vim	/^function! SyntaxCheckers_ruby_mri_GetLocList()$/;"	f
SyntaxCheckers_ruby_mri_IsAvailable	bundle/syntastic/syntax_checkers/ruby/mri.vim	/^function! SyntaxCheckers_ruby_mri_IsAvailable()$/;"	f
SyntaxCheckers_ruby_rubocop_GetLocList	bundle/syntastic/syntax_checkers/ruby/rubocop.vim	/^function! SyntaxCheckers_ruby_rubocop_GetLocList()$/;"	f
SyntaxCheckers_ruby_rubocop_IsAvailable	bundle/syntastic/syntax_checkers/ruby/rubocop.vim	/^function! SyntaxCheckers_ruby_rubocop_IsAvailable()$/;"	f
SyntaxCheckers_rust_rustc_GetLocList	bundle/syntastic/syntax_checkers/rust/rustc.vim	/^function! SyntaxCheckers_rust_rustc_GetLocList()$/;"	f
SyntaxCheckers_rust_rustc_IsAvailable	bundle/syntastic/syntax_checkers/rust/rustc.vim	/^function! SyntaxCheckers_rust_rustc_IsAvailable()$/;"	f
SyntaxCheckers_sass_sass_GetLocList	bundle/syntastic/syntax_checkers/sass/sass.vim	/^function! SyntaxCheckers_sass_sass_GetLocList()$/;"	f
SyntaxCheckers_sass_sass_IsAvailable	bundle/syntastic/syntax_checkers/sass/sass.vim	/^function! SyntaxCheckers_sass_sass_IsAvailable()$/;"	f
SyntaxCheckers_scala_scalac_GetLocList	bundle/syntastic/syntax_checkers/scala/scalac.vim	/^function! SyntaxCheckers_scala_scalac_GetLocList()$/;"	f
SyntaxCheckers_scala_scalac_IsAvailable	bundle/syntastic/syntax_checkers/scala/scalac.vim	/^function! SyntaxCheckers_scala_scalac_IsAvailable()$/;"	f
SyntaxCheckers_scss_sass_GetLocList	bundle/syntastic/syntax_checkers/scss/sass.vim	/^function! SyntaxCheckers_scss_sass_GetLocList()$/;"	f
SyntaxCheckers_scss_sass_IsAvailable	bundle/syntastic/syntax_checkers/scss/sass.vim	/^function! SyntaxCheckers_scss_sass_IsAvailable()$/;"	f
SyntaxCheckers_sh_checkbashisms_GetLocList	bundle/syntastic/syntax_checkers/sh/checkbashisms.vim	/^function! SyntaxCheckers_sh_checkbashisms_GetLocList()$/;"	f
SyntaxCheckers_sh_checkbashisms_IsAvailable	bundle/syntastic/syntax_checkers/sh/checkbashisms.vim	/^function! SyntaxCheckers_sh_checkbashisms_IsAvailable()$/;"	f
SyntaxCheckers_sh_sh_GetLocList	bundle/syntastic/syntax_checkers/sh/sh.vim	/^function! SyntaxCheckers_sh_sh_GetLocList()$/;"	f
SyntaxCheckers_sh_sh_IsAvailable	bundle/syntastic/syntax_checkers/sh/sh.vim	/^function! SyntaxCheckers_sh_sh_IsAvailable()$/;"	f
SyntaxCheckers_slim_slimrb_GetLocList	bundle/syntastic/syntax_checkers/slim/slimrb.vim	/^function! SyntaxCheckers_slim_slimrb_GetLocList()$/;"	f
SyntaxCheckers_slim_slimrb_IsAvailable	bundle/syntastic/syntax_checkers/slim/slimrb.vim	/^function! SyntaxCheckers_slim_slimrb_IsAvailable()$/;"	f
SyntaxCheckers_tcl_nagelfar_GetLocList	bundle/syntastic/syntax_checkers/tcl/nagelfar.vim	/^function! SyntaxCheckers_tcl_nagelfar_GetLocList()$/;"	f
SyntaxCheckers_tcl_nagelfar_IsAvailable	bundle/syntastic/syntax_checkers/tcl/nagelfar.vim	/^function! SyntaxCheckers_tcl_nagelfar_IsAvailable()$/;"	f
SyntaxCheckers_tex_chktex_GetLocList	bundle/syntastic/syntax_checkers/tex/chktex.vim	/^function! SyntaxCheckers_tex_chktex_GetLocList()$/;"	f
SyntaxCheckers_tex_chktex_IsAvailable	bundle/syntastic/syntax_checkers/tex/chktex.vim	/^function! SyntaxCheckers_tex_chktex_IsAvailable()$/;"	f
SyntaxCheckers_tex_lacheck_GetLocList	bundle/syntastic/syntax_checkers/tex/lacheck.vim	/^function! SyntaxCheckers_tex_lacheck_GetLocList()$/;"	f
SyntaxCheckers_tex_lacheck_IsAvailable	bundle/syntastic/syntax_checkers/tex/lacheck.vim	/^function! SyntaxCheckers_tex_lacheck_IsAvailable()$/;"	f
SyntaxCheckers_twig_twiglint_GetHighlightRegex	bundle/syntastic/syntax_checkers/twig/twiglint.vim	/^function! SyntaxCheckers_twig_twiglint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_twig_twiglint_GetLocList	bundle/syntastic/syntax_checkers/twig/twiglint.vim	/^function! SyntaxCheckers_twig_twiglint_GetLocList()$/;"	f
SyntaxCheckers_twig_twiglint_IsAvailable	bundle/syntastic/syntax_checkers/twig/twiglint.vim	/^function! SyntaxCheckers_twig_twiglint_IsAvailable()$/;"	f
SyntaxCheckers_typescript_tsc_GetLocList	bundle/syntastic/syntax_checkers/typescript/tsc.vim	/^function! SyntaxCheckers_typescript_tsc_GetLocList()$/;"	f
SyntaxCheckers_typescript_tsc_IsAvailable	bundle/syntastic/syntax_checkers/typescript/tsc.vim	/^function! SyntaxCheckers_typescript_tsc_IsAvailable()$/;"	f
SyntaxCheckers_vala_valac_GetHighlightRegex	bundle/syntastic/syntax_checkers/vala/valac.vim	/^function! SyntaxCheckers_vala_valac_GetHighlightRegex(pos)$/;"	f
SyntaxCheckers_vala_valac_GetLocList	bundle/syntastic/syntax_checkers/vala/valac.vim	/^function! SyntaxCheckers_vala_valac_GetLocList()$/;"	f
SyntaxCheckers_vala_valac_IsAvailable	bundle/syntastic/syntax_checkers/vala/valac.vim	/^function! SyntaxCheckers_vala_valac_IsAvailable()$/;"	f
SyntaxCheckers_vhdl_ghdl_GetLocList	bundle/syntastic/syntax_checkers/vhdl/ghdl.vim	/^function! SyntaxCheckers_vhdl_ghdl_GetLocList()$/;"	f
SyntaxCheckers_vhdl_ghdl_IsAvailable	bundle/syntastic/syntax_checkers/vhdl/ghdl.vim	/^function! SyntaxCheckers_vhdl_ghdl_IsAvailable()$/;"	f
SyntaxCheckers_xhtml_tidy_GetLocList	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^function! SyntaxCheckers_xhtml_tidy_GetLocList()$/;"	f
SyntaxCheckers_xhtml_tidy_IsAvailable	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^function! SyntaxCheckers_xhtml_tidy_IsAvailable()$/;"	f
SyntaxCheckers_xml_xmllint_GetLocList	bundle/syntastic/syntax_checkers/xml/xmllint.vim	/^function! SyntaxCheckers_xml_xmllint_GetLocList()$/;"	f
SyntaxCheckers_xml_xmllint_IsAvailable	bundle/syntastic/syntax_checkers/xml/xmllint.vim	/^function! SyntaxCheckers_xml_xmllint_IsAvailable()$/;"	f
SyntaxCheckers_xslt_xmllint_GetLocList	bundle/syntastic/syntax_checkers/xslt/xmllint.vim	/^function! SyntaxCheckers_xslt_xmllint_GetLocList()$/;"	f
SyntaxCheckers_xslt_xmllint_IsAvailable	bundle/syntastic/syntax_checkers/xslt/xmllint.vim	/^function! SyntaxCheckers_xslt_xmllint_IsAvailable()$/;"	f
SyntaxCheckers_yaml_jsyaml_GetLocList	bundle/syntastic/syntax_checkers/yaml/jsyaml.vim	/^function! SyntaxCheckers_yaml_jsyaml_GetLocList()$/;"	f
SyntaxCheckers_yaml_jsyaml_IsAvailable	bundle/syntastic/syntax_checkers/yaml/jsyaml.vim	/^function! SyntaxCheckers_yaml_jsyaml_IsAvailable()$/;"	f
SyntaxCheckers_z80_z80syntaxchecker_GetLocList	bundle/syntastic/syntax_checkers/z80/z80syntaxchecker.vim	/^function! SyntaxCheckers_z80_z80syntaxchecker_GetLocList()$/;"	f
SyntaxCheckers_z80_z80syntaxchecker_IsAvailable	bundle/syntastic/syntax_checkers/z80/z80syntaxchecker.vim	/^function! SyntaxCheckers_z80_z80syntaxchecker_IsAvailable()$/;"	f
SyntaxCheckers_zpt_zptlint_GetLocList	bundle/syntastic/syntax_checkers/zpt/zptlint.vim	/^function! SyntaxCheckers_zpt_zptlint_GetLocList()$/;"	f
SyntaxCheckers_zpt_zptlint_IsAvailable	bundle/syntastic/syntax_checkers/zpt/zptlint.vim	/^function! SyntaxCheckers_zpt_zptlint_IsAvailable()$/;"	f
SyntaxCheckers_zsh_zsh_GetLocList	bundle/syntastic/syntax_checkers/zsh/zsh.vim	/^function! SyntaxCheckers_zsh_zsh_GetLocList()$/;"	f
SyntaxCheckers_zsh_zsh_IsAvailable	bundle/syntastic/syntax_checkers/zsh/zsh.vim	/^function! SyntaxCheckers_zsh_zsh_IsAvailable()$/;"	f
TComment	bundle/tComment/plugin/tcomment.vim	/^command! -bang -range -nargs=* -complete=customlist,tcomment#CompleteArgs TComment$/;"	c
TCommentAs	bundle/tComment/plugin/tcomment.vim	/^command! -bang -complete=customlist,tcomment#Complete -range -nargs=+ TCommentAs $/;"	c
TCommentBlock	bundle/tComment/plugin/tcomment.vim	/^command! -bang -range -nargs=* -complete=customlist,tcomment#CompleteArgs TCommentBlock$/;"	c
TCommentInline	bundle/tComment/plugin/tcomment.vim	/^command! -bang -range -nargs=* -complete=customlist,tcomment#CompleteArgs TCommentInline$/;"	c
TCommentMaybeInline	bundle/tComment/plugin/tcomment.vim	/^command! -bang -range -nargs=* -complete=customlist,tcomment#CompleteArgs TCommentMaybeInline$/;"	c
TCommentRight	bundle/tComment/plugin/tcomment.vim	/^command! -bang -range -nargs=* -complete=customlist,tcomment#CompleteArgs TCommentRight$/;"	c
TESTS	bundle/delimitMate/Makefile	/^TESTS=$(wildcard autoload\/*Tests.vim)$/;"	m
Tagbar	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 Tagbar              call tagbar#ToggleWindow()$/;"	c
TagbarBalloonExpr	bundle/tagbar/autoload/tagbar.vim	/^function! TagbarBalloonExpr() abort$/;"	f
TagbarClose	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarClose         call tagbar#CloseWindow()$/;"	c
TagbarCurrentTag	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarCurrentTag    echo tagbar#currenttag('%s', 'No current tag', <f-args>)$/;"	c
TagbarDebug	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarDebug         call tagbar#StartDebug(<f-args>)$/;"	c
TagbarDebugEnd	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarDebugEnd      call tagbar#StopDebug()$/;"	c
TagbarGetTypeConfig	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=1 TagbarGetTypeConfig call tagbar#gettypeconfig(<f-args>)$/;"	c
TagbarOpen	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarOpen          call tagbar#OpenWindow(<f-args>)$/;"	c
TagbarOpenAutoClose	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarOpenAutoClose call tagbar#OpenWindow('fcj')$/;"	c
TagbarSession	bundle/tagbar/plugin/tagbar.vim	/^augroup TagbarSession$/;"	a
TagbarSetFoldlevel	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=1 -bang TagbarSetFoldlevel  call tagbar#SetFoldLevel(<args>, <bang>0)$/;"	c
TagbarShowTag	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarShowTag       call tagbar#highlighttag(1, 1)$/;"	c
TagbarToggle	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarToggle        call tagbar#ToggleWindow()$/;"	c
TagbarTogglePause	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarTogglePause   call tagbar#toggle_pause()$/;"	c
TaskList	bundle/TaskList.vim/plugin/tasklist.vim	/^command! TaskList call s:TaskList()$/;"	c
TaskList	bundle/TaskList.vim/plugin/tasklist.vim	/^function! s:TaskList()$/;"	f
TerminatePython	bundle/SingleCompile/autoload/SingleCompileAsync.vim	/^function! s:TerminatePython() " {{{2$/;"	f
TestMappingsDo	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:TestMappingsDo() "{{{$/;"	f
TidyEncOptByFenc	bundle/syntastic/syntax_checkers/html/tidy.vim	/^function! s:TidyEncOptByFenc()$/;"	f
TidyEncOptByFenc	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^function! s:TidyEncOptByFenc()$/;"	f
ToggleAutoclose	bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleAutoclose() abort$/;"	f
ToggleByFname	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleByFname()$/;"	f
ToggleFocus	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleFocus()$/;"	f
ToggleFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleFold() abort$/;"	f
ToggleHelp	bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleHelp() abort$/;"	f
ToggleHideNonPublicTags	bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleHideNonPublicTags() abort$/;"	f
ToggleKeyLoop	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleKeyLoop()$/;"	f
ToggleMode	bundle/syntastic/plugin/syntastic.vim	/^function! s:ToggleMode()$/;"	f
ToggleRegex	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleRegex()$/;"	f
ToggleSort	bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleSort() abort$/;"	f
ToggleType	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleType(dir)$/;"	f
ToggleWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleWindow() abort$/;"	f
TransformUserTypeDef	bundle/tagbar/autoload/tagbar.vim	/^function! s:TransformUserTypeDef(def) abort$/;"	f
TreeDirNode.AbsoluteTreeRoot	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.AbsoluteTreeRoot()$/;"	f
TreeDirNode.GetSelected	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.GetSelected()$/;"	f
TreeDirNode.New	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.New(path)$/;"	f
TreeDirNode._initChildren	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._initChildren(silent)$/;"	f
TreeDirNode._openInNewTab	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openInNewTab()$/;"	f
TreeDirNode._openRecursively2	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openRecursively2(forceOpen)$/;"	f
TreeDirNode.activate	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.activate(...)$/;"	f
TreeDirNode.addChild	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.addChild(treenode, inOrder)$/;"	f
TreeDirNode.close	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.close()$/;"	f
TreeDirNode.closeChildren	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.closeChildren()$/;"	f
TreeDirNode.createChild	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.createChild(path, inOrder)$/;"	f
TreeDirNode.findNode	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.findNode(path)$/;"	f
TreeDirNode.getChild	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChild(path)$/;"	f
TreeDirNode.getChildByIndex	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildByIndex(indx, visible)$/;"	f
TreeDirNode.getChildCount	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildCount()$/;"	f
TreeDirNode.getChildIndex	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildIndex(path)$/;"	f
TreeDirNode.getVisibleChildCount	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildCount()$/;"	f
TreeDirNode.getVisibleChildren	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildren()$/;"	f
TreeDirNode.hasVisibleChildren	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.hasVisibleChildren()$/;"	f
TreeDirNode.open	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.open(...)$/;"	f
TreeDirNode.openAlong	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openAlong(...)$/;"	f
TreeDirNode.openExplorer	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openExplorer()$/;"	f
TreeDirNode.openInNewTab	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openInNewTab(options)$/;"	f
TreeDirNode.openRecursively	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openRecursively()$/;"	f
TreeDirNode.refresh	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refresh()$/;"	f
TreeDirNode.removeChild	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.removeChild(treenode)$/;"	f
TreeDirNode.reveal	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.reveal(path)$/;"	f
TreeDirNode.sortChildren	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.sortChildren()$/;"	f
TreeDirNode.toggleOpen	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.toggleOpen(...)$/;"	f
TreeDirNode.transplantChild	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.transplantChild(newNode)$/;"	f
TreeFileNode.GetRootForTab	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetRootForTab()$/;"	f
TreeFileNode.GetRootLineNum	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetRootLineNum()$/;"	f
TreeFileNode.GetSelected	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetSelected()$/;"	f
TreeFileNode.New	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.New(path)$/;"	f
TreeFileNode._renderToString	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode._renderToString(depth, drawText, vertMap, isLastChild)$/;"	f
TreeFileNode.activate	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.activate(...)$/;"	f
TreeFileNode.bookmark	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.bookmark(name)$/;"	f
TreeFileNode.cacheParent	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.cacheParent()$/;"	f
TreeFileNode.clearBookmarks	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.clearBookmarks()$/;"	f
TreeFileNode.copy	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.copy(dest)$/;"	f
TreeFileNode.delete	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.delete()$/;"	f
TreeFileNode.displayString	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.displayString()$/;"	f
TreeFileNode.equals	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.equals(treenode)$/;"	f
TreeFileNode.findNode	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findNode(path)$/;"	f
TreeFileNode.findOpenDirSiblingWithVisibleChildren	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findOpenDirSiblingWithVisibleChildren(direction)$/;"	f
TreeFileNode.findSibling	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findSibling(direction)$/;"	f
TreeFileNode.getLineNum	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.getLineNum()$/;"	f
TreeFileNode.isRoot	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isRoot()$/;"	f
TreeFileNode.isVisible	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isVisible()$/;"	f
TreeFileNode.makeRoot	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.makeRoot()$/;"	f
TreeFileNode.open	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.open(...)$/;"	f
TreeFileNode.openInNewTab	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openInNewTab(options)$/;"	f
TreeFileNode.openSplit	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openSplit()$/;"	f
TreeFileNode.openVSplit	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openVSplit()$/;"	f
TreeFileNode.putCursorHere	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.putCursorHere(isJump, recurseUpward)$/;"	f
TreeFileNode.refresh	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refresh()$/;"	f
TreeFileNode.rename	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.rename(newName)$/;"	f
TreeFileNode.renderToString	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.renderToString()$/;"	f
TriggerSnippet	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! TriggerSnippet()$/;"	f
TrimRight	bundle/php_getset.vim/ftplugin/php_getset.vim	/^  function s:TrimRight(text)$/;"	f
Type	bundle/delimitMate/autoload/delimitMateTests.vim	/^	function! Type(name, input, output, options, ...) " {{{$/;"	f
TypeInfo.New	bundle/tagbar/autoload/tagbar.vim	/^function! s:TypeInfo.New(...) abort dict$/;"	f
TypeInfo.createKinddict	bundle/tagbar/autoload/tagbar.vim	/^function! s:TypeInfo.createKinddict() abort dict$/;"	f
TypeInfo.getKind	bundle/tagbar/autoload/tagbar.vim	/^function! s:TypeInfo.getKind(kind) abort dict$/;"	f
Unique	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:Unique(list)$/;"	f
Unmap	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:Unmap() " {{{$/;"	f
UnreplaceInLine	bundle/tComment/autoload/tcomment.vim	/^function! s:UnreplaceInLine(text) "{{{3$/;"	f
Update	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Update(str)$/;"	f
UpdateChangedSnip	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:UpdateChangedSnip(entering)$/;"	f
UpdateDoc	bundle/TaskList.vim/plugin/tasklist.vim	/^function! s:UpdateDoc()$/;"	f
UpdateErrors	bundle/syntastic/plugin/syntastic.vim	/^function! s:UpdateErrors(auto_invoked, ...)$/;"	f
UpdatePlaceholderTabStops	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:UpdatePlaceholderTabStops()$/;"	f
UpdateTabStops	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:UpdateTabStops()$/;"	f
UpdateVars	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:UpdateVars()$/;"	f
Usage	bundle/syntastic/syntax_checkers/perl/efm_perl.pl	/^Usage:$/;"	l
UserCmd	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:UserCmd(lscmd)$/;"	f
UsingListMappings	bundle/ack.vim/autoload/ack.vim	/^function! s:UsingListMappings() "{{{$/;"	f
UsingLocList	bundle/ack.vim/autoload/ack.vim	/^function! s:UsingLocList() "{{{$/;"	f
Util1	bundle/vim-airline/t/util.vim	/^function! Util1()$/;"	f
Util2	bundle/vim-airline/t/util.vim	/^function! Util2()$/;"	f
Util3	bundle/vim-airline/t/util.vim	/^function! Util3(...)$/;"	f
VERSION	bundle/delimitMate/Makefile	/^VERSION=$(shell perl -ne 'if (\/\\*\\sCurrent\\srelease:\/) {s\/^\\s+(\\d+\\.\\S+)\\s.*$$\/\\1\/;print}' $(DOC))$/;"	m
VERSION	bundle/syntastic/syntax_checkers/perl/efm_perl.pl	/^use constant VERSION => 0.2;$/;"	c
VIM	bundle/delimitMate/Makefile	/^VIM=\/usr\/bin\/vim$/;"	m
VIMFOLDER	bundle/delimitMate/Makefile	/^VIMFOLDER=~\/.vim\/$/;"	m
Ve	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Ve       :execute s:find(<count>,'edit<bang>',<q-args>,0)$/;"	c
Vedit	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vedit    :execute s:find(<count>,'edit<bang>',<q-args>,0)$/;"	c
VimMultiuserTests	bundle/vim-multiuser/plugin/tests/vim_multiuser_tests.py	/^class VimMultiuserTests(unittest.TestCase):$/;"	c
VisualPasta	bundle/vim-pasta/plugin/pasta.vim	/^function! s:VisualPasta()$/;"	f
Vopen	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vopen    :execute s:find(<count>,'edit<bang>',<q-args>,1)$/;"	c
Vpedit	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vpedit   :execute s:find(<count>,'pedit',<q-args>,<bang>1)$/;"	c
Vread	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vread    :execute s:find(<count>,'read',<q-args>,<bang>1)$/;"	c
Vsplit	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vsplit   :execute s:find(<count>,'split',<q-args>,<bang>1)$/;"	c
Vtabedit	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vtabedit :execute s:find(<count>,'tabedit',<q-args>,<bang>1)$/;"	c
Vvsplit	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vvsplit  :execute s:find(<count>,'vsplit',<q-args>,<bang>1)$/;"	c
Warn	bundle/ack.vim/autoload/ack.vim	/^function! s:Warn(msg) "{{{$/;"	f
Wholematch	bundle/matchit.zip/plugin/matchit.vim	/^fun! s:Wholematch(string, pat, start)$/;"	f
Wq	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Wq(force,...) abort$/;"	f
Write	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Write(force,...) abort$/;"	f
ZoomWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:ZoomWindow() abort$/;"	f
[%	bundle/matchit.zip/plugin/matchit.vim	/^nnoremap <silent> [% :<C-U>call <SID>MultiMatch("bW", "n") <CR>$/;"	m
[%	bundle/matchit.zip/plugin/matchit.vim	/^onoremap <silent> [% v:<C-U>call <SID>MultiMatch("bW", "o") <CR>$/;"	m
[%	bundle/matchit.zip/plugin/matchit.vim	/^vmap [% <Esc>[%m'gv``$/;"	m
]%	bundle/matchit.zip/plugin/matchit.vim	/^nnoremap <silent> ]% :<C-U>call <SID>MultiMatch("W",  "n") <CR>$/;"	m
]%	bundle/matchit.zip/plugin/matchit.vim	/^onoremap <silent> ]% v:<C-U>call <SID>MultiMatch("W",  "o") <CR>$/;"	m
]%	bundle/matchit.zip/plugin/matchit.vim	/^vmap ]% <Esc>]%m'gv``$/;"	m
__init__	bundle/vim-multiuser/plugin/vim_multiuser_server.py	/^    def __init__(self, host, port, callback):$/;"	m	class:MUClient
__init__	bundle/vim-multiuser/plugin/vim_multiuser_server.py	/^    def __init__(self, host, port, callback):$/;"	m	class:MUServer
__init__	bundle/vim-multiuser/plugin/vim_multiuser_server.py	/^    def __init__(self, sock, callback):$/;"	m	class:MUSessionHandler
a%	bundle/matchit.zip/plugin/matchit.vim	/^vmap a% <Esc>[%v]%$/;"	m
abolish_l	bundle/vim-rails/plugin/rails.vim	/^function! s:abolish_l(word)$/;"	f
abolish_setup	bundle/vim-rails/plugin/rails.vim	/^function! s:abolish_setup()$/;"	f
abolish_t	bundle/vim-rails/plugin/rails.vim	/^function! s:abolish_t(word)$/;"	f
ack#Ack	bundle/ack.vim/autoload/ack.vim	/^function! ack#Ack(cmd, args) "{{{$/;"	f
ack#AckFromSearch	bundle/ack.vim/autoload/ack.vim	/^function! ack#AckFromSearch(cmd, args) "{{{$/;"	f
ack#AckHelp	bundle/ack.vim/autoload/ack.vim	/^function! ack#AckHelp(cmd, args) "{{{$/;"	f
ack#AckWindow	bundle/ack.vim/autoload/ack.vim	/^function! ack#AckWindow(cmd, args) "{{{$/;"	f
ack#ShowResults	bundle/ack.vim/autoload/ack.vim	/^function! ack#ShowResults() "{{{$/;"	f
activateAll	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:activateAll()$/;"	f
activateBookmark	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:activateBookmark(bm)$/;"	f
activateDirNode	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:activateDirNode(node)$/;"	f
activateFileNode	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:activateFileNode(node)$/;"	f
add_methods	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
add_methods	bundle/vim-rails/autoload/rails.vim	/^function! s:add_methods(namespace, method_names)$/;"	f
add_section	bundle/vim-airline/autoload/airline/extensions/default.vim	/^  function s:add_section(builder, context, key)$/;"	f
addfilecmds	bundle/vim-rails/autoload/rails.vim	/^function! s:addfilecmds(type)$/;"	f
addtomrufs	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:addtomrufs(fname)$/;"	f
airline#add_inactive_statusline_func	bundle/vim-airline/autoload/airline.vim	/^function! airline#add_inactive_statusline_func(name)$/;"	f
airline#add_statusline_func	bundle/vim-airline/autoload/airline.vim	/^function! airline#add_statusline_func(name)$/;"	f
airline#add_statusline_funcref	bundle/vim-airline/autoload/airline.vim	/^function! airline#add_statusline_funcref(function)$/;"	f
airline#builder#new	bundle/vim-airline/autoload/airline/builder.vim	/^function! airline#builder#new(context)$/;"	f
airline#check_mode	bundle/vim-airline/autoload/airline.vim	/^function! airline#check_mode(winnr)$/;"	f
airline#cmdwinenter	bundle/vim-airline/plugin/airline.vim	/^function airline#cmdwinenter(...)$/;"	f
airline#debug#profile1	bundle/vim-airline/autoload/airline/debug.vim	/^function! airline#debug#profile1()$/;"	f
airline#debug#profile2	bundle/vim-airline/autoload/airline/debug.vim	/^function! airline#debug#profile2()$/;"	f
airline#debug#profile3	bundle/vim-airline/autoload/airline/debug.vim	/^function! airline#debug#profile3()$/;"	f
airline#deprecation#check	bundle/vim-airline/autoload/airline/deprecation.vim	/^function! airline#deprecation#check()$/;"	f
airline#extensions#append_to_section	bundle/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#append_to_section(name, value)$/;"	f
airline#extensions#apply	bundle/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#apply(...)$/;"	f
airline#extensions#apply_left_override	bundle/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#apply_left_override(section1, section2)$/;"	f
airline#extensions#branch#get_head	bundle/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#get_head()$/;"	f
airline#extensions#branch#head	bundle/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#head()$/;"	f
airline#extensions#branch#init	bundle/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#init(ext)$/;"	f
airline#extensions#bufferline#init	bundle/vim-airline/autoload/airline/extensions/bufferline.vim	/^function! airline#extensions#bufferline#init(ext)$/;"	f
airline#extensions#capslock#init	bundle/vim-airline/autoload/airline/extensions/capslock.vim	/^function! airline#extensions#capslock#init(ext)$/;"	f
airline#extensions#capslock#status	bundle/vim-airline/autoload/airline/extensions/capslock.vim	/^function! airline#extensions#capslock#status()$/;"	f
airline#extensions#commandt#apply	bundle/vim-airline/autoload/airline/extensions/commandt.vim	/^function! airline#extensions#commandt#apply(...)$/;"	f
airline#extensions#commandt#init	bundle/vim-airline/autoload/airline/extensions/commandt.vim	/^function! airline#extensions#commandt#init(ext)$/;"	f
airline#extensions#csv#apply	bundle/vim-airline/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#apply(...)$/;"	f
airline#extensions#csv#get_column	bundle/vim-airline/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#get_column()$/;"	f
airline#extensions#csv#init	bundle/vim-airline/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#init(ext)$/;"	f
airline#extensions#ctrlp#apply	bundle/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#apply(...)$/;"	f
airline#extensions#ctrlp#ctrlp_airline	bundle/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#ctrlp_airline(...)$/;"	f
airline#extensions#ctrlp#ctrlp_airline_status	bundle/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#ctrlp_airline_status(...)$/;"	f
airline#extensions#ctrlp#generate_color_map	bundle/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#generate_color_map(dark, light, white)$/;"	f
airline#extensions#ctrlp#init	bundle/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#init(ext)$/;"	f
airline#extensions#ctrlp#load_theme	bundle/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#load_theme(palette)$/;"	f
airline#extensions#default#apply	bundle/vim-airline/autoload/airline/extensions/default.vim	/^function! airline#extensions#default#apply(builder, context)$/;"	f
airline#extensions#eclim#creat_line	bundle/vim-airline/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#creat_line(...)$/;"	f
airline#extensions#eclim#get_warnings	bundle/vim-airline/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#get_warnings()$/;"	f
airline#extensions#eclim#init	bundle/vim-airline/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#init(ext)$/;"	f
airline#extensions#example#apply	bundle/vim-airline/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#apply(...)$/;"	f
airline#extensions#example#get_cats	bundle/vim-airline/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#get_cats()$/;"	f
airline#extensions#example#init	bundle/vim-airline/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#init(ext)$/;"	f
airline#extensions#hunks#get_hunks	bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^function! airline#extensions#hunks#get_hunks()$/;"	f
airline#extensions#hunks#init	bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^function! airline#extensions#hunks#init(ext)$/;"	f
airline#extensions#load	bundle/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#load()$/;"	f
airline#extensions#load_theme	bundle/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#load_theme()$/;"	f
airline#extensions#netrw#apply	bundle/vim-airline/autoload/airline/extensions/netrw.vim	/^function! airline#extensions#netrw#apply(...)$/;"	f
airline#extensions#netrw#init	bundle/vim-airline/autoload/airline/extensions/netrw.vim	/^function! airline#extensions#netrw#init(ext)$/;"	f
airline#extensions#netrw#sortstring	bundle/vim-airline/autoload/airline/extensions/netrw.vim	/^function! airline#extensions#netrw#sortstring()$/;"	f
airline#extensions#nrrwrgn#apply	bundle/vim-airline/autoload/airline/extensions/nrrwrgn.vim	/^function! airline#extensions#nrrwrgn#apply(...)$/;"	f
airline#extensions#nrrwrgn#init	bundle/vim-airline/autoload/airline/extensions/nrrwrgn.vim	/^function! airline#extensions#nrrwrgn#init(ext)$/;"	f
airline#extensions#prepend_to_section	bundle/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#prepend_to_section(name, value)$/;"	f
airline#extensions#promptline#init	bundle/vim-airline/autoload/airline/extensions/promptline.vim	/^function! airline#extensions#promptline#init(ext)$/;"	f
airline#extensions#promptline#set_prompt_colors	bundle/vim-airline/autoload/airline/extensions/promptline.vim	/^function! airline#extensions#promptline#set_prompt_colors(palette)$/;"	f
airline#extensions#quickfix#apply	bundle/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#apply(...)$/;"	f
airline#extensions#quickfix#init	bundle/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#init(ext)$/;"	f
airline#extensions#syntastic#get_warnings	bundle/vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#get_warnings()$/;"	f
airline#extensions#syntastic#init	bundle/vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#init(ext)$/;"	f
airline#extensions#tabline#formatters#default#format	bundle/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^function! airline#extensions#tabline#formatters#default#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#default#wrap_name	bundle/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^function! airline#extensions#tabline#formatters#default#wrap_name(bufnr, buffer_name)$/;"	f
airline#extensions#tabline#formatters#unique_tail#format	bundle/vim-airline/autoload/airline/extensions/tabline/formatters/unique_tail.vim	/^function! airline#extensions#tabline#formatters#unique_tail#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#unique_tail_improved#format	bundle/vim-airline/autoload/airline/extensions/tabline/formatters/unique_tail_improved.vim	/^function! airline#extensions#tabline#formatters#unique_tail_improved#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#get	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#get()$/;"	f
airline#extensions#tabline#get_buffer_name	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#get_buffer_name(nr)$/;"	f
airline#extensions#tabline#init	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#init(ext)$/;"	f
airline#extensions#tabline#load_theme	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#load_theme(palette)$/;"	f
airline#extensions#tabline#title	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#title(n)$/;"	f
airline#extensions#tagbar#currenttag	bundle/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#currenttag()$/;"	f
airline#extensions#tagbar#get_status	bundle/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#get_status(...)$/;"	f
airline#extensions#tagbar#inactive_apply	bundle/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#inactive_apply(...)$/;"	f
airline#extensions#tagbar#init	bundle/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#init(ext)$/;"	f
airline#extensions#tmuxline#init	bundle/vim-airline/autoload/airline/extensions/tmuxline.vim	/^function! airline#extensions#tmuxline#init(ext)$/;"	f
airline#extensions#tmuxline#set_tmux_colors	bundle/vim-airline/autoload/airline/extensions/tmuxline.vim	/^function! airline#extensions#tmuxline#set_tmux_colors(palette)$/;"	f
airline#extensions#undotree#apply	bundle/vim-airline/autoload/airline/extensions/undotree.vim	/^function! airline#extensions#undotree#apply(...)$/;"	f
airline#extensions#undotree#init	bundle/vim-airline/autoload/airline/extensions/undotree.vim	/^function! airline#extensions#undotree#init(ext)$/;"	f
airline#extensions#unite#apply	bundle/vim-airline/autoload/airline/extensions/unite.vim	/^function! airline#extensions#unite#apply(...)$/;"	f
airline#extensions#unite#init	bundle/vim-airline/autoload/airline/extensions/unite.vim	/^function! airline#extensions#unite#init(ext)$/;"	f
airline#extensions#virtualenv#apply	bundle/vim-airline/autoload/airline/extensions/virtualenv.vim	/^function! airline#extensions#virtualenv#apply(...)$/;"	f
airline#extensions#virtualenv#init	bundle/vim-airline/autoload/airline/extensions/virtualenv.vim	/^function! airline#extensions#virtualenv#init(ext)$/;"	f
airline#extensions#whitespace#check	bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#check()$/;"	f
airline#extensions#whitespace#init	bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#init(...)$/;"	f
airline#extensions#whitespace#toggle	bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#toggle()$/;"	f
airline#extensions#windowswap#get_status	bundle/vim-airline/autoload/airline/extensions/windowswap.vim	/^function! airline#extensions#windowswap#get_status()$/;"	f
airline#extensions#windowswap#init	bundle/vim-airline/autoload/airline/extensions/windowswap.vim	/^function! airline#extensions#windowswap#init(ext)$/;"	f
airline#highlighter#add_accent	bundle/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#add_accent(accent)$/;"	f
airline#highlighter#add_separator	bundle/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#add_separator(from, to, inverse)$/;"	f
airline#highlighter#exec	bundle/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#exec(group, colors)$/;"	f
airline#highlighter#get_highlight	bundle/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#get_highlight(group, ...)$/;"	f
airline#highlighter#get_highlight2	bundle/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#get_highlight2(fg, bg, ...)$/;"	f
airline#highlighter#highlight	bundle/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#highlight(modes)$/;"	f
airline#highlighter#highlight_modified_inactive	bundle/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#highlight_modified_inactive(bufnr)$/;"	f
airline#highlighter#load_theme	bundle/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#load_theme()$/;"	f
airline#init#bootstrap	bundle/vim-airline/autoload/airline/init.vim	/^function! airline#init#bootstrap()$/;"	f
airline#init#sections	bundle/vim-airline/autoload/airline/init.vim	/^function! airline#init#sections()$/;"	f
airline#load_theme	bundle/vim-airline/autoload/airline.vim	/^function! airline#load_theme()$/;"	f
airline#parts#define	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define(key, config)$/;"	f
airline#parts#define_accent	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_accent(key, accent)$/;"	f
airline#parts#define_condition	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_condition(key, predicate)$/;"	f
airline#parts#define_empty	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_empty(keys)$/;"	f
airline#parts#define_function	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_function(key, name)$/;"	f
airline#parts#define_minwidth	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_minwidth(key, width)$/;"	f
airline#parts#define_raw	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_raw(key, raw)$/;"	f
airline#parts#define_text	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_text(key, text)$/;"	f
airline#parts#ffenc	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#ffenc()$/;"	f
airline#parts#filetype	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#filetype()$/;"	f
airline#parts#get	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#get(key)$/;"	f
airline#parts#iminsert	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#iminsert()$/;"	f
airline#parts#mode	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#mode()$/;"	f
airline#parts#paste	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#paste()$/;"	f
airline#parts#readonly	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#readonly()$/;"	f
airline#remove_statusline_func	bundle/vim-airline/autoload/airline.vim	/^function! airline#remove_statusline_func(name)$/;"	f
airline#section#create	bundle/vim-airline/autoload/airline/section.vim	/^function! airline#section#create(parts)$/;"	f
airline#section#create_left	bundle/vim-airline/autoload/airline/section.vim	/^function! airline#section#create_left(parts)$/;"	f
airline#section#create_right	bundle/vim-airline/autoload/airline/section.vim	/^function! airline#section#create_right(parts)$/;"	f
airline#statusline	bundle/vim-airline/autoload/airline.vim	/^function! airline#statusline(winnr)$/;"	f
airline#switch_matching_theme	bundle/vim-airline/autoload/airline.vim	/^function! airline#switch_matching_theme()$/;"	f
airline#switch_theme	bundle/vim-airline/autoload/airline.vim	/^function! airline#switch_theme(name)$/;"	f
airline#themes#base16#refresh	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  function! airline#themes#base16#refresh()$/;"	f
airline#themes#generate_color_map	bundle/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#generate_color_map(sect1, sect2, sect3, ...)$/;"	f
airline#themes#get_highlight	bundle/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#get_highlight(group, ...)$/;"	f
airline#themes#get_highlight2	bundle/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#get_highlight2(fg, bg, ...)$/;"	f
airline#themes#hybrid#refresh	bundle/vim-airline/autoload/airline/themes/hybrid.vim	/^function! airline#themes#hybrid#refresh()$/;"	f
airline#themes#jellybeans#refresh	bundle/vim-airline/autoload/airline/themes/jellybeans.vim	/^function! airline#themes#jellybeans#refresh()$/;"	f
airline#themes#kalisi#refresh	bundle/vim-airline/autoload/airline/themes/kalisi.vim	/^function! airline#themes#kalisi#refresh()$/;"	f
airline#themes#lucius#refresh	bundle/vim-airline/autoload/airline/themes/lucius.vim	/^function! airline#themes#lucius#refresh()$/;"	f
airline#themes#monochrome#refresh	bundle/vim-airline/autoload/airline/themes/monochrome.vim	/^function! airline#themes#monochrome#refresh()$/;"	f
airline#themes#patch	bundle/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#patch(palette)$/;"	f
airline#themes#solarized#refresh	bundle/vim-airline/autoload/airline/themes/solarized.vim	/^function! airline#themes#solarized#refresh()$/;"	f
airline#themes#tomorrow#refresh	bundle/vim-airline/autoload/airline/themes/tomorrow.vim	/^function! airline#themes#tomorrow#refresh()$/;"	f
airline#themes#zenburn#refresh	bundle/vim-airline/autoload/airline/themes/zenburn.vim	/^function! airline#themes#zenburn#refresh()$/;"	f
airline#update_statusline	bundle/vim-airline/autoload/airline.vim	/^function! airline#update_statusline()$/;"	f
airline#util#append	bundle/vim-airline/autoload/airline/util.vim	/^function! airline#util#append(text, minwidth)$/;"	f
airline#util#exec_funcrefs	bundle/vim-airline/autoload/airline/util.vim	/^  function! airline#util#exec_funcrefs(list, ...)$/;"	f
airline#util#getwinvar	bundle/vim-airline/autoload/airline/util.vim	/^  function! airline#util#getwinvar(winnr, key, def)$/;"	f
airline#util#prepend	bundle/vim-airline/autoload/airline/util.vim	/^function! airline#util#prepend(text, minwidth)$/;"	f
airline#util#wrap	bundle/vim-airline/autoload/airline/util.vim	/^function! airline#util#wrap(text, minwidth)$/;"	f
airline_theme	bundle/vim-airline/plugin/airline.vim	/^function! s:airline_theme(...)$/;"	f
airline_toggle	bundle/vim-airline/plugin/airline.vim	/^function! s:airline_toggle()$/;"	f
app_commands	bundle/vim-rails/autoload/rails.vim	/^function! s:app_commands() dict abort$/;"	f
app_db_config	bundle/vim-rails/autoload/rails.vim	/^function! s:app_db_config(environment) dict$/;"	f
app_db_url	bundle/vim-rails/autoload/rails.vim	/^function! s:app_db_url(...) dict abort$/;"	f
app_dbext_settings	bundle/vim-rails/autoload/rails.vim	/^function! s:app_dbext_settings(environment) dict abort$/;"	f
app_default_locale	bundle/vim-rails/autoload/rails.vim	/^function! s:app_default_locale() dict abort$/;"	f
app_engines	bundle/vim-rails/autoload/rails.vim	/^function! s:app_engines() dict abort$/;"	f
app_environments	bundle/vim-rails/autoload/rails.vim	/^function! s:app_environments() dict$/;"	f
app_eval	bundle/vim-rails/autoload/rails.vim	/^function! s:app_eval(ruby,...) dict abort$/;"	f
app_execute_rails_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_execute_rails_command(cmd) dict abort$/;"	f
app_file	bundle/vim-rails/autoload/rails.vim	/^function! s:app_file(name) dict abort$/;"	f
app_find_file	bundle/vim-rails/autoload/rails.vim	/^function! s:app_find_file(name, ...) dict abort$/;"	f
app_gems	bundle/vim-rails/autoload/rails.vim	/^function! s:app_gems() dict abort$/;"	f
app_generator_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_generator_command(bang,...) dict$/;"	f
app_generators	bundle/vim-rails/autoload/rails.vim	/^function! s:app_generators() dict abort$/;"	f
app_has	bundle/vim-rails/autoload/rails.vim	/^function! s:app_has(feature) dict$/;"	f
app_has_file	bundle/vim-rails/autoload/rails.vim	/^function! s:app_has_file(file) dict$/;"	f
app_has_gem	bundle/vim-rails/autoload/rails.vim	/^function! s:app_has_gem(gem) dict abort$/;"	f
app_has_path	bundle/vim-rails/autoload/rails.vim	/^function! s:app_has_path(path) dict$/;"	f
app_migration	bundle/vim-rails/autoload/rails.vim	/^function! s:app_migration(file) dict$/;"	f
app_named_route_file	bundle/vim-rails/autoload/rails.vim	/^function! s:app_named_route_file(route) dict abort$/;"	f
app_output_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_output_command(count, code) dict$/;"	f
app_path	bundle/vim-rails/autoload/rails.vim	/^function! s:app_path(...) dict$/;"	f
app_prepare_rails_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_prepare_rails_command(cmd) dict abort$/;"	f
app_projections	bundle/vim-rails/autoload/rails.vim	/^function! s:app_projections() dict abort$/;"	f
app_rake_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_rake_command(...) dict abort$/;"	f
app_rake_tasks	bundle/vim-rails/autoload/rails.vim	/^function! s:app_rake_tasks() dict abort$/;"	f
app_relglob	bundle/vim-rails/autoload/rails.vim	/^function! s:app_relglob(path,glob,...) dict$/;"	f
app_resolve_asset	bundle/vim-rails/autoload/rails.vim	/^function! s:app_resolve_asset(name, ...) dict abort$/;"	f
app_route_names	bundle/vim-rails/autoload/rails.vim	/^function! s:app_route_names() dict abort$/;"	f
app_ruby_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_ruby_command(cmd) dict abort$/;"	f
app_ruby_script_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_ruby_script_command(cmd) dict abort$/;"	f
app_script_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_script_command(bang,...) dict$/;"	f
app_server_binding	bundle/vim-rails/autoload/rails.vim	/^function! s:app_server_binding() dict abort$/;"	f
app_server_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_server_command(kill, bg, arg) dict abort$/;"	f
app_server_pid	bundle/vim-rails/autoload/rails.vim	/^function! s:app_server_pid() dict abort$/;"	f
app_start_rails_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_start_rails_command(cmd, ...) dict abort$/;"	f
app_stylesheet_suffix	bundle/vim-rails/autoload/rails.vim	/^function! s:app_stylesheet_suffix() dict abort$/;"	f
app_tags_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_tags_command() dict abort$/;"	f
app_test_suites	bundle/vim-rails/autoload/rails.vim	/^function! s:app_test_suites() dict$/;"	f
app_user_assertions	bundle/vim-rails/autoload/rails.vim	/^function! s:app_user_assertions() dict$/;"	f
app_user_classes	bundle/vim-rails/autoload/rails.vim	/^function! s:app_user_classes() dict$/;"	f
argmaps	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:argmaps(md, i)$/;"	f
args	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^function s:args()$/;"	f
args	bundle/syntastic/syntax_checkers/ruby/jruby.vim	/^function s:args()$/;"	f
article	bundle/vim-css3-syntax/test/test.css	/^article,$/;"	s
aside	bundle/vim-css3-syntax/test/test.css	/^aside,$/;"	s
asynchat	bundle/vim-multiuser/plugin/vim_multiuser_server.py	/^import asyncore, asynchat$/;"	i
asyncore	bundle/vim-multiuser/plugin/vim_multiuser_server.py	/^import asyncore, asynchat$/;"	i
at	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:at(str)$/;"	f
audio	bundle/vim-css3-syntax/test/test.css	/^audio,$/;"	s
autocamelize	bundle/vim-rails/autoload/rails.vim	/^function! s:autocamelize(files,test)$/;"	f
autocmds	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:autocmds()$/;"	f
b	bundle/vim-css3-syntax/test/test.css	/^.layout::slot(b) {$/;"	s
b 	bundle/vim-css-color/tests/example.css	/^b { background: #335599 }$/;"	s
b:	bundle/vim-markdown/syntax/markdown.vim	/^    let b:{matchstr(s:type,'[^.]*')}_subtype = matchstr(s:type,'\\.\\zs.*')$/;"	v
b:current_syntax	bundle/php.vim/syntax/php.vim	/^let b:current_syntax = "php"$/;"	v
b:current_syntax	bundle/tagbar/syntax/tagbar.vim	/^let b:current_syntax = "tagbar"$/;"	v
b:current_syntax	bundle/vim-markdown/syntax/markdown.vim	/^let b:current_syntax = "markdown"$/;"	v
b:did_phpgetset_ftplugin	bundle/php_getset.vim/ftplugin/php_getset.vim	/^let b:did_phpgetset_ftplugin = 1$/;"	v
b:loaded_plugin_pdv	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^let b:loaded_plugin_pdv = 1$/;"	v
b:sql_type_override	bundle/php.vim/syntax/php.vim	/^    let b:sql_type_override='mysql'$/;"	v
b:undo_ftplugin	bundle/vim-markdown/ftplugin/markdown.vim	/^  let b:undo_ftplugin .= " foldexpr< foldmethod<"$/;"	v
b:undo_ftplugin	bundle/vim-markdown/ftplugin/markdown.vim	/^  let b:undo_ftplugin .= "|setl cms< com< fo< flp<"$/;"	v
b:undo_ftplugin	bundle/vim-markdown/ftplugin/markdown.vim	/^  let b:undo_ftplugin = "setl cms< com< fo< flp<"$/;"	v
badwolf_tex	badwolf.vim	/^augroup badwolf_tex$/;"	a
bdi	bundle/vim-css3-syntax/test/test.css	/^bdi,$/;"	s
blockName	bundle/php.vim/scripts/update-vim-syntax.php	/^foreach ($blocks as $blockName => $blockLines) {$/;"	v
blocks	bundle/php.vim/scripts/update-vim-syntax.php	/^$blocks = array($/;"	v
broadcast	bundle/vim-multiuser/plugin/vim_multiuser_server.py	/^    def broadcast(self, msg):$/;"	m	class:MUServer
buffer	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer(...) abort$/;"	f
buffer_app	bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_app() dict abort$/;"	f
buffer_commit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_commit() dict abort$/;"	f
buffer_compare_age	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_compare_age(commit) dict abort$/;"	f
buffer_containing_commit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_containing_commit() dict abort$/;"	f
buffer_expand	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_expand(rev) dict abort$/;"	f
buffer_getline	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getline(lnum) dict abort$/;"	f
buffer_getline	bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_getline(...) dict abort$/;"	f
buffer_getvar	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getvar(var) dict abort$/;"	f
buffer_getvar	bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_getvar(varname) dict abort$/;"	f
buffer_lines	bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_lines() dict abort$/;"	f
buffer_name	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_name() dict abort$/;"	f
buffer_name	bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_name() dict abort$/;"	f
buffer_number	bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_number() dict abort$/;"	f
buffer_path	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_path(...) dict abort$/;"	f
buffer_path	bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_path() dict abort$/;"	f
buffer_repo	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_repo() dict abort$/;"	f
buffer_rev	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_rev() dict abort$/;"	f
buffer_setvar	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_setvar(var,value) dict abort$/;"	f
buffer_setvar	bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_setvar(varname, val) dict abort$/;"	f
buffer_sha1	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_sha1() dict abort$/;"	f
buffer_spec	bundle/vim-fugitive/plugin/fugitive.vim	/^  function! s:buffer_spec() dict abort$/;"	f
buffer_type	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_type(...) dict abort$/;"	f
buffer_type_name	bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_type_name(...) dict abort$/;"	f
buffer_up	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_up(...) dict abort$/;"	f
buffunc	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:buffunc(e)$/;"	f
buftab	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:buftab(bufnr, md)$/;"	f
bufwins	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:bufwins(bufnr)$/;"	f
build_sections	bundle/vim-airline/autoload/airline/extensions/default.vim	/^function! s:build_sections(builder, context, keys)$/;"	f
buildpat	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:buildpat(lst)$/;"	f
c	bundle/vim-airline/t/airline.vim	/^    let c = len(g:airline_statusline_funcrefs)$/;"	v
cache_clear	bundle/vim-rails/autoload/rails.vim	/^function! s:cache_clear(...) dict$/;"	f
cache_get	bundle/vim-rails/autoload/rails.vim	/^function! s:cache_get(...) dict$/;"	f
cache_has	bundle/vim-rails/autoload/rails.vim	/^function! s:cache_has(key) dict$/;"	f
cache_needs	bundle/vim-rails/autoload/rails.vim	/^function! s:cache_needs(key) dict$/;"	f
cache_set	bundle/vim-rails/autoload/rails.vim	/^function! s:cache_set(key,value) dict$/;"	f
cachefile	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:cachefile()$/;"	f
can_diffoff	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:can_diffoff(buf) abort$/;"	f
canvas 	bundle/vim-css3-syntax/test/test.css	/^canvas {$/;"	s
chCwd	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:chCwd(node)$/;"	f
chRoot	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:chRoot(node)$/;"	f
changelist	bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! s:changelist(bufnr)$/;"	f
check_defined	bundle/vim-airline/autoload/airline/init.vim	/^function! s:check_defined(variable, default)$/;"	f
check_defined_section	bundle/vim-airline/autoload/airline/extensions.vim	/^function! s:check_defined_section(name)$/;"	f
check_in_path	bundle/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:check_in_path()$/;"	f
check_mixed_indent	bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! s:check_mixed_indent()$/;"	f
checkbuf	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:checkbuf()$/;"	f
chknearby	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:chknearby(pat)$/;"	f
choices	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:choices(str, choices, func, args)$/;"	f
chop	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:chop(mrufs)$/;"	f
clear	bundle/vim-airline/t/init.vim	/^function! s:clear()$/;"	f
clear_matches	bundle/vim-css-color/autoload/css_color.vim	/^function! s:clear_matches()$/;"	f
closeChildren	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:closeChildren(node)$/;"	f
closeCurrentDir	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:closeCurrentDir(node)$/;"	f
closeTreeWindow	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:closeTreeWindow()$/;"	f
collect_incoming_data	bundle/vim-multiuser/plugin/vim_multiuser_server.py	/^    def collect_incoming_data(self, data):$/;"	m	class:MUClient
collect_incoming_data	bundle/vim-multiuser/plugin/vim_multiuser_server.py	/^    def collect_incoming_data(self, data):$/;"	m	class:MUSessionHandler
color1 	bundle/vim-css-color/tests/example.css	/^*::color1 { -x-: #359 }$/;"	s
color2 	bundle/vim-css-color/tests/example.css	/^*::color2 { -x-: #335599 }$/;"	s
color3 	bundle/vim-css-color/tests/example.css	/^*::color3 { -x-: rgba(144, 0, 0, .5) }$/;"	s
color4 	bundle/vim-css-color/tests/example.css	/^*::color4 { -x-: hsl(0, 100%, 50%) }$/;"	s
color_efm	bundle/vim-rails/autoload/rails.vim	/^function! s:color_efm(pre, before, after)$/;"	f
colors	bundle/vim-airline/t/themes.vim	/^    let colors = airline#themes#get_highlight('Foo')$/;"	v
colors_name	badwolf.vim	/^let colors_name = "badwolf"$/;"	v
combine_projections	bundle/vim-rails/autoload/rails.vim	/^function! s:combine_projections(dest, src, ...) abort$/;"	f
command	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:command(definition) abort$/;"	f
comparent	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:comparent(...)$/;"	f
compfnlen	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compfnlen(...)$/;"	f
compile	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^compile(FileName, LibDirs) ->$/;"	f
completion_filter	bundle/vim-rails/autoload/rails.vim	/^function! s:completion_filter(results, A, ...) abort$/;"	f
compmatlen	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compmatlen(...)$/;"	f
compmreb	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compmreb(...)$/;"	f
compmref	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compmref(...)$/;"	f
comptime	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:comptime(...)$/;"	f
compval	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compval(...)$/;"	f
compval	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:compval(...)$/;"	f
configuration	bundle/php.vim/scripts/update-vim-syntax.php	/^$configuration = parse_ini_file($/;"	v
configured_tree	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:configured_tree(git_dir) abort$/;"	f
controller	bundle/vim-rails/autoload/rails.vim	/^function! s:controller(...)$/;"	f
controllerEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:controllerEdit(cmd,...)$/;"	f
controllerList	bundle/vim-rails/autoload/rails.vim	/^function! s:controllerList(A,L,P)$/;"	f
counter-style 	bundle/vim-css3-syntax/test/test.css	/^@counter-style counter-style {$/;"	s
create	bundle/vim-airline/autoload/airline/section.vim	/^function! s:create(parts, append)$/;"	f
create_matches	bundle/vim-css-color/autoload/css_color.vim	/^function! s:create_matches()$/;"	f
create_syn_match	bundle/vim-css-color/autoload/css_color.vim	/^function! s:create_syn_match()$/;"	f
css_color#init	bundle/vim-css-color/autoload/css_color.vim	/^function! css_color#init(type, keywords, groups)$/;"	f
ctrlp#acceptfile	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#acceptfile(mode, line, ...)$/;"	f
ctrlp#bookmarkdir#accept	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#accept(mode, str)$/;"	f
ctrlp#bookmarkdir#add	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#add(dir)$/;"	f
ctrlp#bookmarkdir#id	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#id()$/;"	f
ctrlp#bookmarkdir#init	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#init()$/;"	f
ctrlp#bookmarkdir#remove	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#remove(entries)$/;"	f
ctrlp#buffers	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#buffers(...)$/;"	f
ctrlp#buffertag#accept	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#accept(mode, str)$/;"	f
ctrlp#buffertag#cmd	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#cmd(mode, ...)$/;"	f
ctrlp#buffertag#exit	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#exit()$/;"	f
ctrlp#buffertag#init	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#init(fname)$/;"	f
ctrlp#buffertag#opts	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#opts()$/;"	f
ctrlp#call	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#call(func, ...)$/;"	f
ctrlp#changes#accept	bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#accept(mode, str)$/;"	f
ctrlp#changes#cmd	bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#cmd(mode, ...)$/;"	f
ctrlp#changes#exit	bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#exit()$/;"	f
ctrlp#changes#init	bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#init(original_bufnr, bufnr)$/;"	f
ctrlp#clr	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#clr(...)$/;"	f
ctrlp#clra	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#clra()$/;"	f
ctrlp#complen	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#complen(...)$/;"	f
ctrlp#dir#accept	bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! ctrlp#dir#accept(mode, str)$/;"	f
ctrlp#dir#id	bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! ctrlp#dir#id()$/;"	f
ctrlp#dir#init	bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! ctrlp#dir#init(...)$/;"	f
ctrlp#dirnfile	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#dirnfile(entries)$/;"	f
ctrlp#exit	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#exit()$/;"	f
ctrlp#files	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#files()$/;"	f
ctrlp#getcline	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#getcline()$/;"	f
ctrlp#getmarkedlist	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#getmarkedlist()$/;"	f
ctrlp#hicheck	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#hicheck(grp, defgrp)$/;"	f
ctrlp#igncwd	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#igncwd(cwd)$/;"	f
ctrlp#init	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#init(type, ...)$/;"	f
ctrlp#j2l	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#j2l(nr)$/;"	f
ctrlp#line#accept	bundle/ctrlp.vim/autoload/ctrlp/line.vim	/^fu! ctrlp#line#accept(mode, str)$/;"	f
ctrlp#line#id	bundle/ctrlp.vim/autoload/ctrlp/line.vim	/^fu! ctrlp#line#id()$/;"	f
ctrlp#line#init	bundle/ctrlp.vim/autoload/ctrlp/line.vim	/^fu! ctrlp#line#init()$/;"	f
ctrlp#mixed#id	bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! ctrlp#mixed#id()$/;"	f
ctrlp#mixed#init	bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! ctrlp#mixed#init(clim)$/;"	f
ctrlp#modfilecond	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#modfilecond(w)$/;"	f
ctrlp#mrufiles#add	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#add(fn)$/;"	f
ctrlp#mrufiles#bufs	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#bufs()$/;"	f
ctrlp#mrufiles#cachefile	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#cachefile()$/;"	f
ctrlp#mrufiles#init	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#init()$/;"	f
ctrlp#mrufiles#list	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#list(...)$/;"	f
ctrlp#mrufiles#opts	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#opts()$/;"	f
ctrlp#mrufiles#refresh	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#refresh(...)$/;"	f
ctrlp#mrufiles#remove	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#remove(files)$/;"	f
ctrlp#normcmd	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#normcmd(cmd, ...)$/;"	f
ctrlp#nosy	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#nosy()$/;"	f
ctrlp#progress	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#progress(enum, ...)$/;"	f
ctrlp#prtclear	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#prtclear()$/;"	f
ctrlp#quickfix#accept	bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! ctrlp#quickfix#accept(mode, str)$/;"	f
ctrlp#quickfix#id	bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! ctrlp#quickfix#id()$/;"	f
ctrlp#quickfix#init	bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! ctrlp#quickfix#init()$/;"	f
ctrlp#recordhist	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#recordhist()$/;"	f
ctrlp#rmbasedir	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#rmbasedir(items)$/;"	f
ctrlp#rtscript#id	bundle/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^fu! ctrlp#rtscript#id()$/;"	f
ctrlp#rtscript#init	bundle/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^fu! ctrlp#rtscript#init(caching)$/;"	f
ctrlp#setdir	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#setdir(path, ...)$/;"	f
ctrlp#setlcdir	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#setlcdir()$/;"	f
ctrlp#setlines	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#setlines(...)$/;"	f
ctrlp#statusline	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#statusline()$/;"	f
ctrlp#switchtype	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#switchtype(id)$/;"	f
ctrlp#syntax	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#syntax()$/;"	f
ctrlp#tabcount	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#tabcount()$/;"	f
ctrlp#tag#accept	bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#accept(mode, str)$/;"	f
ctrlp#tag#enter	bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#enter()$/;"	f
ctrlp#tag#id	bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#id()$/;"	f
ctrlp#tag#init	bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#init()$/;"	f
ctrlp#undo#accept	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#accept(mode, str)$/;"	f
ctrlp#undo#enter	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#enter()$/;"	f
ctrlp#undo#exit	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#exit()$/;"	f
ctrlp#undo#id	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#id()$/;"	f
ctrlp#undo#init	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#init()$/;"	f
ctrlp#utils#cachedir	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#cachedir()$/;"	f
ctrlp#utils#cachefile	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#cachefile(...)$/;"	f
ctrlp#utils#fnesc	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#fnesc(path, type, ...)$/;"	f
ctrlp#utils#glob	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#glob(...)$/;"	f
ctrlp#utils#globpath	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#globpath(...)$/;"	f
ctrlp#utils#lash	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#lash()$/;"	f
ctrlp#utils#mkdir	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#mkdir(dir)$/;"	f
ctrlp#utils#opts	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#opts()$/;"	f
ctrlp#utils#readfile	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#readfile(file)$/;"	f
ctrlp#utils#writecache	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#writecache(lines, ...)$/;"	f
current_compiler	bundle/vim-rails/compiler/rails.vim	/^let current_compiler = "rails"$/;"	v
cursors	bundle/vim-multiuser/plugin/vim_multiuser.py	/^cursors = {}$/;"	v
data	bundle/vim-css3-syntax/test/test.css	/^data,$/;"	s
datalist	bundle/vim-css3-syntax/test/test.css	/^datalist,$/;"	s
dd	bundle/vim-css3-syntax/test/test.css	/^.selectors4:column(p, li, dt, dd) {$/;"	s
dd	bundle/vim-css3-syntax/test/test.css	/^.selectors4:current(p, li, dt, dd),$/;"	s
debug	bundle/tagbar/autoload/tagbar.vim	/^function! s:debug(msg) abort$/;"	f
debug	bundle/vim-rails/autoload/rails.vim	/^function! s:debug(str)$/;"	f
deep	bundle/vim-css3-syntax/test/test.css	/^.scoping \/deep\/ span {$/;"	s
define_buffer_idx_mode_mappings	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:define_buffer_idx_mode_mappings()$/;"	f
define_commands	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:define_commands() abort$/;"	f
define_navcommand	bundle/vim-rails/autoload/rails.vim	/^function! s:define_navcommand(name, projection, ...) abort$/;"	f
delent	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:delent(rfunc)$/;"	f
deleteBookmark	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:deleteBookmark(bm)$/;"	f
delimitMate	bundle/delimitMate/plugin/delimitMate.vim	/^augroup delimitMate$/;"	a
delimitMate#AddToBuffer	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#AddToBuffer(str) "{{{$/;"	f
delimitMate#BS	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#BS() " {{{$/;"	f
delimitMate#BalancedParens	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#BalancedParens(char) "{{{$/;"	f
delimitMate#CursorIdx	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#CursorIdx() "{{{$/;"	f
delimitMate#Del	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#Del() " {{{$/;"	f
delimitMate#ExpandReturn	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#ExpandReturn() "{{{$/;"	f
delimitMate#ExpandSpace	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#ExpandSpace() "{{{$/;"	f
delimitMate#Finish	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#Finish(move_back) " {{{$/;"	f
delimitMate#FlushBuffer	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#FlushBuffer() " {{{$/;"	f
delimitMate#GetCharFromCursor	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#GetCharFromCursor(...) "{{{$/;"	f
delimitMate#GetCurrentSyntaxRegion	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#GetCurrentSyntaxRegion() "{{{$/;"	f
delimitMate#GetCurrentSyntaxRegionIf	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#GetCurrentSyntaxRegionIf(char) "{{{$/;"	f
delimitMate#GetSyntaxRegion	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#GetSyntaxRegion(line, col) "{{{$/;"	f
delimitMate#IsCRExpansion	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#IsCRExpansion(...) " {{{$/;"	f
delimitMate#IsEmptyPair	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#IsEmptyPair(str) "{{{$/;"	f
delimitMate#IsForbidden	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#IsForbidden(char) "{{{$/;"	f
delimitMate#IsSmartQuote	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#IsSmartQuote(char) "{{{$/;"	f
delimitMate#IsSpaceExpansion	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#IsSpaceExpansion() " {{{$/;"	f
delimitMate#JumpAny	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#JumpAny(key) " {{{$/;"	f
delimitMate#JumpMany	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#JumpMany() " {{{$/;"	f
delimitMate#JumpOut	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#JumpOut(char) "{{{$/;"	f
delimitMate#OptionsList	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#OptionsList() "{{{$/;"	f
delimitMate#ParenDelim	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#ParenDelim(char) " {{{$/;"	f
delimitMate#QuoteDelim	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#QuoteDelim(char) "{{{$/;"	f
delimitMate#RmBuffer	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#RmBuffer(num) " {{{$/;"	f
delimitMate#ShouldJump	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#ShouldJump(...) "{{{$/;"	f
delimitMate#SkipDelim	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#SkipDelim(char) "{{{$/;"	f
delimitMate#TestMappings	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#TestMappings() "{{{$/;"	f
delimitMate#WithinEmptyPair	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#WithinEmptyPair() "{{{$/;"	f
delimitMate#WriteAfter	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#WriteAfter(str) "{{{$/;"	f
delimitMate#WriteBefore	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#WriteBefore(str) "{{{$/;"	f
delimitMateTests#Main	bundle/delimitMate/autoload/delimitMateTests.vim	/^function! delimitMateTests#Main()$/;"	f
delimitMate_version	bundle/delimitMate/plugin/delimitMate.vim	/^let delimitMate_version = "2.6"$/;"	v
dict2list	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:dict2list(dict)$/;"	f
dictindex	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dictindex(dict, expr)$/;"	f
diff_modifier	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diff_modifier(count) abort$/;"	f
diff_restore	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diff_restore() abort$/;"	f
diff_window_count	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diff_window_count() abort$/;"	f
difflib	bundle/vim-multiuser/plugin/vim_multiuser.py	/^import difflib$/;"	i
diffoff	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diffoff() abort$/;"	f
diffoff_all	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diffoff_all(dir) abort$/;"	f
diffthis	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diffthis() abort$/;"	f
dircompl	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dircompl(be, sd)$/;"	f
dismrk	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dismrk()$/;"	f
display: auto	bundle/vim-css3-syntax/test/test.css	/^  (display: auto) not$/;"	s
display: auto	bundle/vim-css3-syntax/test/test.css	/^  (display: auto) {$/;"	s
display: auto	bundle/vim-css3-syntax/test/test.css	/^  display: auto;$/;"	s
display: auto	bundle/vim-css3-syntax/test/test.css	/^@supports (display: auto) or$/;"	s
display: same	bundle/vim-css3-syntax/test/test.css	/^  display: same;$/;"	s
displayHelp	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:displayHelp()$/;"	f
djump	bundle/vim-rails/autoload/rails.vim	/^function! s:djump(def)$/;"	f
do_tests	bundle/emmet-vim/unittest.vim	/^function! s:do_tests(...)$/;"	f
dohighlight	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dohighlight()$/;"	f
dollar_add	bundle/emmet-vim/autoload/emmet/lang/html.vim	/^function! s:dollar_add(base,no) abort$/;"	f
dosigns	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dosigns()$/;"	f
dotcmp	bundle/vim-rails/autoload/rails.vim	/^function! s:dotcmp(i1, i2)$/;"	f
dt	bundle/vim-css3-syntax/test/test.css	/^.selectors4:column(p, li, dt, dd) {$/;"	s
dt	bundle/vim-css3-syntax/test/test.css	/^.selectors4:current(p, li, dt, dd),$/;"	s
echo	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:echo(msg)$/;"	f
echoWarning	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:echoWarning(msg)$/;"	f
edit	bundle/vim-rails/autoload/rails.vim	/^function! s:edit(cmd,file,...)$/;"	f
editcmdfor	bundle/vim-rails/autoload/rails.vim	/^function! s:editcmdfor(cmd)$/;"	f
elapsed	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:elapsed(nr)$/;"	f
embed	bundle/vim-css3-syntax/test/test.css	/^embed,$/;"	s
emmet#anchorizeURL	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#anchorizeURL(flag) abort$/;"	f
emmet#balanceTag	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#balanceTag(flag) range abort$/;"	f
emmet#codePretty	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#codePretty() range abort$/;"	f
emmet#completeTag	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#completeTag(findstart, base) abort$/;"	f
emmet#encodeImage	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#encodeImage() abort$/;"	f
emmet#expandAbbr	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#expandAbbr(mode, abbr) range abort$/;"	f
emmet#expandAbbrIntelligent	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#expandAbbrIntelligent(feedkey) abort$/;"	f
emmet#expandCursorExpr	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#expandCursorExpr(expand, mode) abort$/;"	f
emmet#expandDollarExpr	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#expandDollarExpr(expand) abort$/;"	f
emmet#expandWord	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#expandWord(abbr, type, orig) abort$/;"	f
emmet#getBaseType	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#getBaseType(type) abort$/;"	f
emmet#getDollarExprs	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#getDollarExprs(expand) abort$/;"	f
emmet#getDollarValueByKey	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#getDollarValueByKey(key) abort$/;"	f
emmet#getExpandos	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#getExpandos(type, key) abort$/;"	f
emmet#getFileType	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#getFileType(...) abort$/;"	f
emmet#getFilters	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#getFilters(type) abort$/;"	f
emmet#getIndentation	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#getIndentation(...) abort$/;"	f
emmet#getResource	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#getResource(type, name, default) abort$/;"	f
emmet#getSettings	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#getSettings() abort$/;"	f
emmet#getSnippets	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#getSnippets(type) abort$/;"	f
emmet#imageSize	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#imageSize() abort$/;"	f
emmet#isExpandable	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#isExpandable() abort$/;"	f
emmet#isExtends	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#isExtends(type, extend) abort$/;"	f
emmet#lang#css#balanceTag	bundle/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#balanceTag(flag) range abort$/;"	f
emmet#lang#css#encodeImage	bundle/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#encodeImage() abort$/;"	f
emmet#lang#css#findTokens	bundle/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#findTokens(str) abort$/;"	f
emmet#lang#css#imageSize	bundle/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#imageSize() abort$/;"	f
emmet#lang#css#moveNextPrev	bundle/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#moveNextPrev(flag) abort$/;"	f
emmet#lang#css#moveNextPrevItem	bundle/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#css#parseIntoTree	bundle/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#css#parseTag	bundle/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#parseTag(tag) abort$/;"	f
emmet#lang#css#removeTag	bundle/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#removeTag() abort$/;"	f
emmet#lang#css#splitJoinTag	bundle/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#splitJoinTag() abort$/;"	f
emmet#lang#css#toString	bundle/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#css#toggleComment	bundle/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#toggleComment() abort$/;"	f
emmet#lang#exists	bundle/emmet-vim/autoload/emmet/lang.vim	/^function! emmet#lang#exists(type) abort$/;"	f
emmet#lang#haml#balanceTag	bundle/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#balanceTag(flag) range abort$/;"	f
emmet#lang#haml#encodeImage	bundle/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#encodeImage() abort$/;"	f
emmet#lang#haml#findTokens	bundle/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#findTokens(str) abort$/;"	f
emmet#lang#haml#imageSize	bundle/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#imageSize() abort$/;"	f
emmet#lang#haml#moveNextPrev	bundle/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#moveNextPrev(flag) abort$/;"	f
emmet#lang#haml#moveNextPrevItem	bundle/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#haml#parseIntoTree	bundle/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#haml#parseTag	bundle/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#parseTag(tag) abort$/;"	f
emmet#lang#haml#removeTag	bundle/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#removeTag() abort$/;"	f
emmet#lang#haml#splitJoinTag	bundle/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#splitJoinTag() abort$/;"	f
emmet#lang#haml#toString	bundle/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#haml#toggleComment	bundle/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#toggleComment() abort$/;"	f
emmet#lang#html#balanceTag	bundle/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#balanceTag(flag) range abort$/;"	f
emmet#lang#html#encodeImage	bundle/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#encodeImage() abort$/;"	f
emmet#lang#html#findTokens	bundle/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#findTokens(str) abort$/;"	f
emmet#lang#html#imageSize	bundle/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#imageSize() abort$/;"	f
emmet#lang#html#moveNextPrev	bundle/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#moveNextPrev(flag) abort$/;"	f
emmet#lang#html#moveNextPrevItem	bundle/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#html#parseIntoTree	bundle/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#html#parseTag	bundle/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#parseTag(tag) abort$/;"	f
emmet#lang#html#removeTag	bundle/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#removeTag() abort$/;"	f
emmet#lang#html#splitJoinTag	bundle/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#splitJoinTag() abort$/;"	f
emmet#lang#html#toString	bundle/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#html#toggleComment	bundle/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#toggleComment() abort$/;"	f
emmet#lang#less#balanceTag	bundle/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#balanceTag(flag) range abort$/;"	f
emmet#lang#less#encodeImage	bundle/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#encodeImage() abort$/;"	f
emmet#lang#less#findTokens	bundle/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#findTokens(str) abort$/;"	f
emmet#lang#less#imageSize	bundle/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#imageSize() abort$/;"	f
emmet#lang#less#moveNextPrev	bundle/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#moveNextPrev(flag) abort$/;"	f
emmet#lang#less#moveNextPrevItem	bundle/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#less#parseIntoTree	bundle/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#less#parseTag	bundle/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#parseTag(tag) abort$/;"	f
emmet#lang#less#removeTag	bundle/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#removeTag() abort$/;"	f
emmet#lang#less#splitJoinTag	bundle/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#splitJoinTag() abort$/;"	f
emmet#lang#less#toString	bundle/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#less#toggleComment	bundle/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#toggleComment() abort$/;"	f
emmet#lang#sass#balanceTag	bundle/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#balanceTag(flag) range abort$/;"	f
emmet#lang#sass#encodeImage	bundle/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#encodeImage() abort$/;"	f
emmet#lang#sass#findTokens	bundle/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#findTokens(str) abort$/;"	f
emmet#lang#sass#imageSize	bundle/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#imageSize() abort$/;"	f
emmet#lang#sass#moveNextPrev	bundle/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#moveNextPrev(flag) abort$/;"	f
emmet#lang#sass#moveNextPrevItem	bundle/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#sass#parseIntoTree	bundle/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#sass#parseTag	bundle/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#parseTag(tag) abort$/;"	f
emmet#lang#sass#removeTag	bundle/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#removeTag() abort$/;"	f
emmet#lang#sass#splitJoinTag	bundle/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#splitJoinTag() abort$/;"	f
emmet#lang#sass#toString	bundle/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#sass#toggleComment	bundle/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#toggleComment() abort$/;"	f
emmet#lang#scss#balanceTag	bundle/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#balanceTag(flag) range abort$/;"	f
emmet#lang#scss#encodeImage	bundle/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#encodeImage() abort$/;"	f
emmet#lang#scss#findTokens	bundle/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#findTokens(str) abort$/;"	f
emmet#lang#scss#imageSize	bundle/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#imageSize() abort$/;"	f
emmet#lang#scss#moveNextPrev	bundle/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#moveNextPrev(flag) abort$/;"	f
emmet#lang#scss#moveNextPrevItem	bundle/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#scss#parseIntoTree	bundle/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#scss#parseTag	bundle/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#parseTag(tag) abort$/;"	f
emmet#lang#scss#removeTag	bundle/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#removeTag() abort$/;"	f
emmet#lang#scss#splitJoinTag	bundle/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#splitJoinTag() abort$/;"	f
emmet#lang#scss#toString	bundle/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#scss#toggleComment	bundle/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#toggleComment() abort$/;"	f
emmet#lang#slim#balanceTag	bundle/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#balanceTag(flag) range abort$/;"	f
emmet#lang#slim#encodeImage	bundle/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#encodeImage() abort$/;"	f
emmet#lang#slim#findTokens	bundle/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#findTokens(str) abort$/;"	f
emmet#lang#slim#imageSize	bundle/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#imageSize() abort$/;"	f
emmet#lang#slim#moveNextPrev	bundle/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#moveNextPrev(flag) abort$/;"	f
emmet#lang#slim#moveNextPrevItem	bundle/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#slim#parseIntoTree	bundle/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#slim#parseTag	bundle/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#parseTag(tag) abort$/;"	f
emmet#lang#slim#removeTag	bundle/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#removeTag() abort$/;"	f
emmet#lang#slim#splitJoinTag	bundle/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#splitJoinTag() abort$/;"	f
emmet#lang#slim#toString	bundle/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#slim#toggleComment	bundle/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#toggleComment() abort$/;"	f
emmet#lorem#en#expand	bundle/emmet-vim/autoload/emmet/lorem/en.vim	/^function! emmet#lorem#en#expand(command) abort$/;"	f
emmet#lorem#ja#expand	bundle/emmet-vim/autoload/emmet/lorem/ja.vim	/^function! emmet#lorem#ja#expand(command) abort$/;"	f
emmet#mergeConfig	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#mergeConfig(lhs, rhs) abort$/;"	f
emmet#mergeLines	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#mergeLines() range abort$/;"	f
emmet#moveNextPrev	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#moveNextPrev(flag) abort$/;"	f
emmet#moveNextPrevItem	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#moveNextPrevItem(flag) abort$/;"	f
emmet#newNode	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#newNode() abort$/;"	f
emmet#parseIntoTree	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#parseIntoTree(abbr, type) abort$/;"	f
emmet#reExpandDollarExpr	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#reExpandDollarExpr(expand, times) abort$/;"	f
emmet#removeTag	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#removeTag() abort$/;"	f
emmet#splitFilterArg	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#splitFilterArg(filters) abort$/;"	f
emmet#splitJoinTag	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#splitJoinTag() abort$/;"	f
emmet#toString	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#toString(...) abort$/;"	f
emmet#toggleComment	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#toggleComment() abort$/;"	f
emmet#unescapeDollarExpr	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#unescapeDollarExpr(expand) abort$/;"	f
emmet#updateTag	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#updateTag() abort$/;"	f
emmet#useFilter	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#useFilter(filters, filter) abort$/;"	f
emmet#util#cache	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#cache(name, ...) abort$/;"	f
emmet#util#closePopup	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#closePopup() abort$/;"	f
emmet#util#cursorInRegion	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#cursorInRegion(region) abort$/;"	f
emmet#util#deleteContent	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#deleteContent(region) abort$/;"	f
emmet#util#getContent	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getContent(region) abort$/;"	f
emmet#util#getContentFromURL	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getContentFromURL(url) abort$/;"	f
emmet#util#getImageSize	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getImageSize(fn) abort$/;"	f
emmet#util#getTextFromHTML	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getTextFromHTML(buf) abort$/;"	f
emmet#util#getVisualBlock	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getVisualBlock() abort$/;"	f
emmet#util#getcurpos	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getcurpos() abort$/;"	f
emmet#util#imageSizeWithImageMagick	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#imageSizeWithImageMagick(fn) abort$/;"	f
emmet#util#isImageMagickInstalled	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#isImageMagickInstalled() abort$/;"	f
emmet#util#pointInRegion	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#pointInRegion(point, region) abort$/;"	f
emmet#util#rand	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#rand() abort$/;"	f
emmet#util#regionInRegion	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#regionInRegion(outer, inner) abort$/;"	f
emmet#util#regionIsValid	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#regionIsValid(region) abort$/;"	f
emmet#util#searchRegion	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#searchRegion(start, end) abort$/;"	f
emmet#util#selectRegion	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#selectRegion(region) abort$/;"	f
emmet#util#setContent	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#setContent(region, content) abort$/;"	f
emmet#util#srand	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#srand(seed) abort$/;"	f
emmet#util#unique	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#unique(arr) abort$/;"	f
emmet_unittest_complete	bundle/emmet-vim/unittest.vim	/^function! s:emmet_unittest_complete(arglead, cmdline, cmdpos)$/;"	f
empty_buffer	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:empty_buffer()$/;"	f
endof	bundle/vim-rails/autoload/rails.vim	/^function! s:endof(lnum)$/;"	f
endswith	bundle/vim-rails/autoload/rails.vim	/^function! s:endswith(string,suffix)$/;"	f
environment	bundle/vim-rails/autoload/rails.vim	/^function! s:environment()$/;"	f
error	bundle/vim-html5validator/plugin/html5validator.vim	/^function! s:error(str)$/;"	f
error	bundle/vim-rails/autoload/rails.vim	/^function! s:error(str)$/;"	f
error	bundle/vim-rails/plugin/rails.vim	/^function! s:error(str)$/;"	f
escape	bundle/emmet-vim/unittest.vim	/^function! s:escape(str)$/;"	f
escarg	bundle/vim-rails/autoload/rails.vim	/^function! s:escarg(p)$/;"	f
esccmd	bundle/vim-rails/autoload/rails.vim	/^function! s:esccmd(p)$/;"	f
esctagscmd	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:esctagscmd(bin, args, ...)$/;"	f
evaluate	bundle/delimitMate/test/expand_cr.vim	/^let evaluate = 0$/;"	v
evaluate	bundle/delimitMate/test/expand_space.vim	/^let evaluate = 0$/;"	v
excl	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:excl(fn)$/;"	f
exe	bundle/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^function s:exe()$/;"	f
exe	bundle/syntastic/syntax_checkers/ruby/jruby.vim	/^function s:exe()$/;"	f
exec_separator	bundle/vim-airline/autoload/airline/highlighter.vim	/^function! s:exec_separator(dict, from, to, inverse, suffix)$/;"	f
execextvar	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:execextvar(key)$/;"	f
exectags	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:exectags(cmd)$/;"	f
exectagsonfile	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:exectagsonfile(fname, ftype)$/;"	f
expand_placeholder	bundle/vim-rails/autoload/rails.vim	/^function! s:expand_placeholder(placeholder, expansions) abort$/;"	f
expand_placeholders	bundle/vim-rails/autoload/rails.vim	/^function! s:expand_placeholders(string, placeholders)$/;"	f
expect	bundle/delimitMate/test/expand_cr.vim	/^    let expect = 0$/;"	v
expect	bundle/delimitMate/test/expand_cr.vim	/^    let expect = 1$/;"	v
expect	bundle/delimitMate/test/expand_cr.vim	/^let expect = 0$/;"	v
expect	bundle/delimitMate/test/expand_space.vim	/^    let expect = 0$/;"	v
expect	bundle/delimitMate/test/expand_space.vim	/^    let expect = 1$/;"	v
expect	bundle/delimitMate/test/expand_space.vim	/^let expect = 0$/;"	v
expected	bundle/delimitMate/test/expand_cr.vim	/^    let expected = []$/;"	v
expected	bundle/delimitMate/test/expand_space.vim	/^    let expected = []$/;"	v
ext.add_inactive_statusline_func	bundle/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_inactive_statusline_func(name) dict$/;"	f
ext.add_statusline_func	bundle/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_statusline_func(name) dict$/;"	f
ext.add_statusline_funcref	bundle/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_statusline_funcref(function) dict$/;"	f
ext.add_theme_func	bundle/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_theme_func(name) dict$/;"	f
extend_projection	bundle/vim-rails/autoload/rails.vim	/^function! s:extend_projection(dest, src)$/;"	f
extensionName	bundle/php.vim/scripts/update-vim-syntax.php	/^foreach ($configuration['extensions'] as $extensionName => $isEnabled) {$/;"	v
extensions	bundle/php.vim/scripts/update-vim-syntax.php	/^$extensions = array();$/;"	v
figcaption	bundle/vim-css3-syntax/test/test.css	/^figcaption,$/;"	s
figure	bundle/vim-css3-syntax/test/test.css	/^figure,$/;"	s
file_getline	bundle/vim-rails/autoload/rails.vim	/^function! s:file_getline(lnum,...) dict abort$/;"	f
file_lines	bundle/vim-rails/autoload/rails.vim	/^function! s:file_lines() dict abort$/;"	f
file_name	bundle/vim-rails/autoload/rails.vim	/^function! s:file_name() dict abort$/;"	f
file_path	bundle/vim-rails/autoload/rails.vim	/^function! s:file_path() dict abort$/;"	f
filter	bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! s:filter(tags)$/;"	f
find	autoload/pathogen.vim	/^function! s:find(count,cmd,file,lcd) " {{{1$/;"	f
findamethod	bundle/vim-rails/autoload/rails.vim	/^function! s:findamethod(func,repl)$/;"	f
findasymbol	bundle/vim-rails/autoload/rails.vim	/^function! s:findasymbol(sym,repl)$/;"	f
findcmdfor	bundle/vim-rails/autoload/rails.vim	/^function! s:findcmdfor(cmd)$/;"	f
findcommon	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:findcommon(items, seed)$/;"	f
findcount	bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! s:findcount(str)$/;"	f
findedit	bundle/vim-rails/autoload/rails.vim	/^function! s:findedit(cmd,files,...) abort$/;"	f
findfromview	bundle/vim-rails/autoload/rails.vim	/^function! s:findfromview(func,repl)$/;"	f
findit	bundle/vim-rails/autoload/rails.vim	/^function! s:findit(pat,repl)$/;"	f
findlayout	bundle/vim-rails/autoload/rails.vim	/^function! s:findlayout(name)$/;"	f
findroot	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:findroot(curr, mark, depth, type)$/;"	f
findview	bundle/vim-rails/autoload/rails.vim	/^function! s:findview(name)$/;"	f
fixturesEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:fixturesEdit(cmd,...)$/;"	f
fixturesList	bundle/vim-rails/autoload/rails.vim	/^function! s:fixturesList(A,L,P)$/;"	f
flatten	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:flatten(tree, cur)$/;"	f
fnameescape	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:fnameescape(file) abort$/;"	f
fnameescape	bundle/vim-rails/autoload/rails.vim	/^function! s:fnameescape(file) abort$/;"	f
fnesc	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:fnesc(...)$/;"	f
focus	bundle/vim-css3-syntax/test/test.css	/^.selectors3:matches(:hover, :focus),$/;"	s
footer	bundle/vim-css3-syntax/test/test.css	/^footer,$/;"	s
format	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:format(...)$/;"	f
format	bundle/vim-rails/autoload/rails.vim	/^function! s:format()$/;"	f
formatline	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:formatline(str)$/;"	f
formatul	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:formatul(...)$/;"	f
found_terminator	bundle/vim-multiuser/plugin/vim_multiuser_server.py	/^    def found_terminator(self):$/;"	m	class:MUClient
found_terminator	bundle/vim-multiuser/plugin/vim_multiuser_server.py	/^    def found_terminator(self):$/;"	m	class:MUSessionHandler
fugitive	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive$/;"	a
fugitive#buffer	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#buffer(...) abort$/;"	f
fugitive#can_diffoff	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#can_diffoff(buf) abort$/;"	f
fugitive#cwindow	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#cwindow() abort$/;"	f
fugitive#detect	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#detect(path) abort$/;"	f
fugitive#extract_git_dir	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#extract_git_dir(path) abort$/;"	f
fugitive#foldtext	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#foldtext() abort$/;"	f
fugitive#git_commands	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#git_commands() abort$/;"	f
fugitive#git_version	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#git_version(...) abort$/;"	f
fugitive#head	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#head(...) abort$/;"	f
fugitive#is_git_dir	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#is_git_dir(path) abort$/;"	f
fugitive#reload_status	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#reload_status() abort$/;"	f
fugitive#repo	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#repo(...) abort$/;"	f
fugitive#statusline	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#statusline(...) abort$/;"	f
fugitive_blame	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_blame$/;"	a
fugitive_commit	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_commit$/;"	a
fugitive_diff	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_diff$/;"	a
fugitive_files	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_files$/;"	a
fugitive_foldtext	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_foldtext$/;"	a
fugitive_remove	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_remove$/;"	a
fugitive_status	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_status$/;"	a
fugitive_temp	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_temp$/;"	a
fugitive_utility	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_utility$/;"	a
function	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:function(name) abort$/;"	f
function	bundle/vim-rails/autoload/rails.vim	/^function! s:function(name)$/;"	f
function	bundle/vim-rails/plugin/rails.vim	/^function! s:function(name)$/;"	f
fuzzyglob	bundle/vim-rails/autoload/rails.vim	/^function! s:fuzzyglob(arg)$/;"	f
g%	bundle/matchit.zip/plugin/matchit.vim	/^nnoremap <silent> g% :<C-U>call <SID>Match_wrapper('',0,'n') <CR>$/;"	m
g%	bundle/matchit.zip/plugin/matchit.vim	/^onoremap <silent> g% v:<C-U>call <SID>Match_wrapper('',0,'o') <CR>$/;"	m
g%	bundle/matchit.zip/plugin/matchit.vim	/^vnoremap <silent> g% :<C-U>call <SID>Match_wrapper('',0,'v') <CR>m'gv``$/;"	m
g:NERDTreeAutoDeleteBuffer	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^    let g:NERDTreeAutoDeleteBuffer = 0$/;"	v
g:NERDTreeBookmark	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^let g:NERDTreeBookmark = s:Bookmark$/;"	v
g:NERDTreeCreator	bundle/nerdtree/lib/nerdtree/creator.vim	/^let g:NERDTreeCreator = s:Creator$/;"	v
g:NERDTreeDirNode	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^let g:NERDTreeDirNode = s:TreeDirNode$/;"	v
g:NERDTreeFileNode	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^let g:NERDTreeFileNode = s:TreeFileNode$/;"	v
g:NERDTreeIgnore	bundle/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeIgnore = ['\\~$']$/;"	v
g:NERDTreeKeyMap	bundle/nerdtree/lib/nerdtree/key_map.vim	/^let g:NERDTreeKeyMap = s:KeyMap$/;"	v
g:NERDTreeMenuController	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^let g:NERDTreeMenuController = s:MenuController$/;"	v
g:NERDTreeMenuItem	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^let g:NERDTreeMenuItem = s:MenuItem$/;"	v
g:NERDTreeOpener	bundle/nerdtree/lib/nerdtree/opener.vim	/^let g:NERDTreeOpener = s:Opener$/;"	v
g:NERDTreePath	bundle/nerdtree/lib/nerdtree/path.vim	/^let g:NERDTreePath = s:Path$/;"	v
g:NERDTreeSortOrder	bundle/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeSortOrder = ['\\\/$', '*', '\\.swp$',  '\\.bak$', '\\~$']$/;"	v
g:NERDTreeStatusline	bundle/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeStatusline = "%{exists('b:NERDTreeRoot')?b:NERDTreeRoot.path.str():''}"$/;"	v
g:SingleCompile_menumode	bundle/SingleCompile/plugin/SingleCompile.vim	/^    let g:SingleCompile_menumode = 1$/;"	v
g:SyntasticAutoloclistNotifier	bundle/syntastic/plugin/syntastic/autoloclist.vim	/^let g:SyntasticAutoloclistNotifier = {}$/;"	v
g:SyntasticBalloonsNotifier	bundle/syntastic/plugin/syntastic/balloons.vim	/^let g:SyntasticBalloonsNotifier = {}$/;"	v
g:SyntasticChecker	bundle/syntastic/plugin/syntastic/checker.vim	/^let g:SyntasticChecker = {}$/;"	v
g:SyntasticCursorNotifier	bundle/syntastic/plugin/syntastic/cursor.vim	/^let g:SyntasticCursorNotifier = {}$/;"	v
g:SyntasticHighlightingNotifier	bundle/syntastic/plugin/syntastic/highlighting.vim	/^let g:SyntasticHighlightingNotifier = {}$/;"	v
g:SyntasticLoclist	bundle/syntastic/plugin/syntastic/loclist.vim	/^let g:SyntasticLoclist = {}$/;"	v
g:SyntasticMakeprgBuilder	bundle/syntastic/plugin/syntastic/makeprg_builder.vim	/^let g:SyntasticMakeprgBuilder = {}$/;"	v
g:SyntasticModeMap	bundle/syntastic/plugin/syntastic/modemap.vim	/^let g:SyntasticModeMap = {}$/;"	v
g:SyntasticNotifiers	bundle/syntastic/plugin/syntastic/notifiers.vim	/^let g:SyntasticNotifiers = {}$/;"	v
g:SyntasticRegistry	bundle/syntastic/plugin/syntastic/registry.vim	/^let g:SyntasticRegistry = {}$/;"	v
g:SyntasticSignsNotifier	bundle/syntastic/plugin/syntastic/signs.vim	/^let g:SyntasticSignsNotifier = {}$/;"	v
g:ack_apply_lmappings	bundle/ack.vim/plugin/ack.vim	/^  let g:ack_apply_lmappings = !exists("g:ack_lhandler")$/;"	v
g:ack_apply_qmappings	bundle/ack.vim/plugin/ack.vim	/^  let g:ack_apply_qmappings = !exists("g:ack_qhandler")$/;"	v
g:ack_autoclose	bundle/ack.vim/plugin/ack.vim	/^  let g:ack_autoclose = 0$/;"	v
g:ack_autofold_results	bundle/ack.vim/plugin/ack.vim	/^  let g:ack_autofold_results = 0$/;"	v
g:ack_default_options	bundle/ack.vim/plugin/ack.vim	/^  let g:ack_default_options = " -s -H --nocolor --nogroup --column"$/;"	v
g:ack_lhandler	bundle/ack.vim/plugin/ack.vim	/^  let g:ack_lhandler = "botright lopen"$/;"	v
g:ack_mappings	bundle/ack.vim/plugin/ack.vim	/^  let g:ack_mappings = extend(s:ack_mappings, g:ack_mappings)$/;"	v
g:ack_mappings	bundle/ack.vim/plugin/ack.vim	/^  let g:ack_mappings = s:ack_mappings$/;"	v
g:ack_qhandler	bundle/ack.vim/plugin/ack.vim	/^  let g:ack_qhandler = "botright copen"$/;"	v
g:ack_use_dispatch	bundle/ack.vim/autoload/ack.vim	/^    let g:ack_use_dispatch = 0$/;"	v
g:ack_use_dispatch	bundle/ack.vim/autoload/ack.vim	/^  let g:ack_use_dispatch = 0$/;"	v
g:ackhighlight	bundle/ack.vim/plugin/ack.vim	/^  let g:ackhighlight = 0$/;"	v
g:ackprg	bundle/ack.vim/plugin/ack.vim	/^    let g:ackprg = "ack"$/;"	v
g:ackprg	bundle/ack.vim/plugin/ack.vim	/^    let g:ackprg = "ack-grep"$/;"	v
g:ackprg	bundle/ack.vim/plugin/ack.vim	/^  let g:ackprg .= g:ack_default_options$/;"	v
g:airline#extensions#default#layout	bundle/vim-airline/t/extensions_default.vim	/^    let g:airline#extensions#default#layout = [$/;"	v
g:airline#extensions#example#number_of_cats	bundle/vim-airline/autoload/airline/extensions/example.vim	/^  let g:airline#extensions#example#number_of_cats = 42$/;"	v
g:airline#extensions#quickfix#location_text	bundle/vim-airline/autoload/airline/extensions/quickfix.vim	/^let g:airline#extensions#quickfix#location_text = 'Location'$/;"	v
g:airline#extensions#quickfix#quickfix_text	bundle/vim-airline/autoload/airline/extensions/quickfix.vim	/^let g:airline#extensions#quickfix#quickfix_text = 'Quickfix'$/;"	v
g:airline#extensions#windowswap#indicator_text	bundle/vim-airline/autoload/airline/extensions/windowswap.vim	/^  let g:airline#extensions#windowswap#indicator_text = 'WS'$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette = {}$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.accents = {$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.inactive_modified = {$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.insert_modified = {$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.insert_paste = {$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.normal_modified = {$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.replace = copy(airline#themes#badwolf#palette.insert)$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.replace.airline_a = [ s:I1[0] , s:RE[0] , s:I1[2] , s:RE[1] , '' ]$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.replace_modified = g:airline#themes#badwolf#palette.insert_modified$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.visual_modified = {$/;"	v
g:airline#themes#base16#palette	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette = {}$/;"	v
g:airline#themes#base16#palette	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#base16#palette	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.inactive_modified = {$/;"	v
g:airline#themes#base16#palette	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.insert = airline#themes#generate_color_map(s:I1, s:N2, s:I3)$/;"	v
g:airline#themes#base16#palette	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.insert_modified = copy(g:airline#themes#base16#palette.normal_modified)$/;"	v
g:airline#themes#base16#palette	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.insert_paste = {$/;"	v
g:airline#themes#base16#palette	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16#palette	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.normal_modified = {$/;"	v
g:airline#themes#base16#palette	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.replace = {$/;"	v
g:airline#themes#base16#palette	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.replace_modified = copy(g:airline#themes#base16#palette.insert_modified)$/;"	v
g:airline#themes#base16#palette	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.visual = airline#themes#generate_color_map(s:V1, s:N2, s:V3)$/;"	v
g:airline#themes#base16#palette	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.visual_modified = copy(g:airline#themes#base16#palette.insert_modified)$/;"	v
g:airline#themes#bubblegum#palette	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette = {}$/;"	v
g:airline#themes#bubblegum#palette	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#bubblegum#palette	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#bubblegum#palette	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.inactive_modified = {$/;"	v
g:airline#themes#bubblegum#palette	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.insert = airline#themes#generate_color_map(s:I1, s:N2, s:I3)$/;"	v
g:airline#themes#bubblegum#palette	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.insert_modified = copy(g:airline#themes#bubblegum#palette.normal_modified)$/;"	v
g:airline#themes#bubblegum#palette	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.insert_paste = {$/;"	v
g:airline#themes#bubblegum#palette	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#bubblegum#palette	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.normal_modified = {$/;"	v
g:airline#themes#bubblegum#palette	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.replace = {$/;"	v
g:airline#themes#bubblegum#palette	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.replace_modified = copy(g:airline#themes#bubblegum#palette.insert_modified)$/;"	v
g:airline#themes#bubblegum#palette	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.visual = airline#themes#generate_color_map(s:V1, s:N2, s:V3)$/;"	v
g:airline#themes#bubblegum#palette	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.visual_modified = copy(g:airline#themes#bubblegum#palette.insert_modified)$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette = {}$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.accents = {$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.inactive_modified = {$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert_modified = {$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert_paste = {$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.normal_modified = {$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace = copy(g:airline#themes#dark#palette.insert)$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace.airline_a = [ s:I2[0]   , '#af0000' , s:I2[2] , 124     , ''     ]$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace_modified = g:airline#themes#dark#palette.insert_modified$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.visual_modified = {$/;"	v
g:airline#themes#durant#normal_modified	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#normal_modified = {$/;"	v
g:airline#themes#durant#palette	bundle/vim-airline/autoload/airline/themes/durant.vim	/^  let g:airline#themes#durant#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#durant#palette	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.accents = {$/;"	v
g:airline#themes#durant#palette	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#durant#palette	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.inactive_modified = {$/;"	v
g:airline#themes#durant#palette	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#durant#palette	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.insert_modified = {$/;"	v
g:airline#themes#durant#palette	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.insert_paste = {$/;"	v
g:airline#themes#durant#palette	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#durant#palette	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.replace = copy(g:airline#themes#durant#palette.insert)$/;"	v
g:airline#themes#durant#palette	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.replace.airline_a = [ s:I2[0]   , '#af0000' , s:I2[2] , 124     , ''     ]$/;"	v
g:airline#themes#durant#palette	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.replace_modified = g:airline#themes#durant#palette.insert_modified$/;"	v
g:airline#themes#durant#palette	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#durant#palette	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.visual_modified = {$/;"	v
g:airline#themes#hybrid#palette	bundle/vim-airline/autoload/airline/themes/hybrid.vim	/^let g:airline#themes#hybrid#palette = {}$/;"	v
g:airline#themes#jellybeans#palette	bundle/vim-airline/autoload/airline/themes/jellybeans.vim	/^let g:airline#themes#jellybeans#palette = {}$/;"	v
g:airline#themes#kalisi#palette	bundle/vim-airline/autoload/airline/themes/kalisi.vim	/^let g:airline#themes#kalisi#palette = {}$/;"	v
g:airline#themes#kalisi#palette	bundle/vim-airline/autoload/airline/themes/kalisi.vim	/^let g:airline#themes#kalisi#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette = {}$/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.accents = {$/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.inactive_modified = {$/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.insert_modified = {$/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.normal_modified = {$/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.replace = copy(g:airline#themes#kolor#palette.insert)$/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.replace.airline_a = [ s:I2[0]   , '#005154' , s:I2[2] , 23      , ''     ]$/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.replace_modified = {$/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.visual_modified = {$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette = {}$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.accents = {$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.inactive_modified = {$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.insert_modified = {$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.insert_paste = {$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.normal_modified = {$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.replace = copy(airline#themes#laederon#palette.insert)$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.replace.airline_a = [ s:I1[0] , s:RE[0] , s:I1[2] , s:RE[1] , '' ]$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.replace_modified = g:airline#themes#laederon#palette.insert_modified$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.visual_modified = {$/;"	v
g:airline#themes#light#palette	bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette = {}$/;"	v
g:airline#themes#light#palette	bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#light#palette	bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.inactive_modified = {$/;"	v
g:airline#themes#light#palette	bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#light#palette	bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.insert_modified = {$/;"	v
g:airline#themes#light#palette	bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.insert_paste = {$/;"	v
g:airline#themes#light#palette	bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#light#palette	bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.normal_modified = {$/;"	v
g:airline#themes#light#palette	bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.replace = copy(g:airline#themes#light#palette.insert)$/;"	v
g:airline#themes#light#palette	bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.replace.airline_a = [ s:I2[0]   , '#ff0000' , s:I1[2] , 196     , ''     ]$/;"	v
g:airline#themes#light#palette	bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.replace_modified = g:airline#themes#light#palette.insert_modified$/;"	v
g:airline#themes#light#palette	bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#light#palette	bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.visual_modified = {$/;"	v
g:airline#themes#lucius#palette	bundle/vim-airline/autoload/airline/themes/lucius.vim	/^let g:airline#themes#lucius#palette = {}$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette = {}$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.accents = {$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.inactive_modified = {$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.insert.airline_warning =$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.insert_modified = {$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.insert_paste = {$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.normal.airline_warning = [$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.normal_modified = {$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.replace = copy(g:airline#themes#luna#palette.insert)$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.replace.airline_a = [ s:I2[0]   , '#920000' , s:I2[2] , 88     , ''     ]$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.replace.airline_warning =$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.replace_modified = g:airline#themes#luna#palette.insert_modified$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.tabline = {$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.visual.airline_warning =$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.visual_modified = {$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette = {}$/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.accents = {$/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.inactive_modified = {$/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.insert_modified = {$/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.normal_modified = {$/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.replace = copy(g:airline#themes#molokai#palette.insert)$/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.replace.airline_a = [ s:I1[0]   , '#ef5939' , s:I1[2] , 166     , ''     ]$/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.replace_modified = {$/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.visual_modified = {$/;"	v
g:airline#themes#monochrome#palette	bundle/vim-airline/autoload/airline/themes/monochrome.vim	/^let g:airline#themes#monochrome#palette = {}$/;"	v
g:airline#themes#murmur#palette	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette = {}$/;"	v
g:airline#themes#murmur#palette	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#murmur#palette	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#murmur#palette	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.insert = airline#themes#generate_color_map(s:I1, s:BB, s:I2)$/;"	v
g:airline#themes#murmur#palette	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.insert_modified = {'airline_c': [s:gui_alert, s:gui_termbg2, s:cterm_alert, s:cterm_termbg2, 'bold'] ,}$/;"	v
g:airline#themes#murmur#palette	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.normal = airline#themes#generate_color_map(s:N1, s:BB, s:N2)$/;"	v
g:airline#themes#murmur#palette	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.normal_modified = {'airline_c': [s:gui_alert, s:gui_termbg2, s:cterm_alert, s:cterm_termbg2, 'bold'] ,}$/;"	v
g:airline#themes#murmur#palette	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.replace = airline#themes#generate_color_map(s:R1, s:BB, s:R2)$/;"	v
g:airline#themes#murmur#palette	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.replace_modified = {'airline_c': [s:gui_alert, s:gui_termbg2, s:cterm_alert, s:cterm_termbg2, 'bold'] ,}$/;"	v
g:airline#themes#murmur#palette	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.visual = airline#themes#generate_color_map(s:V1, s:BB, s:V2)$/;"	v
g:airline#themes#murmur#palette	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.visual_modified = {'airline_c': [s:gui_alert, s:gui_termbg2, s:cterm_alert, s:cterm_termbg2, 'bold'] ,}$/;"	v
g:airline#themes#powerlineish#palette	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette = {}$/;"	v
g:airline#themes#powerlineish#palette	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#powerlineish#palette	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#powerlineish#palette	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.insert_replace = {$/;"	v
g:airline#themes#powerlineish#palette	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#powerlineish#palette	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.replace = copy(airline#themes#powerlineish#palette.normal)$/;"	v
g:airline#themes#powerlineish#palette	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.replace.airline_a = [ s:RE[0] , s:RE[1] , s:RE[2] , s:RE[3] , '' ]$/;"	v
g:airline#themes#powerlineish#palette	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.visual = {$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette = {}$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.accents = {$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.inactive_modified = {$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.insert.airline_warning =$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.insert_modified = {$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.insert_paste = {$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.normal.airline_warning = [$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.normal_modified = {$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.replace = copy(g:airline#themes#raven#palette.insert)$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.replace.airline_a = [ '#e60000' , s:I1[1] , 160 , s:I1[3] , '' ]$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.replace.airline_warning =$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.replace.airline_z = [ '#e60000' , s:I1[1] , 160 , s:I1[3] , '' ]$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.replace_modified = g:airline#themes#raven#palette.insert_modified$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.tabline = {$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.visual.airline_warning =$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.visual_modified = {$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#serene#palette	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette = {}$/;"	v
g:airline#themes#serene#palette	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA2, s:IA2)$/;"	v
g:airline#themes#serene#palette	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.inactive_modified = copy(g:airline#themes#serene#palette.normal_modified)$/;"	v
g:airline#themes#serene#palette	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#serene#palette	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.insert_modified = copy(g:airline#themes#serene#palette.normal_modified)$/;"	v
g:airline#themes#serene#palette	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.insert_paste = {$/;"	v
g:airline#themes#serene#palette	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#serene#palette	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.normal_modified = {$/;"	v
g:airline#themes#serene#palette	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.replace = {$/;"	v
g:airline#themes#serene#palette	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.replace_modified = copy(g:airline#themes#serene#palette.normal_modified)$/;"	v
g:airline#themes#serene#palette	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#serene#palette	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.visual_modified = copy(g:airline#themes#serene#palette.normal_modified)$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette = {}$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.accents = {$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.inactive_modified = {$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.insert.airline_warning =$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.insert_modified = {$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.insert_paste = {$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.normal.airline_warning = [$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.normal_modified = {$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.replace = copy(g:airline#themes#silver#palette.insert)$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.replace.airline_a = [ '#b30000' , s:I1[1] , 124 , s:I1[3] , '' ]$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.replace.airline_warning =$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.replace.airline_z = [ '#b30000' , s:I1[1] , 124 , s:I1[3] , '' ]$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.replace_modified = g:airline#themes#silver#palette.insert_modified$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.tabline = {$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.visual.airline_warning =$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.visual_modified = {$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#simple#palette	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette = {}$/;"	v
g:airline#themes#simple#palette	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA2, s:IA2)$/;"	v
g:airline#themes#simple#palette	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.inactive_modified = {$/;"	v
g:airline#themes#simple#palette	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#simple#palette	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.insert_modified = copy(g:airline#themes#simple#palette.normal_modified)$/;"	v
g:airline#themes#simple#palette	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.insert_paste = {$/;"	v
g:airline#themes#simple#palette	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#simple#palette	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.normal_modified = {$/;"	v
g:airline#themes#simple#palette	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.replace = {$/;"	v
g:airline#themes#simple#palette	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.replace_modified = copy(g:airline#themes#simple#palette.normal_modified)$/;"	v
g:airline#themes#simple#palette	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#simple#palette	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.visual_modified = copy(g:airline#themes#simple#palette.normal_modified)$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette = {}$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.accents = {$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.inactive_modified = {$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.insert.airline_warning =$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.insert_modified = {$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.insert_paste = {$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.normal.airline_warning = [$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.normal_modified = {$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace = copy(g:airline#themes#sol#palette.insert)$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace.airline_a = [ s:I1[0] , '#ff2121' , s:I1[2] , 196 , '' ]$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace.airline_warning =$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace.airline_z = [ s:I1[0] , '#ff2121' , s:I1[2] , 196 , '' ]$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace_modified = g:airline#themes#sol#palette.insert_modified$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.tabline = {$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.visual.airline_warning =$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.visual_modified = {$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#solarized#palette	bundle/vim-airline/autoload/airline/themes/solarized.vim	/^let g:airline#themes#solarized#palette = {}$/;"	v
g:airline#themes#tomorrow#palette	bundle/vim-airline/autoload/airline/themes/tomorrow.vim	/^let g:airline#themes#tomorrow#palette = {}$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette = {}$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.accents = {$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.inactive = {$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.inactive_modified = {$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.insert_modified = {$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.insert_paste = {$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.normal_modified = {$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.replace = copy(airline#themes#ubaryd#palette.insert)$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.replace.airline_a = [ s:I1[0] , s:RE[0] , s:I1[2] , s:RE[1] , '' ]$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.replace_modified = g:airline#themes#ubaryd#palette.insert_modified$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.visual_modified = {$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette = {}$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.accents = {'red': ['#FF0000', '', 88, '']}$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.inactive_modified = {'airline_c': ['#4E4E4E', '', 239, '', 'bold'] ,}$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.insert_modified = {'airline_c': ['#AFAF87', '#5F5F5F', 144, 59, 'bold'] ,}$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.insert_paste = {'airline_c': ['#AFAF87', '#5F5F5F', 144, 59, ''] ,}$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.normal_modified = {'airline_c': ['#ffffff', '#5f005f', 144, 59, 'bold'] ,}$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.replace = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.replace.airline_a = ['#FFFFFF', '#870000', 15, 88, '']$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.replace_modified = {'airline_c': ['#AFAF87', '#5F5F5F', 144, 59, 'bold'] ,}$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.visual_modified = {'airline_c': [ '#AFAF87', '#5f005f', 144, 59, 'bold'] ,}$/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette = {}$/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.accents = {$/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.inactive_modified = {$/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.insert_modified = {$/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.insert_paste = {$/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.normal_modified = {$/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.replace_modified = {$/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.visual_modified = {$/;"	v
g:airline#themes#zenburn#palette	bundle/vim-airline/autoload/airline/themes/zenburn.vim	/^let g:airline#themes#zenburn#palette = {}$/;"	v
g:airline_inactive_collapse	bundle/vim-airline/t/airline.vim	/^    let g:airline_inactive_collapse = 0$/;"	v
g:airline_inactive_collapse	bundle/vim-airline/t/airline.vim	/^    let g:airline_inactive_collapse = 1$/;"	v
g:airline_section_	bundle/vim-airline/t/init.vim	/^      let g:airline_section_{s} = s$/;"	v
g:airline_section_a	bundle/vim-airline/t/airline.vim	/^    let g:airline_section_a = airline#section#create(['mode', 'mode'])$/;"	v
g:airline_statusline_funcrefs	bundle/vim-airline/autoload/airline.vim	/^let g:airline_statusline_funcrefs = get(g:, 'airline_statusline_funcrefs', [])$/;"	v
g:airline_statusline_funcrefs	bundle/vim-airline/t/airline.vim	/^    let g:airline_statusline_funcrefs = []$/;"	v
g:airline_theme	bundle/vim-airline/t/airline.vim	/^let g:airline_theme = 'dark'$/;"	v
g:airline_theme	bundle/vim-airline/t/builder.vim	/^let g:airline_theme = 'dark'$/;"	v
g:airline_theme	bundle/vim-airline/t/extensions_default.vim	/^let g:airline_theme = 'dark'$/;"	v
g:airline_theme	bundle/vim-airline/t/highlighter.vim	/^let g:airline_theme = 'dark'$/;"	v
g:autoloaded_rails	bundle/vim-rails/autoload/rails.vim	/^let g:autoloaded_rails = '5.2'$/;"	v
g:badwolf_css_props_highlight	badwolf.vim	/^    let g:badwolf_css_props_highlight = 0$/;"	v
g:badwolf_html_link_underline	badwolf.vim	/^    let g:badwolf_html_link_underline = 1$/;"	v
g:colors_name	molokai.vim	/^let g:colors_name="molokai"$/;"	v
g:count	bundle/vim-airline/t/util.vim	/^    let g:count = 0$/;"	v
g:delimitMate_excluded_ft	bundle/delimitMate/autoload/delimitMateTests.vim	/^	let g:delimitMate_excluded_ft = "vim"$/;"	v
g:delimitMate_expand_cr	bundle/delimitMate/test/expand_cr.vim	/^let g:delimitMate_expand_cr = 1$/;"	v
g:delimitMate_expand_space	bundle/delimitMate/test/expand_space.vim	/^let g:delimitMate_expand_space = 1$/;"	v
g:delimitMate_matchpairs	bundle/delimitMate/test/autoclose_matchpairs.vim	/^let g:delimitMate_matchpairs = '(:),{:},[:],<:>,¿:?,¡:!'$/;"	v
g:delimitMate_quotes	bundle/delimitMate/test/autoclose_quotes.vim	/^let g:delimitMate_quotes = '" '' ` ” « |'$/;"	v
g:did_ft	bundle/snipmate.vim/plugin/snipMate.vim	/^let g:did_ft = {}$/;"	v
g:emmet_curl_command	bundle/emmet-vim/plugin/emmet.vim	/^  let g:emmet_curl_command = 'curl -s -L -A Mozilla\/5.0'$/;"	v
g:emmet_debug	bundle/emmet-vim/plugin/emmet.vim	/^  let g:emmet_debug = 0$/;"	v
g:emmet_docroot	bundle/emmet-vim/plugin/emmet.vim	/^  let g:emmet_docroot = {}$/;"	v
g:emmet_html5	bundle/emmet-vim/plugin/emmet.vim	/^  let g:emmet_html5 = 1$/;"	v
g:fugitive_browse_handlers	bundle/vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_browse_handlers = []$/;"	v
g:fugitive_git_executable	bundle/vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_git_executable = 'git'$/;"	v
g:fugitive_summary_format	bundle/vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_summary_format = '%s'$/;"	v
g:loaded_SingleCompile	bundle/SingleCompile/plugin/SingleCompile.vim	/^let g:loaded_SingleCompile = 1$/;"	v
g:loaded_ack	bundle/ack.vim/plugin/ack.vim	/^let g:loaded_ack = 1$/;"	v
g:loaded_airline	bundle/vim-airline/plugin/airline.vim	/^let g:loaded_airline = 1$/;"	v
g:loaded_ctrlp	bundle/ctrlp.vim/plugin/ctrlp.vim	/^let g:loaded_ctrlp = 1$/;"	v
g:loaded_ctrlp_bookmarkdir	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^let g:loaded_ctrlp_bookmarkdir = 1$/;"	v
g:loaded_ctrlp_buftag	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let g:loaded_ctrlp_buftag = 1$/;"	v
g:loaded_ctrlp_changes	bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^let g:loaded_ctrlp_changes = 1$/;"	v
g:loaded_ctrlp_line	bundle/ctrlp.vim/autoload/ctrlp/line.vim	/^let g:loaded_ctrlp_line = 1$/;"	v
g:loaded_ctrlp_quickfix	bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^let g:loaded_ctrlp_quickfix = 1$/;"	v
g:loaded_ctrlp_tag	bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^let g:loaded_ctrlp_tag = 1$/;"	v
g:loaded_ctrlp_undo	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^let g:loaded_ctrlp_undo = 1$/;"	v
g:loaded_delimitMate	bundle/delimitMate/plugin/delimitMate.vim	/^let g:loaded_delimitMate = 1$/;"	v
g:loaded_emmet_vim	bundle/emmet-vim/plugin/emmet.vim	/^let g:loaded_emmet_vim = 1$/;"	v
g:loaded_fugitive	bundle/vim-fugitive/plugin/fugitive.vim	/^let g:loaded_fugitive = 1$/;"	v
g:loaded_html5validator	bundle/vim-html5validator/plugin/html5validator.vim	/^let g:loaded_html5validator = 1$/;"	v
g:loaded_nerdtree_autoload	bundle/nerdtree/autoload/nerdtree.vim	/^let g:loaded_nerdtree_autoload = 1$/;"	v
g:loaded_nerdtree_exec_menuitem	bundle/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^let g:loaded_nerdtree_exec_menuitem = 1$/;"	v
g:loaded_nerdtree_fs_menu	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^let g:loaded_nerdtree_fs_menu = 1$/;"	v
g:loaded_pasta	bundle/vim-pasta/plugin/pasta.vim	/^let g:loaded_pasta = 1$/;"	v
g:loaded_pathogen	autoload/pathogen.vim	/^let g:loaded_pathogen = 1$/;"	v
g:loaded_rails	bundle/vim-rails/plugin/rails.vim	/^let g:loaded_rails = 1$/;"	v
g:loaded_syntastic_ada_gcc_checker	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^let g:loaded_syntastic_ada_gcc_checker = 1$/;"	v
g:loaded_syntastic_applescript_osacompile_checker	bundle/syntastic/syntax_checkers/applescript/osacompile.vim	/^let g:loaded_syntastic_applescript_osacompile_checker=1$/;"	v
g:loaded_syntastic_c_autoload	bundle/syntastic/autoload/syntastic/c.vim	/^let g:loaded_syntastic_c_autoload = 1$/;"	v
g:loaded_syntastic_c_gcc_checker	bundle/syntastic/syntax_checkers/c/gcc.vim	/^let g:loaded_syntastic_c_gcc_checker = 1$/;"	v
g:loaded_syntastic_checker	bundle/syntastic/plugin/syntastic/checker.vim	/^let g:loaded_syntastic_checker = 1$/;"	v
g:loaded_syntastic_co_coco_checker	bundle/syntastic/syntax_checkers/co/coco.vim	/^let g:loaded_syntastic_co_coco_checker=1$/;"	v
g:loaded_syntastic_coffee_coffee_checker	bundle/syntastic/syntax_checkers/coffee/coffee.vim	/^let g:loaded_syntastic_coffee_coffee_checker=1$/;"	v
g:loaded_syntastic_coffee_coffeelint_checker	bundle/syntastic/syntax_checkers/coffee/coffeelint.vim	/^let g:loaded_syntastic_coffee_coffeelint_checker=1$/;"	v
g:loaded_syntastic_coq_coqtop_checker	bundle/syntastic/syntax_checkers/coq/coqtop.vim	/^let g:loaded_syntastic_coq_coqtop_checker=1$/;"	v
g:loaded_syntastic_cpp_cpplint_checker	bundle/syntastic/syntax_checkers/cpp/cpplint.vim	/^let g:loaded_syntastic_cpp_cpplint_checker = 1$/;"	v
g:loaded_syntastic_cpp_gcc_checker	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^let g:loaded_syntastic_cpp_gcc_checker = 1$/;"	v
g:loaded_syntastic_cs_mcs_checker	bundle/syntastic/syntax_checkers/cs/mcs.vim	/^let g:loaded_syntastic_cs_mcs_checker=1$/;"	v
g:loaded_syntastic_css_csslint_checker	bundle/syntastic/syntax_checkers/css/csslint.vim	/^let g:loaded_syntastic_css_csslint_checker=1$/;"	v
g:loaded_syntastic_css_phpcs_checker	bundle/syntastic/syntax_checkers/css/phpcs.vim	/^let g:loaded_syntastic_css_phpcs_checker=1$/;"	v
g:loaded_syntastic_css_prettycss_checker	bundle/syntastic/syntax_checkers/css/prettycss.vim	/^let g:loaded_syntastic_css_prettycss_checker=1$/;"	v
g:loaded_syntastic_cucumber_cucumber_checker	bundle/syntastic/syntax_checkers/cucumber/cucumber.vim	/^let g:loaded_syntastic_cucumber_cucumber_checker=1$/;"	v
g:loaded_syntastic_cuda_nvcc_checker	bundle/syntastic/syntax_checkers/cuda/nvcc.vim	/^let g:loaded_syntastic_cuda_nvcc_checker=1$/;"	v
g:loaded_syntastic_d_dmd_checker	bundle/syntastic/syntax_checkers/d/dmd.vim	/^let g:loaded_syntastic_d_dmd_checker = 1$/;"	v
g:loaded_syntastic_dart_dart_analyzer_checker	bundle/syntastic/syntax_checkers/dart/dart_analyzer.vim	/^let g:loaded_syntastic_dart_dart_analyzer_checker=1$/;"	v
g:loaded_syntastic_docbk_xmllint_checker	bundle/syntastic/syntax_checkers/docbk/xmllint.vim	/^let g:loaded_syntastic_docbk_xmllint_checker=1$/;"	v
g:loaded_syntastic_elixir_elixir_checker	bundle/syntastic/syntax_checkers/elixir/elixir.vim	/^let g:loaded_syntastic_elixir_elixir_checker=1$/;"	v
g:loaded_syntastic_erlang_erlang_checker	bundle/syntastic/syntax_checkers/erlang/erlang.vim	/^let g:loaded_syntastic_erlang_erlang_checker=1$/;"	v
g:loaded_syntastic_eruby_ruby_checker	bundle/syntastic/syntax_checkers/eruby/ruby.vim	/^let g:loaded_syntastic_eruby_ruby_checker=1$/;"	v
g:loaded_syntastic_fortran_gfortran_checker	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^let g:loaded_syntastic_fortran_gfortran_checker=1$/;"	v
g:loaded_syntastic_gentoo_metadata_xmllint_checker	bundle/syntastic/syntax_checkers/gentoo_metadata/xmllint.vim	/^let g:loaded_syntastic_gentoo_metadata_xmllint_checker=1$/;"	v
g:loaded_syntastic_go_go_checker	bundle/syntastic/syntax_checkers/go/go.vim	/^let g:loaded_syntastic_go_go_checker=1$/;"	v
g:loaded_syntastic_go_gofmt_checker	bundle/syntastic/syntax_checkers/go/gofmt.vim	/^let g:loaded_syntastic_go_gofmt_checker=1$/;"	v
g:loaded_syntastic_go_govet_checker	bundle/syntastic/syntax_checkers/go/govet.vim	/^let g:loaded_syntastic_go_govet_checker=1$/;"	v
g:loaded_syntastic_haml_haml_checker	bundle/syntastic/syntax_checkers/haml/haml.vim	/^let g:loaded_syntastic_haml_haml_checker=1$/;"	v
g:loaded_syntastic_haskell_ghc_mod_checker	bundle/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^let g:loaded_syntastic_haskell_ghc_mod_checker=1$/;"	v
g:loaded_syntastic_haskell_hdevtools_checker	bundle/syntastic/syntax_checkers/haskell/hdevtools.vim	/^let g:loaded_syntastic_haskell_hdevtools_checker=1$/;"	v
g:loaded_syntastic_haxe_haxe_checker	bundle/syntastic/syntax_checkers/haxe/haxe.vim	/^let g:loaded_syntastic_haxe_haxe_checker=1$/;"	v
g:loaded_syntastic_html_tidy_checker	bundle/syntastic/syntax_checkers/html/tidy.vim	/^let g:loaded_syntastic_html_tidy_checker = 1$/;"	v
g:loaded_syntastic_html_validator_checker	bundle/syntastic/syntax_checkers/html/validator.vim	/^let g:loaded_syntastic_html_validator_checker=1$/;"	v
g:loaded_syntastic_html_w3_checker	bundle/syntastic/syntax_checkers/html/w3.vim	/^let g:loaded_syntastic_html_w3_checker = 1$/;"	v
g:loaded_syntastic_java_checkstyle_checker	bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^let g:loaded_syntastic_java_checkstyle_checker=1$/;"	v
g:loaded_syntastic_java_javac_checker	bundle/syntastic/syntax_checkers/java/javac.vim	/^let g:loaded_syntastic_java_javac_checker=1$/;"	v
g:loaded_syntastic_javascript_closurecompiler_checker	bundle/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^let g:loaded_syntastic_javascript_closurecompiler_checker=1$/;"	v
g:loaded_syntastic_javascript_gjslint_checker	bundle/syntastic/syntax_checkers/javascript/gjslint.vim	/^let g:loaded_syntastic_javascript_gjslint_checker=1$/;"	v
g:loaded_syntastic_javascript_jshint_checker	bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^let g:loaded_syntastic_javascript_jshint_checker=1$/;"	v
g:loaded_syntastic_javascript_jsl_checker	bundle/syntastic/syntax_checkers/javascript/jsl.vim	/^let g:loaded_syntastic_javascript_jsl_checker=1$/;"	v
g:loaded_syntastic_javascript_jslint_checker	bundle/syntastic/syntax_checkers/javascript/jslint.vim	/^let g:loaded_syntastic_javascript_jslint_checker=1$/;"	v
g:loaded_syntastic_json_jsonlint_checker	bundle/syntastic/syntax_checkers/json/jsonlint.vim	/^let g:loaded_syntastic_json_jsonlint_checker=1$/;"	v
g:loaded_syntastic_json_jsonval_checker	bundle/syntastic/syntax_checkers/json/jsonval.vim	/^let g:loaded_syntastic_json_jsonval_checker=1$/;"	v
g:loaded_syntastic_less_lessc_checker	bundle/syntastic/syntax_checkers/less/lessc.vim	/^let g:loaded_syntastic_less_lessc_checker=1$/;"	v
g:loaded_syntastic_lisp_clisp_checker	bundle/syntastic/syntax_checkers/lisp/clisp.vim	/^let g:loaded_syntastic_lisp_clisp_checker=1$/;"	v
g:loaded_syntastic_loclist	bundle/syntastic/plugin/syntastic/loclist.vim	/^let g:loaded_syntastic_loclist = 1$/;"	v
g:loaded_syntastic_lua_luac_checker	bundle/syntastic/syntax_checkers/lua/luac.vim	/^let g:loaded_syntastic_lua_luac_checker=1$/;"	v
g:loaded_syntastic_makeprg_autoload	bundle/syntastic/autoload/syntastic/makeprg.vim	/^let g:loaded_syntastic_makeprg_autoload = 1$/;"	v
g:loaded_syntastic_makeprg_builder	bundle/syntastic/plugin/syntastic/makeprg_builder.vim	/^let g:loaded_syntastic_makeprg_builder = 1$/;"	v
g:loaded_syntastic_matlab_mlint_checker	bundle/syntastic/syntax_checkers/matlab/mlint.vim	/^let g:loaded_syntastic_matlab_mlint_checker=1$/;"	v
g:loaded_syntastic_modemap	bundle/syntastic/plugin/syntastic/modemap.vim	/^let g:loaded_syntastic_modemap = 1$/;"	v
g:loaded_syntastic_nasm_nasm_checker	bundle/syntastic/syntax_checkers/nasm/nasm.vim	/^let g:loaded_syntastic_nasm_nasm_checker=1$/;"	v
g:loaded_syntastic_notifier_autoloclist	bundle/syntastic/plugin/syntastic/autoloclist.vim	/^let g:loaded_syntastic_notifier_autoloclist = 1$/;"	v
g:loaded_syntastic_notifier_balloons	bundle/syntastic/plugin/syntastic/balloons.vim	/^let g:loaded_syntastic_notifier_balloons = 1$/;"	v
g:loaded_syntastic_notifier_cursor	bundle/syntastic/plugin/syntastic/cursor.vim	/^let g:loaded_syntastic_notifier_cursor = 1$/;"	v
g:loaded_syntastic_notifier_highlighting	bundle/syntastic/plugin/syntastic/highlighting.vim	/^let g:loaded_syntastic_notifier_highlighting = 1$/;"	v
g:loaded_syntastic_notifier_signs	bundle/syntastic/plugin/syntastic/signs.vim	/^let g:loaded_syntastic_notifier_signs = 1$/;"	v
g:loaded_syntastic_notifiers	bundle/syntastic/plugin/syntastic/notifiers.vim	/^let g:loaded_syntastic_notifiers = 1$/;"	v
g:loaded_syntastic_objc_gcc_checker	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^let g:loaded_syntastic_objc_gcc_checker = 1$/;"	v
g:loaded_syntastic_ocaml_camlp4o_checker	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^let g:loaded_syntastic_ocaml_camlp4o_checker=1$/;"	v
g:loaded_syntastic_perl_perl_checker	bundle/syntastic/syntax_checkers/perl/perl.vim	/^let g:loaded_syntastic_perl_perl_checker=1$/;"	v
g:loaded_syntastic_perl_perlcritic_checker	bundle/syntastic/syntax_checkers/perl/perlcritic.vim	/^let g:loaded_syntastic_perl_perlcritic_checker=1$/;"	v
g:loaded_syntastic_php_php_checker	bundle/syntastic/syntax_checkers/php/php.vim	/^let g:loaded_syntastic_php_php_checker=1$/;"	v
g:loaded_syntastic_php_phpcs_checker	bundle/syntastic/syntax_checkers/php/phpcs.vim	/^let g:loaded_syntastic_php_phpcs_checker=1$/;"	v
g:loaded_syntastic_php_phpmd_checker	bundle/syntastic/syntax_checkers/php/phpmd.vim	/^let g:loaded_syntastic_php_phpmd_checker=1$/;"	v
g:loaded_syntastic_plugin	bundle/syntastic/plugin/syntastic.vim	/^let g:loaded_syntastic_plugin = 1$/;"	v
g:loaded_syntastic_puppet_puppetlint_checker	bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^let g:loaded_syntastic_puppet_puppetlint_checker=1$/;"	v
g:loaded_syntastic_python_flake8_checker	bundle/syntastic/syntax_checkers/python/flake8.vim	/^let g:loaded_syntastic_python_flake8_checker=1$/;"	v
g:loaded_syntastic_python_py3kwarn_checker	bundle/syntastic/syntax_checkers/python/py3kwarn.vim	/^let g:loaded_syntastic_python_py3kwarn_checker=1$/;"	v
g:loaded_syntastic_python_pyflakes_checker	bundle/syntastic/syntax_checkers/python/pyflakes.vim	/^let g:loaded_syntastic_python_pyflakes_checker=1$/;"	v
g:loaded_syntastic_python_pylint_checker	bundle/syntastic/syntax_checkers/python/pylint.vim	/^let g:loaded_syntastic_python_pylint_checker=1$/;"	v
g:loaded_syntastic_python_python_checker	bundle/syntastic/syntax_checkers/python/python.vim	/^let g:loaded_syntastic_python_python_checker=1$/;"	v
g:loaded_syntastic_registry	bundle/syntastic/plugin/syntastic/registry.vim	/^let g:loaded_syntastic_registry = 1$/;"	v
g:loaded_syntastic_rst_rst2pseudoxml_checker	bundle/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^let g:loaded_syntastic_rst_rst2pseudoxml_checker=1$/;"	v
g:loaded_syntastic_ruby_jruby_checker	bundle/syntastic/syntax_checkers/ruby/jruby.vim	/^let g:loaded_syntastic_ruby_jruby_checker=1$/;"	v
g:loaded_syntastic_ruby_macruby_checker	bundle/syntastic/syntax_checkers/ruby/macruby.vim	/^let g:loaded_syntastic_ruby_macruby_checker=1$/;"	v
g:loaded_syntastic_ruby_mri_checker	bundle/syntastic/syntax_checkers/ruby/mri.vim	/^let g:loaded_syntastic_ruby_mri_checker=1$/;"	v
g:loaded_syntastic_ruby_rubocop_checker	bundle/syntastic/syntax_checkers/ruby/rubocop.vim	/^let g:loaded_syntastic_ruby_rubocop_checker=1$/;"	v
g:loaded_syntastic_rust_rustc_checker	bundle/syntastic/syntax_checkers/rust/rustc.vim	/^let g:loaded_syntastic_rust_rustc_checker=1$/;"	v
g:loaded_syntastic_sass_sass_checker	bundle/syntastic/syntax_checkers/sass/sass.vim	/^let g:loaded_syntastic_sass_sass_checker=1$/;"	v
g:loaded_syntastic_scala_scalac_checker	bundle/syntastic/syntax_checkers/scala/scalac.vim	/^let g:loaded_syntastic_scala_scalac_checker=1$/;"	v
g:loaded_syntastic_scss_sass_checker	bundle/syntastic/syntax_checkers/scss/sass.vim	/^let g:loaded_syntastic_scss_sass_checker=1$/;"	v
g:loaded_syntastic_sh_checkbashisms_checker	bundle/syntastic/syntax_checkers/sh/checkbashisms.vim	/^let g:loaded_syntastic_sh_checkbashisms_checker=1$/;"	v
g:loaded_syntastic_sh_sh_checker	bundle/syntastic/syntax_checkers/sh/sh.vim	/^let g:loaded_syntastic_sh_sh_checker=1$/;"	v
g:loaded_syntastic_slim_slimrb_checker	bundle/syntastic/syntax_checkers/slim/slimrb.vim	/^let g:loaded_syntastic_slim_slimrb_checker=1$/;"	v
g:loaded_syntastic_tcl_nagelfar_checker	bundle/syntastic/syntax_checkers/tcl/nagelfar.vim	/^let g:loaded_syntastic_tcl_nagelfar_checker=1$/;"	v
g:loaded_syntastic_tex_chktex_checker	bundle/syntastic/syntax_checkers/tex/chktex.vim	/^let g:loaded_syntastic_tex_chktex_checker = 1$/;"	v
g:loaded_syntastic_tex_lacheck_checker	bundle/syntastic/syntax_checkers/tex/lacheck.vim	/^let g:loaded_syntastic_tex_lacheck_checker=1$/;"	v
g:loaded_syntastic_twig_twiglint_checker	bundle/syntastic/syntax_checkers/twig/twiglint.vim	/^let g:loaded_syntastic_twig_twiglint_checker=1$/;"	v
g:loaded_syntastic_typescript_tsc_checker	bundle/syntastic/syntax_checkers/typescript/tsc.vim	/^let g:loaded_syntastic_typescript_tsc_checker=1$/;"	v
g:loaded_syntastic_util_autoload	bundle/syntastic/autoload/syntastic/util.vim	/^let g:loaded_syntastic_util_autoload = 1$/;"	v
g:loaded_syntastic_xhtml_tidy_checker	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^let g:loaded_syntastic_xhtml_tidy_checker=1$/;"	v
g:loaded_syntastic_xml_xmllint_checker	bundle/syntastic/syntax_checkers/xml/xmllint.vim	/^let g:loaded_syntastic_xml_xmllint_checker=1$/;"	v
g:loaded_syntastic_xslt_xmllint_checker	bundle/syntastic/syntax_checkers/xslt/xmllint.vim	/^let g:loaded_syntastic_xslt_xmllint_checker=1$/;"	v
g:loaded_syntastic_yaml_jsyaml_checker	bundle/syntastic/syntax_checkers/yaml/jsyaml.vim	/^let g:loaded_syntastic_yaml_jsyaml_checker=1$/;"	v
g:loaded_syntastic_z80_z80syntaxchecker_checker	bundle/syntastic/syntax_checkers/z80/z80syntaxchecker.vim	/^let g:loaded_syntastic_z80_z80syntaxchecker_checker=1$/;"	v
g:loaded_syntastic_zpt_zptlint_checker	bundle/syntastic/syntax_checkers/zpt/zptlint.vim	/^let g:loaded_syntastic_zpt_zptlint_checker=1$/;"	v
g:loaded_syntastic_zsh_zsh_checker	bundle/syntastic/syntax_checkers/zsh/zsh.vim	/^let g:loaded_syntastic_zsh_zsh_checker=1$/;"	v
g:loaded_tagbar	bundle/tagbar/autoload/tagbar.vim	/^let g:loaded_tagbar = 1$/;"	v
g:loaded_tasklist	bundle/TaskList.vim/plugin/tasklist.vim	/^let g:loaded_tasklist = 1$/;"	v
g:markdown_fenced_languages	bundle/vim-markdown/syntax/markdown.vim	/^  let g:markdown_fenced_languages = []$/;"	v
g:pasta_disabled_filetypes	bundle/vim-pasta/plugin/pasta.vim	/^  let g:pasta_disabled_filetypes = ["python", "coffee", "markdown", "yaml", "slim"]$/;"	v
g:pasta_paste_after_mapping	bundle/vim-pasta/plugin/pasta.vim	/^  let g:pasta_paste_after_mapping = 'p'$/;"	v
g:pasta_paste_before_mapping	bundle/vim-pasta/plugin/pasta.vim	/^  let g:pasta_paste_before_mapping = 'P'$/;"	v
g:pdv_cfg_Author	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^let g:pdv_cfg_Author = (exists("g:pdv_cfg_Author")) ? g:pdv_cfg_Author : "Name <address@domain>"$/;"	v
g:pdv_cfg_BOL	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^let g:pdv_cfg_BOL = "norm! o"$/;"	v
g:pdv_cfg_ClassTags	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^	let g:pdv_cfg_ClassTags = ["package","author","version"]$/;"	v
g:pdv_cfg_Comment1	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^let g:pdv_cfg_Comment1 = " * "$/;"	v
g:pdv_cfg_CommentHead	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^let g:pdv_cfg_CommentHead = "\/**"$/;"	v
g:pdv_cfg_CommentSingle	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^let g:pdv_cfg_CommentSingle = "\/\/"$/;"	v
g:pdv_cfg_CommentTail	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^let g:pdv_cfg_CommentTail = " *\/"$/;"	v
g:pdv_cfg_Commentn	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^let g:pdv_cfg_Commentn = " *"$/;"	v
g:pdv_cfg_Copyright	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^let g:pdv_cfg_Copyright = (exists("g:pdv_cfg_Copyright")) ? g:pdv_cfg_Copyright : "copyrightLine"$/;"	v
g:pdv_cfg_DefaultTags	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^let g:pdv_cfg_DefaultTags = {}$/;"	v
g:pdv_cfg_EOL	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^let g:pdv_cfg_EOL = ""$/;"	v
g:pdv_cfg_License	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^let g:pdv_cfg_License = (exists("g:pdv_cfg_License")) ? g:pdv_cfg_License : "license"$/;"	v
g:pdv_cfg_Package	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^let g:pdv_cfg_Package = (exists("g:pdv_cfg_Package")) ? g:pdv_cfg_Package : ""$/;"	v
g:pdv_cfg_ReturnVal	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^let g:pdv_cfg_ReturnVal = "void"$/;"	v
g:pdv_cfg_Type	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^let g:pdv_cfg_Type = "mixed"$/;"	v
g:pdv_cfg_Uses	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^let g:pdv_cfg_Uses = 1$/;"	v
g:pdv_cfg_Version	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^let g:pdv_cfg_Version = (exists("g:pdv_cfg_Version")) ? g:pdv_cfg_Version : "$Id$"$/;"	v
g:pdv_cfg_paste	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^let g:pdv_cfg_paste = 1$/;"	v
g:pdv_cfg_php4always	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^let g:pdv_cfg_php4always = 0$/;"	v
g:pdv_cfg_php4guess	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^let g:pdv_cfg_php4guess = 1$/;"	v
g:pdv_cfg_php4guessval	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^let g:pdv_cfg_php4guessval = "protected"$/;"	v
g:pdv_re_abstract	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^let g:pdv_re_abstract = '\\(abstract\\)'$/;"	v
g:pdv_re_array	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^let g:pdv_re_array  = "^array *(.*"$/;"	v
g:pdv_re_attribute	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^let g:pdv_re_attribute = '^\\s*\\(\\(private\\|public\\|protected\\|var\\|static\\)\\+\\)\\s*\\$\\([^ ;=]\\+\\)[ =]*\\(.*\\);\\?$'$/;"	v
g:pdv_re_bool	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^let g:pdv_re_bool   = "\\\\(true\\\\|false\\\\)"$/;"	v
g:pdv_re_class	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^let g:pdv_re_class = '^\\s*\\([a-zA-Z]*\\)\\s*\\(interface\\|class\\)\\s*\\([^ ]\\+\\)\\s*\\(extends\\)\\?\\s*\\([a-zA-Z0-9_]*\\)\\?\\s*\\(implements*\\)\\? *\\([a-zA-Z0-9_ ,]*\\)\\?.*$'$/;"	v
g:pdv_re_comment	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^let g:pdv_re_comment = ' *\\*\/ *'$/;"	v
g:pdv_re_final	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^let g:pdv_re_final = '\\(final\\)'$/;"	v
g:pdv_re_float	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^let g:pdv_re_float  = '^[0-9]*\\.[0-9]\\+'$/;"	v
g:pdv_re_func	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^let g:pdv_re_func = '^\\s*\\([a-zA-Z ]*\\)function\\s\\+\\([^ (]\\+\\)\\s*(\\s*\\(.*\\)\\s*)\\s*[{;]\\?$'$/;"	v
g:pdv_re_indent	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^let g:pdv_re_indent = '^\\s*'$/;"	v
g:pdv_re_int	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^let g:pdv_re_int    = '^[0-9]\\+'$/;"	v
g:pdv_re_param	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^let g:pdv_re_param = ' *\\([^ &]*\\) *&\\?\\$\\([A-Za-z_][A-Za-z0-9_]*\\) *=\\? *\\(.*\\)\\?$'$/;"	v
g:pdv_re_scope	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^let g:pdv_re_scope = '\\(private\\|protected\\|public\\)'$/;"	v
g:pdv_re_static	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^let g:pdv_re_static = '\\(static\\)'$/;"	v
g:pdv_re_string	bundle/php-documentor-vim/ftplugin/php_documentor.vim	/^let g:pdv_re_string = "['\\"].*"$/;"	v
g:php_syntax_extensions_disabled	bundle/php.vim/syntax/php.vim	/^    let g:php_syntax_extensions_disabled = []$/;"	v
g:php_syntax_extensions_enabled	bundle/php.vim/syntax/php.vim	/^    let g:php_syntax_extensions_enabled = ["bcmath", "bz2", "core", "curl", "date", "dom", "ereg", "gd", "gettext", "hash", "iconv", "json", "libxml", "mbstring", "mcrypt", "mhash", "mysql", "mysqli", "openssl", "pcre", "pdo", "pgsql", "phar", "reflection", "session", "simplexml", "soap", "sockets", "spl", "sqlite3", "standard", "tokenizer", "wddx", "xml", "xmlreader", "xmlwriter", "zip", "zlib"]$/;"	v
g:rails_no_abbreviations	bundle/vim-rails/autoload/rails.vim	/^  let g:rails_no_abbreviations = 1$/;"	v
g:syntastic_ada_compiler	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^    let g:syntastic_ada_compiler = 'gcc'$/;"	v
g:syntastic_ada_compiler_options	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^    let g:syntastic_ada_compiler_options = ''$/;"	v
g:syntastic_ada_config_file	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^    let g:syntastic_ada_config_file = '.syntastic_ada_config'$/;"	v
g:syntastic_allow_quit	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_allow_quit = 1$/;"	v
g:syntastic_always_populate_loc_list	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_always_populate_loc_list = 0$/;"	v
g:syntastic_auto_loc_list	bundle/syntastic/plugin/syntastic/autoloclist.vim	/^    let g:syntastic_auto_loc_list = 2$/;"	v
g:syntastic_c_checker_checkpatch_location	bundle/syntastic/syntax_checkers/c/checkpatch.vim	/^    let g:syntastic_c_checker_checkpatch_location = '.\/scripts\/checkpatch.pl'$/;"	v
g:syntastic_c_checker_checkpatch_location	bundle/syntastic/syntax_checkers/c/checkpatch.vim	/^    let g:syntastic_c_checker_checkpatch_location = 'checkpatch.pl'$/;"	v
g:syntastic_c_compiler	bundle/syntastic/syntax_checkers/c/gcc.vim	/^    let g:syntastic_c_compiler = 'gcc'$/;"	v
g:syntastic_c_compiler_options	bundle/syntastic/syntax_checkers/c/gcc.vim	/^    let g:syntastic_c_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_c_config_file	bundle/syntastic/syntax_checkers/c/gcc.vim	/^    let g:syntastic_c_config_file = '.syntastic_c_config'$/;"	v
g:syntastic_check_on_open	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_check_on_open = 0$/;"	v
g:syntastic_cpp_compiler	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^    let g:syntastic_cpp_compiler = 'g++'$/;"	v
g:syntastic_cpp_compiler_options	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^    let g:syntastic_cpp_compiler_options = ''$/;"	v
g:syntastic_cpp_config_file	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^    let g:syntastic_cpp_config_file = '.syntastic_cpp_config'$/;"	v
g:syntastic_cpp_cpplint_args	bundle/syntastic/syntax_checkers/cpp/cpplint.vim	/^    let g:syntastic_cpp_cpplint_args = '--verbose=3'$/;"	v
g:syntastic_cpp_cpplint_thres	bundle/syntastic/syntax_checkers/cpp/cpplint.vim	/^    let g:syntastic_cpp_cpplint_thres = 5$/;"	v
g:syntastic_csslint_options	bundle/syntastic/syntax_checkers/css/csslint.vim	/^    let g:syntastic_csslint_options = ""$/;"	v
g:syntastic_d_compiler	bundle/syntastic/syntax_checkers/d/dmd.vim	/^    let g:syntastic_d_compiler = 'dmd'$/;"	v
g:syntastic_d_compiler_options	bundle/syntastic/syntax_checkers/d/dmd.vim	/^    let g:syntastic_d_compiler_options = ''$/;"	v
g:syntastic_d_config_file	bundle/syntastic/syntax_checkers/d/dmd.vim	/^    let g:syntastic_d_config_file = '.syntastic_d_config'$/;"	v
g:syntastic_dart_analyzer_conf	bundle/syntastic/syntax_checkers/dart/dart_analyzer.vim	/^    let g:syntastic_dart_analyzer_conf = ''$/;"	v
g:syntastic_debug	bundle/syntastic/autoload/syntastic/util.vim	/^    let g:syntastic_debug = 0$/;"	v
g:syntastic_echo_current_error	bundle/syntastic/plugin/syntastic/cursor.vim	/^    let g:syntastic_echo_current_error = 1$/;"	v
g:syntastic_enable_balloons	bundle/syntastic/plugin/syntastic/balloons.vim	/^    let g:syntastic_enable_balloons = 0$/;"	v
g:syntastic_enable_balloons	bundle/syntastic/plugin/syntastic/balloons.vim	/^    let g:syntastic_enable_balloons = 1$/;"	v
g:syntastic_enable_highlighting	bundle/syntastic/plugin/syntastic/highlighting.vim	/^    let g:syntastic_enable_highlighting = 0$/;"	v
g:syntastic_enable_highlighting	bundle/syntastic/plugin/syntastic/highlighting.vim	/^    let g:syntastic_enable_highlighting = 1$/;"	v
g:syntastic_enable_signs	bundle/syntastic/plugin/syntastic/signs.vim	/^    let g:syntastic_enable_signs = 0$/;"	v
g:syntastic_enable_signs	bundle/syntastic/plugin/syntastic/signs.vim	/^    let g:syntastic_enable_signs = 1$/;"	v
g:syntastic_erlc_include_path	bundle/syntastic/syntax_checkers/erlang/erlang.vim	/^    let g:syntastic_erlc_include_path=""$/;"	v
g:syntastic_error_symbol	bundle/syntastic/plugin/syntastic/signs.vim	/^    let g:syntastic_error_symbol = '>>'$/;"	v
g:syntastic_fortran_flags	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^    let g:syntastic_fortran_flags = ''$/;"	v
g:syntastic_haskell_checker_args	bundle/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^    let g:syntastic_haskell_checker_args = '--hlintOpt="--language=XmlSyntax"'$/;"	v
g:syntastic_html_tidy_ignore_errors	bundle/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_ignore_errors = []$/;"	v
g:syntastic_html_validator_api	bundle/syntastic/syntax_checkers/html/validator.vim	/^    let g:syntastic_html_validator_api = 'http:\/\/validator.nu\/'$/;"	v
g:syntastic_html_validator_nsfilter	bundle/syntastic/syntax_checkers/html/validator.vim	/^    let g:syntastic_html_validator_nsfilter = ''$/;"	v
g:syntastic_html_validator_parser	bundle/syntastic/syntax_checkers/html/validator.vim	/^    let g:syntastic_html_validator_parser = ''$/;"	v
g:syntastic_html_w3_api	bundle/syntastic/syntax_checkers/html/w3.vim	/^    let g:syntastic_html_w3_api = 'http:\/\/validator.w3.org\/check'$/;"	v
g:syntastic_java_checkstyle_classpath	bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^    let g:syntastic_java_checkstyle_classpath = 'checkstyle-5.5-all.jar'$/;"	v
g:syntastic_java_checkstyle_conf_file	bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^    let g:syntastic_java_checkstyle_conf_file = 'sun_checks.xml'$/;"	v
g:syntastic_java_javac_autoload_maven_classpath	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_autoload_maven_classpath = 1$/;"	v
g:syntastic_java_javac_classpath	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_classpath = ''$/;"	v
g:syntastic_java_javac_config_file	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_config_file = '.syntastic_javac_config'$/;"	v
g:syntastic_java_javac_config_file_enabled	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_config_file_enabled = 0$/;"	v
g:syntastic_java_javac_delete_output	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_delete_output = 1$/;"	v
g:syntastic_java_javac_executable	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_executable = 'javac'$/;"	v
g:syntastic_java_javac_maven_pom_classpath	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_maven_pom_classpath = ''$/;"	v
g:syntastic_java_javac_maven_pom_cwd	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_maven_pom_cwd = ''$/;"	v
g:syntastic_java_javac_maven_pom_ftime	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_maven_pom_ftime = 0$/;"	v
g:syntastic_java_javac_options	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_options = '-Xlint'$/;"	v
g:syntastic_java_javac_temp_dir	bundle/syntastic/syntax_checkers/java/javac.vim	/^        let g:syntastic_java_javac_temp_dir = $TEMP."\\\\vim-syntastic-javac"$/;"	v
g:syntastic_java_javac_temp_dir	bundle/syntastic/syntax_checkers/java/javac.vim	/^        let g:syntastic_java_javac_temp_dir = '\/tmp\/vim-syntastic-javac'$/;"	v
g:syntastic_java_maven_executable	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_maven_executable = 'mvn'$/;"	v
g:syntastic_javascript_closure_compiler_options	bundle/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^    let g:syntastic_javascript_closure_compiler_options = ""$/;"	v
g:syntastic_javascript_gjslint_conf	bundle/syntastic/syntax_checkers/javascript/gjslint.vim	/^    let g:syntastic_javascript_gjslint_conf = ""$/;"	v
g:syntastic_javascript_jshint_conf	bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^    let g:syntastic_javascript_jshint_conf = ""$/;"	v
g:syntastic_javascript_jsl_conf	bundle/syntastic/syntax_checkers/javascript/jsl.vim	/^    let g:syntastic_javascript_jsl_conf = ""$/;"	v
g:syntastic_javascript_jslint_conf	bundle/syntastic/syntax_checkers/javascript/jslint.vim	/^    let g:syntastic_javascript_jslint_conf = "--white --undef --nomen --regexp --plusplus --bitwise --newcap --sloppy --vars"$/;"	v
g:syntastic_less_options	bundle/syntastic/syntax_checkers/less/lessc.vim	/^    let g:syntastic_less_options = "--no-color"$/;"	v
g:syntastic_less_use_less_lint	bundle/syntastic/syntax_checkers/less/lessc.vim	/^    let g:syntastic_less_use_less_lint = 0$/;"	v
g:syntastic_loc_list_height	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_loc_list_height = 10$/;"	v
g:syntastic_objc_compiler	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^    let g:syntastic_objc_compiler = 'gcc'$/;"	v
g:syntastic_objc_compiler_options	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^    let g:syntastic_objc_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_objc_config_file	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^    let g:syntastic_objc_config_file = '.syntastic_objc_config'$/;"	v
g:syntastic_ocaml_use_ocamlbuild	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let g:syntastic_ocaml_use_ocamlbuild = 0$/;"	v
g:syntastic_ocaml_use_ocamlc	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let g:syntastic_ocaml_use_ocamlc = 0$/;"	v
g:syntastic_perl_efm_program	bundle/syntastic/syntax_checkers/perl/perl.vim	/^    let g:syntastic_perl_efm_program = 'perl ' . shellescape(expand('<sfile>:p:h') . '\/efm_perl.pl') . ' -c -w'$/;"	v
g:syntastic_perl_perlcritic_thres	bundle/syntastic/syntax_checkers/perl/perlcritic.vim	/^    let g:syntastic_perl_perlcritic_thres = 5$/;"	v
g:syntastic_puppet_lint_disable	bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^        let g:syntastic_puppet_lint_disable = 1$/;"	v
g:syntastic_puppet_lint_disable	bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^    let g:syntastic_puppet_lint_disable = 0$/;"	v
g:syntastic_puppet_lint_disable	bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^    let g:syntastic_puppet_lint_disable = 1$/;"	v
g:syntastic_puppet_validate_disable	bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^    let g:syntastic_puppet_validate_disable = 0$/;"	v
g:syntastic_quiet_warnings	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_quiet_warnings = 0$/;"	v
g:syntastic_ruby_exec	bundle/syntastic/syntax_checkers/eruby/ruby.vim	/^    let g:syntastic_ruby_exec = "ruby"$/;"	v
g:syntastic_ruby_exec	bundle/syntastic/syntax_checkers/ruby/mri.vim	/^    let g:syntastic_ruby_exec = "ruby"$/;"	v
g:syntastic_sass_check_partials	bundle/syntastic/syntax_checkers/sass/sass.vim	/^    let g:syntastic_sass_check_partials = 0$/;"	v
g:syntastic_scala_options	bundle/syntastic/syntax_checkers/scala/scalac.vim	/^    let g:syntastic_scala_options = " "$/;"	v
g:syntastic_sparse_config_file	bundle/syntastic/syntax_checkers/c/sparse.vim	/^    let g:syntastic_sparse_config_file = '.syntastic_sparse_config'$/;"	v
g:syntastic_splint_config_file	bundle/syntastic/syntax_checkers/c/splint.vim	/^    let g:syntastic_splint_config_file = '.syntastic_splint_config'$/;"	v
g:syntastic_stl_format	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_stl_format = '[Syntax: line:%F (%t)]'$/;"	v
g:syntastic_style_error_symbol	bundle/syntastic/plugin/syntastic/signs.vim	/^    let g:syntastic_style_error_symbol = 'S>'$/;"	v
g:syntastic_style_warning_symbol	bundle/syntastic/plugin/syntastic/signs.vim	/^    let g:syntastic_style_warning_symbol = 'S>'$/;"	v
g:syntastic_tex_chktex_showmsgs	bundle/syntastic/syntax_checkers/tex/chktex.vim	/^    let g:syntastic_tex_chktex_showmsgs = 1$/;"	v
g:syntastic_warning_symbol	bundle/syntastic/plugin/syntastic/signs.vim	/^    let g:syntastic_warning_symbol = '>>'$/;"	v
g:syntastic_xhtml_tidy_ignore_errors	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^    let g:syntastic_xhtml_tidy_ignore_errors = []$/;"	v
g:tagbar_iconchars	bundle/tagbar/plugin/tagbar.vim	/^        let g:tagbar_iconchars = ['+', '-']$/;"	v
g:tagbar_iconchars	bundle/tagbar/plugin/tagbar.vim	/^        let g:tagbar_iconchars = ['▶', '▼']$/;"	v
g:tcomment#ignore_char_type	bundle/tComment/autoload/tcomment.vim	/^    let g:tcomment#ignore_char_type = 1   "{{{2$/;"	v
g:tcomment#replacements_c	bundle/tComment/autoload/tcomment.vim	/^    let g:tcomment#replacements_c = {$/;"	v
g:tcomment#syntax_substitute	bundle/tComment/autoload/tcomment.vim	/^    let g:tcomment#syntax_substitute = {$/;"	v
g:tcommentBlankLines	bundle/tComment/autoload/tcomment.vim	/^    let g:tcommentBlankLines = 1    "{{{2$/;"	v
g:tcommentBlockC	bundle/tComment/autoload/tcomment.vim	/^    let g:tcommentBlockC = {$/;"	v
g:tcommentBlockC2	bundle/tComment/autoload/tcomment.vim	/^    let g:tcommentBlockC2 = {$/;"	v
g:tcommentBlockXML	bundle/tComment/autoload/tcomment.vim	/^    let g:tcommentBlockXML = "<!--%s-->\\n  "   "{{{2$/;"	v
g:tcommentGuessFileType	bundle/tComment/autoload/tcomment.vim	/^    let g:tcommentGuessFileType = 0   "{{{2$/;"	v
g:tcommentGuessFileType_django	bundle/tComment/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_django = 1   "{{{2$/;"	v
g:tcommentGuessFileType_dsl	bundle/tComment/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_dsl = 'xml'   "{{{2$/;"	v
g:tcommentGuessFileType_eruby	bundle/tComment/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_eruby = 1   "{{{2$/;"	v
g:tcommentGuessFileType_html	bundle/tComment/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_html = 1   "{{{2$/;"	v
g:tcommentGuessFileType_php	bundle/tComment/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_php = 'html'   "{{{2$/;"	v
g:tcommentGuessFileType_smarty	bundle/tComment/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_smarty = 1   "{{{2$/;"	v
g:tcommentGuessFileType_tskeleton	bundle/tComment/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_tskeleton = 1   "{{{2$/;"	v
g:tcommentGuessFileType_vim	bundle/tComment/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_vim = 1   "{{{2$/;"	v
g:tcommentIgnoreTypes_php	bundle/tComment/autoload/tcomment.vim	/^    let g:tcommentIgnoreTypes_php = 'sql'   "{{{2$/;"	v
g:tcommentInlineC	bundle/tComment/autoload/tcomment.vim	/^    let g:tcommentInlineC = g:tcommentLineC   "{{{2$/;"	v
g:tcommentInlineXML	bundle/tComment/autoload/tcomment.vim	/^    let g:tcommentInlineXML = "<!-- %s -->"   "{{{2$/;"	v
g:tcommentLineC	bundle/tComment/autoload/tcomment.vim	/^    let g:tcommentLineC = {$/;"	v
g:tcommentMapLeader1	bundle/tComment/plugin/tcomment.vim	/^    let g:tcommentMapLeader1 = '<c-_>' "{{{2$/;"	v
g:tcommentMapLeader2	bundle/tComment/plugin/tcomment.vim	/^    let g:tcommentMapLeader2 = '<Leader>_' "{{{2$/;"	v
g:tcommentMapLeaderOp1	bundle/tComment/plugin/tcomment.vim	/^    let g:tcommentMapLeaderOp1 = 'gc' "{{{2$/;"	v
g:tcommentMapLeaderOp2	bundle/tComment/plugin/tcomment.vim	/^    let g:tcommentMapLeaderOp2 = 'gC' "{{{2$/;"	v
g:tcommentModeExtra	bundle/tComment/autoload/tcomment.vim	/^    let g:tcommentModeExtra = ''   "{{{2$/;"	v
g:tcommentOpModeExtra	bundle/tComment/autoload/tcomment.vim	/^    let g:tcommentOpModeExtra = ''   "{{{2$/;"	v
g:tcommentOptions	bundle/tComment/autoload/tcomment.vim	/^    let g:tcommentOptions = {}   "{{{2$/;"	v
g:tcommentSyntaxMap	bundle/tComment/autoload/tcomment.vim	/^    let g:tcommentSyntaxMap = {$/;"	v
g:tlRememberPosition	bundle/TaskList.vim/plugin/tasklist.vim	/^    let g:tlRememberPosition = 0$/;"	v
g:tlTokenList	bundle/TaskList.vim/plugin/tasklist.vim	/^    let g:tlTokenList = ["FIXME", "TODO", "XXX"]$/;"	v
g:tlWindowPosition	bundle/TaskList.vim/plugin/tasklist.vim	/^    let g:tlWindowPosition = 0$/;"	v
g:user_emmet_leader_key	bundle/emmet-vim/plugin/emmet.vim	/^  let g:user_emmet_leader_key = '<c-y>'$/;"	v
getPuppetEfm	bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^function! s:getPuppetEfm()$/;"	f
getPuppetLintErrors	bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^function! s:getPuppetLintErrors()$/;"	f
getPuppetMakeprg	bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^function! s:getPuppetMakeprg()$/;"	f
get_accented_line	bundle/vim-airline/autoload/airline/builder.vim	/^function! s:get_accented_line(self, group, contents)$/;"	f
get_airline_themes	bundle/vim-airline/plugin/airline.vim	/^function! s:get_airline_themes(a, l, p)$/;"	f
get_array	bundle/vim-airline/autoload/airline/highlighter.vim	/^function! s:get_array(fg, bg, opts)$/;"	f
get_buffer_list	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:get_buffer_list()$/;"	f
get_buffers	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:get_buffers()$/;"	f
get_git_branch	bundle/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:get_git_branch(path)$/;"	f
get_hunks	bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks()$/;"	f
get_hunks_changes	bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_changes()$/;"	f
get_hunks_empty	bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_empty()$/;"	f
get_hunks_gitgutter	bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_gitgutter()$/;"	f
get_hunks_signify	bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_signify()$/;"	f
get_map_str	bundle/tagbar/autoload/tagbar.vim	/^function! s:get_map_str(map) abort$/;"	f
get_prev_group	bundle/vim-airline/autoload/airline/builder.vim	/^function! s:get_prev_group(sections, i)$/;"	f
get_root	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root(Dir) ->$/;"	f
get_root	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root(["src" | Tail], _Path) ->$/;"	f
get_root	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root([], Path) ->$/;"	f
get_root	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root([_ | Tail], Path) ->$/;"	f
get_section	bundle/vim-airline/autoload/airline/extensions/default.vim	/^function! s:get_section(winnr, key, ...)$/;"	f
get_seperator	bundle/vim-airline/autoload/airline/builder.vim	/^function! s:get_seperator(self, prev_group, group, side)$/;"	f
get_syn	bundle/vim-airline/autoload/airline/highlighter.vim	/^function! s:get_syn(group, what)$/;"	f
get_tabs	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:get_tabs()$/;"	f
get_text	bundle/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! s:get_text()$/;"	f
get_transitioned_seperator	bundle/vim-airline/autoload/airline/builder.vim	/^function! s:get_transitioned_seperator(self, prev_group, group, side)$/;"	f
get_visible_buffers	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:get_visible_buffers()$/;"	f
getbookmarks	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:getbookmarks()$/;"	f
getenv	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getenv()$/;"	f
getextvar	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getextvar(key)$/;"	f
gethistdata	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:gethistdata()$/;"	f
gethistloc	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:gethistloc()$/;"	f
getinput	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getinput(...)$/;"	f
getinput	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:getinput(str, ...)$/;"	f
getlist	bundle/vim-rails/autoload/rails.vim	/^function! s:getlist(arg, key)$/;"	f
getnewmix	bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! s:getnewmix(cwd, clim)$/;"	f
getparent	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getparent(item)$/;"	f
getregs	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getregs()$/;"	f
gettime	bundle/tagbar/autoload/tagbar.vim	/^    function! s:gettime() abort$/;"	f
getundo	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:getundo()$/;"	f
gg	bundle/delimitMate/autoload/delimitMateTests.vim	/^	normal gg$/;"	m
ggVG"_d	bundle/delimitMate/autoload/delimitMateTests.vim	/^	normal ggVG"_d$/;"	m
github_url	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:github_url(opts, ...) abort$/;"	f
glbpath	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:glbpath(...)$/;"	f
globdirs	bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! s:globdirs(dirs, depth)$/;"	f
glue	bundle/php.vim/scripts/update-vim-syntax.php	/^            \/* $glue = *\/ '|',$/;"	v
glue	bundle/php.vim/scripts/update-vim-syntax.php	/^            implode(\/* $glue = *\/ ' ', $extension['classes'])$/;"	v
glue	bundle/php.vim/scripts/update-vim-syntax.php	/^            implode(\/* $glue = *\/ ' ', $extension['functions'])$/;"	v
glue	bundle/php.vim/scripts/update-vim-syntax.php	/^        \/* $glue = *\/ '", "',$/;"	v
glue	bundle/php.vim/scripts/update-vim-syntax.php	/^        implode(\/* $glue = *\/ ' ', $extension['constants'])$/;"	v
goto_markedwin	bundle/tagbar/autoload/tagbar.vim	/^function! s:goto_markedwin(...) abort$/;"	f
goto_tagbar	bundle/tagbar/autoload/tagbar.vim	/^function! s:goto_tagbar(...) abort$/;"	f
goto_win	bundle/tagbar/autoload/tagbar.vim	/^function! s:goto_win(winnr, ...) abort$/;"	f
gsub	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
gsub	bundle/vim-rails/autoload/rails.vim	/^function! s:gsub(str,pat,rep)$/;"	f
gui2cui	bundle/vim-airline/autoload/airline/highlighter.vim	/^function! s:gui2cui(rgb, fallback)$/;"	f
h1	bundle/vim-css3-syntax/test/test.css	/^.selectors4 | h1,$/;"	s
handleLeftClick	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:handleLeftClick()$/;"	f
handleMiddleMouse	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:handleMiddleMouse()$/;"	f
handle_accept	bundle/vim-multiuser/plugin/vim_multiuser_server.py	/^    def handle_accept(self):$/;"	m	class:MUServer
handle_close	bundle/vim-multiuser/plugin/vim_multiuser_server.py	/^    def handle_close(self):$/;"	m	class:MUClient
handle_close	bundle/vim-multiuser/plugin/vim_multiuser_server.py	/^    def handle_close(self):$/;"	m	class:MUSessionHandler
header	bundle/vim-css3-syntax/test/test.css	/^header,$/;"	s
headntail	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:headntail(str)$/;"	f
helpermethods	bundle/vim-rails/autoload/rails.vim	/^function! s:helpermethods()$/;"	f
highlight	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:highlight(pat, grp)$/;"	f
hl	bundle/vim-airline/t/highlighter.vim	/^    let hl = airline#highlighter#get_highlight('Foo1_to_Foo2')$/;"	v
hl	bundle/vim-airline/t/themes.vim	/^    let hl = airline#themes#get_highlight('Foo', 'bold', 'italic')$/;"	v
hl	bundle/vim-airline/t/themes.vim	/^    let hl = airline#themes#get_highlight2(['Foo','bg'], ['Foo','fg'], 'italic', 'bold')$/;"	v
hover	bundle/vim-css3-syntax/test/test.css	/^.selectors3:matches(:hover, :focus),$/;"	s
hsl2color	bundle/vim-css-color/autoload/css_color.vim	/^function! s:hsl2color(h,s,l)$/;"	f
html5validate	bundle/vim-html5validator/plugin/html5validator.vim	/^function! s:html5validate()$/;"	f
i 	bundle/vim-css-color/tests/example.css	/^i { background: #359 }$/;"	s
ifExtensionEnabled	bundle/php.vim/scripts/update-vim-syntax.php	/^$ifExtensionEnabled = function ($extensionName) {$/;"	v
ignore	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ignore()$/;"	f
init	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:init() "{{{$/;"	f
init	bundle/vim-airline/plugin/airline.vim	/^function! s:init()$/;"	f
initOpenURL	bundle/vim-rails/autoload/rails.vim	/^function! s:initOpenURL() abort$/;"	f
initVariable	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:initVariable(var, value)$/;"	f
init_var	bundle/tagbar/plugin/tagbar.vim	/^function! s:init_var(var, value) abort$/;"	f
input2	bundle/delimitMate/test/autoclose_matchpairs.vim	/^    let input2 = substitute(input, '(', s:l, 'g')$/;"	v
input2	bundle/delimitMate/test/autoclose_matchpairs.vim	/^    let input2 = substitute(input2, ')', s:r, 'g')$/;"	v
input_q	bundle/delimitMate/test/autoclose_quotes.vim	/^    let input_q = substitute(input,"'" , escape(escape(quote, '"'), '\\'), 'g')$/;"	v
insert_range	bundle/vim-multiuser/plugin/vim_multiuser.py	/^def insert_range(old_start, old_end, new_section):$/;"	f
insertcache	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:insertcache(str)$/;"	f
insertstr	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:insertstr()$/;"	f
install_plugin	bundle/emmet-vim/plugin/emmet.vim	/^function! s:install_plugin(mode, buffer)$/;"	f
instaweb_url	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:instaweb_url(opts) abort$/;"	f
invertrange	bundle/vim-rails/autoload/rails.vim	/^function! s:invertrange(beg,end)$/;"	f
invoke_funcrefs	bundle/vim-airline/autoload/airline.vim	/^function! s:invoke_funcrefs(context, funcrefs)$/;"	f
is_branch_empty	bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:is_branch_empty()$/;"	f
is_excluded_window	bundle/vim-airline/autoload/airline/extensions.vim	/^function! s:is_excluded_window()$/;"	f
iscmdwin	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:iscmdwin()$/;"	f
ispathitem	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ispathitem()$/;"	f
itemno	bundle/emmet-vim/autoload/emmet.vim	/^function! s:itemno(itemno, current) abort$/;"	f
itemsnumber	bundle/delimitMate/test/autoclose_matchpairs.vim	/^let itemsnumber = len(split(g:delimitMate_matchpairs, ','))$/;"	v
itemsnumber	bundle/delimitMate/test/autoclose_quotes.vim	/^let itemsnumber = len(split(g:delimitMate_quotes, ' '))$/;"	v
j	bundle/ack.vim/ftplugin/qf.vim	/^  nnoremap <buffer> j jzz$/;"	m
javascriptEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:javascriptEdit(cmd,...)$/;"	f
javascriptList	bundle/vim-rails/autoload/rails.vim	/^function! s:javascriptList(A,L,P)$/;"	f
json	bundle/vim-multiuser/plugin/vim_multiuser_server.py	/^import json$/;"	i
jumpToFirstChild	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:jumpToFirstChild(node)$/;"	f
jumpToLastChild	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:jumpToLastChild(node)$/;"	f
jumpToNextSibling	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:jumpToNextSibling(node)$/;"	f
jumpToParent	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:jumpToParent(node)$/;"	f
jumpToPrevSibling	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:jumpToPrevSibling(node)$/;"	f
jumpToRoot	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:jumpToRoot()$/;"	f
keygen	bundle/vim-css3-syntax/test/test.css	/^keygen,$/;"	s
known_files.get	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.get(fname) abort dict$/;"	f
known_files.getCurrent	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.getCurrent(forcecurrent) abort dict$/;"	f
known_files.has	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.has(fname) abort dict$/;"	f
known_files.put	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.put(fileinfo, ...) abort dict$/;"	f
known_files.rm	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.rm(fname) abort dict$/;"	f
known_files.setCurrent	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.setCurrent(fileinfo) abort dict$/;"	f
known_files.setPaused	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.setPaused() abort dict$/;"	f
lash	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:lash(...)$/;"	f
lash	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! s:lash(...)$/;"	f
lastmethod	bundle/vim-rails/autoload/rails.vim	/^function! s:lastmethod(...)$/;"	f
lastmethodline	bundle/vim-rails/autoload/rails.vim	/^function! s:lastmethodline(start)$/;"	f
lastopeningline	bundle/vim-rails/autoload/rails.vim	/^function! s:lastopeningline(pattern,limit,start)$/;"	f
lastvisual	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:lastvisual()$/;"	f
layoutEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:layoutEdit(cmd,...)$/;"	f
layoutList	bundle/vim-rails/autoload/rails.vim	/^function! s:layoutList(A,L,P)$/;"	f
leavepre	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:leavepre()$/;"	f
li	bundle/vim-css3-syntax/test/test.css	/^.selectors4:column(p, li, dt, dd) {$/;"	s
li	bundle/vim-css3-syntax/test/test.css	/^.selectors4:current(p, li, dt, dd),$/;"	s
line	bundle/delimitMate/test/autoclose_matchpairs.vim	/^    let line = getline('.')$/;"	v
line	bundle/delimitMate/test/autoclose_quotes.vim	/^    let line = getline('.')$/;"	v
linechars	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:linechars(pattern) abort$/;"	f
lineout	bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! s:lineout(dict)$/;"	f
linepeak	bundle/vim-rails/autoload/rails.vim	/^function! s:linepeak()$/;"	f
lines	bundle/delimitMate/test/autoclose_matchpairs.vim	/^let lines = readfile(expand('<sfile>:t:r').'.txt')$/;"	v
lines	bundle/delimitMate/test/autoclose_quotes.vim	/^let lines = readfile(expand('<sfile>:t:r').'.txt')$/;"	v
lines	bundle/delimitMate/test/expand_cr.vim	/^  let lines = getline(1, line('$'))$/;"	v
lines	bundle/delimitMate/test/expand_cr.vim	/^let lines = readfile(expand('<sfile>:t:r').'.txt')$/;"	v
lines	bundle/delimitMate/test/expand_space.vim	/^  let lines = getline(1, line('$'))$/;"	v
lines	bundle/delimitMate/test/expand_space.vim	/^let lines = readfile(expand('<sfile>:t:r').'.txt')$/;"	v
loaded_checkpatch_syntax_checker	bundle/syntastic/syntax_checkers/c/checkpatch.vim	/^let loaded_checkpatch_syntax_checker = 1$/;"	v
loaded_make_syntax_checker	bundle/syntastic/syntax_checkers/c/make.vim	/^let loaded_make_syntax_checker = 1$/;"	v
loaded_matchit	bundle/matchit.zip/plugin/matchit.vim	/^let loaded_matchit = 1$/;"	v
loaded_nerd_tree	bundle/nerdtree/plugin/NERD_tree.vim	/^let loaded_nerd_tree = 1$/;"	v
loaded_snips	bundle/snipmate.vim/plugin/snipMate.vim	/^let loaded_snips = 1$/;"	v
loaded_sparse_syntax_checker	bundle/syntastic/syntax_checkers/c/sparse.vim	/^let loaded_sparse_syntax_checker = 1$/;"	v
loaded_splint_syntax_checker	bundle/syntastic/syntax_checkers/c/splint.vim	/^let loaded_splint_syntax_checker = 1$/;"	v
loaded_tcomment	bundle/tComment/plugin/tcomment.vim	/^let loaded_tcomment = 208$/;"	v
loaded_vhdl_ghdl_syntax_checker	bundle/syntastic/syntax_checkers/vhdl/ghdl.vim	/^let loaded_vhdl_ghdl_syntax_checker = 1$/;"	v
loaded_ycm_c_syntax_checker	bundle/syntastic/syntax_checkers/c/ycm.vim	/^let loaded_ycm_c_syntax_checker = 1$/;"	v
loaded_ycm_cpp_syntax_checker	bundle/syntastic/syntax_checkers/cpp/ycm.vim	/^let loaded_ycm_cpp_syntax_checker = 1$/;"	v
loaded_ycm_objc_syntax_checker	bundle/syntastic/syntax_checkers/objc/ycm.vim	/^let loaded_ycm_objc_syntax_checker = 1$/;"	v
localeEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:localeEdit(cmd,...)$/;"	f
localeList	bundle/vim-rails/autoload/rails.vim	/^function! s:localeList(A,L,P)$/;"	f
log	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:log(m)$/;"	f
lsCmd	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:lsCmd()$/;"	f
ltr	bundle/vim-css3-syntax/test/test.css	/^.selectors4:dir(ltr),$/;"	s
main	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^main([FileName | LibDirs]) ->$/;"	f
main	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^main([FileName]) ->$/;"	f
main	bundle/vim-css3-syntax/test/test.css	/^main,$/;"	s
main_syntax	bundle/php.vim/syntax/php.vim	/^  let main_syntax = 'php'$/;"	v
main_syntax	bundle/vim-markdown/syntax/markdown.vim	/^  let main_syntax = 'markdown'$/;"	v
make	bundle/vim-rails/autoload/rails.vim	/^function! s:make(bang, args, ...)$/;"	f
map	bundle/vim-airline/t/themes.vim	/^    let map = airline#themes#generate_color_map($/;"	v
mark	bundle/vim-css3-syntax/test/test.css	/^mark,$/;"	s
mark_window	bundle/tagbar/autoload/tagbar.vim	/^function! s:mark_window() abort$/;"	f
match_type	bundle/vim-rails/autoload/rails.vim	/^function! s:match_type(type,...)$/;"	f
matchcursor	bundle/vim-rails/autoload/rails.vim	/^function! s:matchcursor(pat)$/;"	f
matchfname	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchfname(item, pat)$/;"	f
matchhtmlparen	bundle/MatchTag/ftplugin/html.vim	/^augroup matchhtmlparen$/;"	a
matchlens	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchlens(str, pat, ...)$/;"	f
matchtabe	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchtabe(item, pat)$/;"	f
matchtabs	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchtabs(item, pat)$/;"	f
max	bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! s:max(len, max)$/;"	f
maxf	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:maxf(len)$/;"	f
mergelists	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:mergelists()$/;"	f
meter	bundle/vim-css3-syntax/test/test.css	/^meter,$/;"	s
mextargs	bundle/vim-rails/autoload/rails.vim	/^function! s:mextargs(str,num)$/;"	f
mfunc	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mfunc()$/;"	f
migemo	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:migemo(str)$/;"	f
migrationEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:migrationEdit(cmd,...)$/;"	f
migrationList	bundle/vim-rails/autoload/rails.vim	/^function! s:migrationList(A,L,P)$/;"	f
migspc	bundle/vim-rails/autoload/rails.vim	/^function! s:migspc(line)$/;"	f
mixedsort	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mixedsort(...)$/;"	f
mkeep	bundle/vim-rails/autoload/rails.vim	/^function! s:mkeep(str)$/;"	f
mmode	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mmode()$/;"	f
model	bundle/vim-rails/autoload/rails.vim	/^function! s:model(...)$/;"	f
modevar	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:modevar()$/;"	f
modify	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:modify(entry, type)$/;"	f
msg	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:msg(name, cwd)$/;"	f
mtype	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mtype()$/;"	f
multipliers	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:multipliers(...)$/;"	f
multiuser_client_send	bundle/vim-multiuser/plugin/vim_multiuser.py	/^def multiuser_client_send():$/;"	f
n+2	bundle/vim-css3-syntax/test/test.css	/^.selectors3:nth-last-child(-n+2),$/;"	s
n+2	bundle/vim-css3-syntax/test/test.css	/^.selectors3:nth-last-of-type(n+2),$/;"	s
n+2	bundle/vim-css3-syntax/test/test.css	/^.selectors4:nth-last-column(-n+2),$/;"	s
n+2	bundle/vim-css3-syntax/test/test.css	/^.selectors4:nth-last-match(-n+2),$/;"	s
narrowable	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:narrowable()$/;"	f
nav	bundle/vim-css3-syntax/test/test.css	/^nav,$/;"	s
nerdtree#bookmarkNode	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#bookmarkNode(...)$/;"	f
nerdtree#bufInWindows	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#bufInWindows(bnum)$/;"	f
nerdtree#centerView	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#centerView()$/;"	f
nerdtree#chRoot	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#chRoot(node)$/;"	f
nerdtree#chRootCwd	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#chRootCwd()$/;"	f
nerdtree#checkForBrowse	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#checkForBrowse(dir)$/;"	f
nerdtree#clearBookmarks	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#clearBookmarks(bookmarks)$/;"	f
nerdtree#closeTree	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#closeTree()$/;"	f
nerdtree#closeTreeIfOpen	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#closeTreeIfOpen()$/;"	f
nerdtree#closeTreeIfQuitOnOpen	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#closeTreeIfQuitOnOpen()$/;"	f
nerdtree#compareBookmarks	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareBookmarks(first, second)$/;"	f
nerdtree#compareNodes	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodes(n1, n2)$/;"	f
nerdtree#completeBookmarks	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#completeBookmarks(A,L,P)$/;"	f
nerdtree#createDefaultBindings	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#createDefaultBindings()$/;"	f
nerdtree#deprecated	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#deprecated(func, ...)$/;"	f
nerdtree#dumpHelp	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#dumpHelp()$/;"	f
nerdtree#echo	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echo(msg)$/;"	f
nerdtree#echoError	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoError(msg)$/;"	f
nerdtree#echoWarning	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoWarning(msg)$/;"	f
nerdtree#escChars	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#escChars()$/;"	f
nerdtree#exec	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#exec(cmd)$/;"	f
nerdtree#findAndRevealPath	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#findAndRevealPath()$/;"	f
nerdtree#firstUsableWindow	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#firstUsableWindow()$/;"	f
nerdtree#getPath	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#getPath(ln)$/;"	f
nerdtree#getTreeWinNum	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#getTreeWinNum()$/;"	f
nerdtree#has_opt	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#has_opt(options, name)$/;"	f
nerdtree#indentLevelFor	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#indentLevelFor(line)$/;"	f
nerdtree#invokeKeyMap	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#invokeKeyMap(key)$/;"	f
nerdtree#isTreeOpen	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#isTreeOpen()$/;"	f
nerdtree#isWindowUsable	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#isWindowUsable(winnumber)$/;"	f
nerdtree#jumpToChild	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#jumpToChild(currentNode, direction)$/;"	f
nerdtree#jumpToSibling	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#jumpToSibling(currentNode, forward)$/;"	f
nerdtree#loadClassFiles	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#loadClassFiles()$/;"	f
nerdtree#openBookmark	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#openBookmark(name)$/;"	f
nerdtree#postSourceActions	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#postSourceActions()$/;"	f
nerdtree#promptToDelBuffer	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#promptToDelBuffer(bufnum, msg)$/;"	f
nerdtree#putCursorInTreeWin	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#putCursorInTreeWin()$/;"	f
nerdtree#putCursorOnBookmarkTable	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#putCursorOnBookmarkTable()$/;"	f
nerdtree#renderBookmarks	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#renderBookmarks()$/;"	f
nerdtree#renderView	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#renderView()$/;"	f
nerdtree#renderViewSavingPosition	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#renderViewSavingPosition()$/;"	f
nerdtree#restoreScreenState	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#restoreScreenState()$/;"	f
nerdtree#revealBookmark	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#revealBookmark(name)$/;"	f
nerdtree#runningWindows	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#runningWindows()$/;"	f
nerdtree#saveScreenState	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#saveScreenState()$/;"	f
nerdtree#stripMarkupFromLine	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#stripMarkupFromLine(line, removeLeadingSpaces)$/;"	f
nerdtree#tabpagevar	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#tabpagevar(tabnr, var)$/;"	f
nerdtree#treeExistsForBuf	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#treeExistsForBuf()$/;"	f
nerdtree#treeExistsForTab	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#treeExistsForTab()$/;"	f
nerdtree#treeMarkupReg	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#treeMarkupReg()$/;"	f
nerdtree#treeUpDirLine	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#treeUpDirLine()$/;"	f
nerdtree#treeWid	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#treeWid()$/;"	f
nerdtree#unique	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#unique(list)$/;"	f
nerdtree#upDir	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#upDir(keepState)$/;"	f
nerdtree#version	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#version()$/;"	f
new_builder	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:new_builder()$/;"	f
newcache	bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! s:newcache(cwd)$/;"	f
nocache	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:nocache(...)$/;"	f
nocache	bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! s:nocache()$/;"	f
nocache	bundle/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^fu! s:nocache()$/;"	f
nonamecond	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:nonamecond(str, filpath)$/;"	f
nosort	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:nosort()$/;"	f
nosplit	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:nosplit()$/;"	f
not  	bundle/vim-css3-syntax/test/test.css	/^  (display: auto) {$/;"	s
old_buffer	bundle/vim-multiuser/plugin/vim_multiuser.py	/^old_buffer = []$/;"	v
old_tick	bundle/vim-multiuser/plugin/vim_multiuser.py	/^old_tick = 0$/;"	v
on_colorscheme_changed	bundle/vim-airline/plugin/airline.vim	/^function! s:on_colorscheme_changed()$/;"	f
on_window_changed	bundle/vim-airline/plugin/airline.vim	/^function! s:on_window_changed()$/;"	f
openExplorer	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:openExplorer(node)$/;"	f
openHSplit	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:openHSplit(target)$/;"	f
openInNewTab	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:openInNewTab(target)$/;"	f
openInNewTabSilent	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:openInNewTabSilent(target)$/;"	f
openNodeRecursively	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:openNodeRecursively(node)$/;"	f
openVSplit	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:openVSplit(target)$/;"	f
openfile	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:openfile(cmd, fid, tail, chkmod, ...)$/;"	f
option_init	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:option_init(name, default) "{{{$/;"	f
options	bundle/php.vim/scripts/update-vim-syntax.php	/^        $options = array($/;"	v
opts	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:opts(...)$/;"	f
or  	bundle/vim-css3-syntax/test/test.css	/^  (display: auto) not$/;"	s
output	bundle/vim-css3-syntax/test/test.css	/^output,$/;"	s
output2	bundle/delimitMate/test/autoclose_matchpairs.vim	/^    let output2 = substitute(output, '(', s:l, 'g')$/;"	v
output2	bundle/delimitMate/test/autoclose_matchpairs.vim	/^    let output2 = substitute(output2, ')', s:r, 'g')$/;"	v
output_q	bundle/delimitMate/test/autoclose_quotes.vim	/^    let output_q = substitute(output,"'" , escape(escape(quote, '"'), '\\'), 'g')$/;"	v
p	bundle/vim-css3-syntax/test/test.css	/^.selectors4:column(p, li, dt, dd) {$/;"	s
p	bundle/vim-css3-syntax/test/test.css	/^.selectors4:current(p, li, dt, dd),$/;"	s
p 	bundle/vim-css-color/tests/torture.css	/^p { color: #300000; color: #300001; color: #300002; color: #300003; color: #300004; color: #300005; color: #300006; color: #300007; color: #300008; color: #300009; color: #30000a; color: #30000b; color: #30000c; color: #30000d; color: #30000e; color: #30000f;$/;"	s
parse_css_screen	bundle/vim-css-color/autoload/css_color.vim	/^function! s:parse_css_screen()$/;"	f
parse_data	bundle/vim-multiuser/plugin/vim_multiuser.py	/^def parse_data(data):$/;"	f
parse_hex_screen	bundle/vim-css-color/autoload/css_color.vim	/^function! s:parse_hex_screen()$/;"	f
parseline	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:parseline(line)$/;"	f
parts	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:parts(str)$/;"	f
passed	bundle/delimitMate/test/autoclose_matchpairs.vim	/^    let passed = line == eval(output2)$/;"	v
passed	bundle/delimitMate/test/autoclose_quotes.vim	/^    let passed = line == eval(output_q)$/;"	v
passed	bundle/delimitMate/test/expand_cr.vim	/^  let passed = lines == expected$/;"	v
passed	bundle/delimitMate/test/expand_space.vim	/^  let passed = lines == expected$/;"	v
pathjoin	bundle/vim-rails/autoload/rails.vim	/^function! s:pathjoin(...) abort$/;"	f
pathogen#cycle_filetype	autoload/pathogen.vim	/^function! pathogen#cycle_filetype() " {{{1$/;"	f
pathogen#execute	autoload/pathogen.vim	/^function! pathogen#execute(...) abort " {{{1$/;"	f
pathogen#fnameescape	autoload/pathogen.vim	/^function! pathogen#fnameescape(string) abort " {{{1$/;"	f
pathogen#glob	autoload/pathogen.vim	/^function! pathogen#glob(pattern) abort " {{{1$/;"	f
pathogen#glob_directories	autoload/pathogen.vim	/^function! pathogen#glob_directories(pattern) abort " {{{1$/;"	f
pathogen#helptags	autoload/pathogen.vim	/^function! pathogen#helptags() abort " {{{1$/;"	f
pathogen#incubate	autoload/pathogen.vim	/^function! pathogen#incubate(...) abort " {{{1$/;"	f
pathogen#infect	autoload/pathogen.vim	/^function! pathogen#infect(...) abort " {{{1$/;"	f
pathogen#is_disabled	autoload/pathogen.vim	/^function! pathogen#is_disabled(path) " {{{1$/;"	f
pathogen#join	autoload/pathogen.vim	/^function! pathogen#join(...) abort " {{{1$/;"	f
pathogen#legacyjoin	autoload/pathogen.vim	/^function! pathogen#legacyjoin(...) abort " {{{1$/;"	f
pathogen#runtime_append_all_bundles	autoload/pathogen.vim	/^function! pathogen#runtime_append_all_bundles(...) abort " {{{1$/;"	f
pathogen#runtime_findfile	autoload/pathogen.vim	/^function! pathogen#runtime_findfile(file,count) abort "{{{1$/;"	f
pathogen#runtime_prepend_subdirectories	autoload/pathogen.vim	/^function! pathogen#runtime_prepend_subdirectories(path) " {{{1$/;"	f
pathogen#separator	autoload/pathogen.vim	/^function! pathogen#separator() abort " {{{1$/;"	f
pathogen#split	autoload/pathogen.vim	/^function! pathogen#split(path) abort " {{{1$/;"	f
pathogen#surround	autoload/pathogen.vim	/^function! pathogen#surround(path) abort " {{{1$/;"	f
pathogen#uniq	autoload/pathogen.vim	/^function! pathogen#uniq(list) abort " {{{1$/;"	f
pathshorten	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:pathshorten(str)$/;"	f
pathsplit	bundle/vim-rails/autoload/rails.vim	/^function! s:pathsplit(path) abort$/;"	f
php_folding	bundle/php.vim/syntax/php.vim	/^  let php_folding = 0$/;"	v
php_html_in_heredoc	bundle/php.vim/syntax/php.vim	/^    let php_html_in_heredoc=1$/;"	v
php_html_in_heredoc	bundle/php.vim/syntax/php.vim	/^  let php_html_in_heredoc=0$/;"	v
php_html_in_strings	bundle/php.vim/syntax/php.vim	/^  let php_html_in_strings=0$/;"	v
php_html_load	bundle/php.vim/syntax/php.vim	/^  let php_html_load=1$/;"	v
php_phpdoc_folding	bundle/php.vim/syntax/php.vim	/^  let php_phpdoc_folding = 0$/;"	v
php_sql_heredoc	bundle/php.vim/syntax/php.vim	/^  let php_sql_heredoc=1$/;"	v
php_sync_method	bundle/php.vim/syntax/php.vim	/^    let php_sync_method=-1$/;"	v
php_sync_method	bundle/php.vim/syntax/php.vim	/^    let php_sync_method=php_minlines$/;"	v
pop_command	bundle/vim-rails/autoload/rails.vim	/^function! s:pop_command()$/;"	f
previewNodeCurrent	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:previewNodeCurrent(node)$/;"	f
previewNodeHSplit	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:previewNodeHSplit(node)$/;"	f
previewNodeVSplit	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:previewNodeVSplit(node)$/;"	f
process	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:process(entries, type)$/;"	f
process	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:process(fname, ftype)$/;"	f
process	bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! s:process(clines, ...)$/;"	f
process_sections	bundle/php.vim/scripts/update-vim-syntax.php	/^    \/* $process_sections = *\/ true$/;"	v
progress	bundle/vim-css3-syntax/test/test.css	/^progress,$/;"	s
projection_pairs	bundle/vim-rails/autoload/rails.vim	/^function! s:projection_pairs(options)$/;"	f
promptToDelBuffer	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
promptToRenameBuffer	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToRenameBuffer(bufnum, msg, newFileName)$/;"	f
prototype.add_raw	bundle/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.add_raw(text)$/;"	f
prototype.add_section	bundle/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.add_section(group, contents)$/;"	f
prototype.add_section_spaced	bundle/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.add_section_spaced(group, contents)$/;"	f
prototype.build	bundle/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.build()$/;"	f
prototype.split	bundle/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.split(...)$/;"	f
push_chdir	bundle/vim-rails/autoload/rails.vim	/^function! s:push_chdir(...)$/;"	f
qf_pre	bundle/vim-rails/autoload/rails.vim	/^function! s:qf_pre() abort$/;"	f
quotes	bundle/delimitMate/test/autoclose_quotes.vim	/^  let quotes = split(g:delimitMate_quotes, '\\s')$/;"	v
r_warning	bundle/vim-rails/autoload/rails.vim	/^function! s:r_warning(cmd) abort$/;"	f
rails#app	bundle/vim-rails/autoload/rails.vim	/^function! rails#app(...) abort$/;"	f
rails#buffer	bundle/vim-rails/autoload/rails.vim	/^function! rails#buffer(...)$/;"	f
rails#buffer_setup	bundle/vim-rails/autoload/rails.vim	/^function! rails#buffer_setup() abort$/;"	f
rails#buffer_syntax	bundle/vim-rails/autoload/rails.vim	/^function! rails#buffer_syntax()$/;"	f
rails#cache_clear	bundle/vim-rails/autoload/rails.vim	/^function! rails#cache_clear(...)$/;"	f
rails#camelize	bundle/vim-rails/autoload/rails.vim	/^function! rails#camelize(str)$/;"	f
rails#complete_rails	bundle/vim-rails/autoload/rails.vim	/^function! rails#complete_rails(ArgLead, CmdLine, P, ...) abort$/;"	f
rails#complete_rake	bundle/vim-rails/autoload/rails.vim	/^function! rails#complete_rake(A,L,P)$/;"	f
rails#get_binding_for	bundle/vim-rails/autoload/rails.vim	/^function! rails#get_binding_for(pid) abort$/;"	f
rails#json_parse	bundle/vim-rails/autoload/rails.vim	/^function! rails#json_parse(string) abort$/;"	f
rails#lencmp	bundle/vim-rails/autoload/rails.vim	/^function! rails#lencmp(i1, i2) abort$/;"	f
rails#log_setup	bundle/vim-rails/autoload/rails.vim	/^function! rails#log_setup() abort$/;"	f
rails#log_syntax	bundle/vim-rails/autoload/rails.vim	/^function! rails#log_syntax()$/;"	f
rails#new_app_command	bundle/vim-rails/autoload/rails.vim	/^function! rails#new_app_command(bang,...) abort$/;"	f
rails#pluralize	bundle/vim-rails/autoload/rails.vim	/^function! rails#pluralize(word)$/;"	f
rails#singularize	bundle/vim-rails/autoload/rails.vim	/^function! rails#singularize(word)$/;"	f
rails#underscore	bundle/vim-rails/autoload/rails.vim	/^function! rails#underscore(str)$/;"	f
rails#yaml_parse_file	bundle/vim-rails/autoload/rails.vim	/^function! rails#yaml_parse_file(file) abort$/;"	f
railsPluginAbolish	bundle/vim-rails/plugin/rails.vim	/^augroup railsPluginAbolish$/;"	a
railsPluginAuto	bundle/vim-rails/autoload/rails.vim	/^augroup railsPluginAuto$/;"	a
railsPluginDetect	bundle/vim-rails/plugin/rails.vim	/^augroup railsPluginDetect$/;"	a
railsPluginMake	bundle/vim-rails/autoload/rails.vim	/^augroup railsPluginMake$/;"	a
random	bundle/vim-multiuser/plugin/vim_multiuser.py	/^import random$/;"	i
rb	bundle/vim-css3-syntax/test/test.css	/^rb,$/;"	s
readable_absolute	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_absolute() dict abort$/;"	f
readable_alternate	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_alternate(...) dict abort$/;"	f
readable_alternate_candidates	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_alternate_candidates(...) dict abort$/;"	f
readable_app	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_app() dict abort$/;"	f
readable_calculate_file_type	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_calculate_file_type() dict abort$/;"	f
readable_controller_name	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_controller_name(...) dict abort$/;"	f
readable_default_rake_task	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_default_rake_task(...) dict abort$/;"	f
readable_define_pattern	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_define_pattern() dict abort$/;"	f
readable_end_of	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_end_of(lnum) dict abort$/;"	f
readable_find_affinity	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_find_affinity() dict abort$/;"	f
readable_format	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_format(start) dict abort$/;"	f
readable_last_method	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_last_method(start) dict abort$/;"	f
readable_last_method_line	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_last_method_line(start) dict abort$/;"	f
readable_last_opening_line	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_last_opening_line(start,pattern,limit) dict abort$/;"	f
readable_line_count	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_line_count() dict abort$/;"	f
readable_model_name	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_model_name(...) dict abort$/;"	f
readable_open_command	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_open_command(cmd, argument, name, projections) dict abort$/;"	f
readable_preview_urls	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_preview_urls(lnum) dict abort$/;"	f
readable_projected	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_projected(key, ...) dict abort$/;"	f
readable_related	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_related(...) dict abort$/;"	f
readable_relative	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_relative() dict abort$/;"	f
readable_resolve_layout	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_resolve_layout(name, ...) dict abort$/;"	f
readable_resolve_view	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_resolve_view(name, ...) dict abort$/;"	f
readable_runner_command	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_runner_command(bang, count, arg) dict abort$/;"	f
readable_spec	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_spec() dict abort$/;"	f
readable_test_file	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_test_file() dict abort$/;"	f
readable_test_file_candidates	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_test_file_candidates() dict abort$/;"	f
readable_type_name	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_type_name(...) dict abort$/;"	f
readfile	bundle/vim-rails/autoload/rails.vim	/^function! s:readfile(path,...)$/;"	f
recall	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:recall() abort$/;"	f
record	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:record(bufnr)$/;"	f
reflect	bundle/php.vim/scripts/update-vim-syntax.php	/^        $reflect = new ReflectionExtension($extensionName);$/;"	v
reformat	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:reformat(mrufs, ...)$/;"	f
refreshCurrent	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:refreshCurrent(node)$/;"	f
refreshRoot	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:refreshRoot()$/;"	f
regexfilter	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:regexfilter(str)$/;"	f
regisfilter	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:regisfilter(reg)$/;"	f
relglob	bundle/vim-rails/autoload/rails.vim	/^function! s:relglob(...)$/;"	f
reload	bundle/delimitMate/test/autoclose_matchpairs.vim	/^    let reload = 0$/;"	v
reload	bundle/delimitMate/test/autoclose_matchpairs.vim	/^    let reload = 1$/;"	v
reload	bundle/delimitMate/test/autoclose_matchpairs.vim	/^let reload = 1$/;"	v
reload	bundle/delimitMate/test/autoclose_quotes.vim	/^    let reload = 0$/;"	v
reload	bundle/delimitMate/test/autoclose_quotes.vim	/^    let reload = 1$/;"	v
reload	bundle/delimitMate/test/autoclose_quotes.vim	/^let reload = 1$/;"	v
reload	bundle/emmet-vim/unittest.vim	/^function! s:reload(d)$/;"	f
remarksigns	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:remarksigns()$/;"	f
repo	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo(...) abort$/;"	f
repo_aliases	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_aliases() dict abort$/;"	f
repo_bare	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_bare() dict abort$/;"	f
repo_config	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_config(conf) dict abort$/;"	f
repo_dir	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dir(...) dict abort$/;"	f
repo_dirglob	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dirglob(base) dict abort$/;"	f
repo_git_chomp	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp(...) dict abort$/;"	f
repo_git_chomp_in_tree	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp_in_tree(...) dict abort$/;"	f
repo_git_command	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_command(...) dict abort$/;"	f
repo_head	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_head(...) dict abort$/;"	f
repo_head_ref	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_head_ref() dict abort$/;"	f
repo_keywordprg	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_keywordprg() dict abort$/;"	f
repo_rev_parse	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_rev_parse(rev) dict abort$/;"	f
repo_superglob	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_superglob(base) dict abort$/;"	f
repo_translate	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_translate(spec) dict abort$/;"	f
repo_tree	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_tree(...) dict abort$/;"	f
repo_user	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_user() dict abort$/;"	f
resetomnicomplete	bundle/vim-rails/autoload/rails.vim	/^function! s:resetomnicomplete()$/;"	f
rgb2color	bundle/vim-css-color/autoload/css_color.vim	/^function! s:rgb2color(r,g,b)$/;"	f
rgb2xterm	bundle/vim-css-color/autoload/css_color.vim	/^	function! s:rgb2xterm(color)$/;"	f
rp	bundle/vim-css3-syntax/test/test.css	/^rp,$/;"	s
rquote	bundle/vim-rails/autoload/rails.vim	/^function! s:rquote(str)$/;"	f
rt	bundle/vim-css3-syntax/test/test.css	/^rt,$/;"	s
rtc	bundle/vim-css3-syntax/test/test.css	/^rtc,$/;"	s
ruby	bundle/vim-css3-syntax/test/test.css	/^ruby,$/;"	s
run_diff	bundle/vim-multiuser/plugin/vim_multiuser.py	/^def run_diff(old, new):$/;"	f
s	bundle/vim-airline/t/section.vim	/^    let s = airline#section#create(['asdf', 'func'])$/;"	v
s	bundle/vim-airline/t/section.vim	/^    let s = airline#section#create(['conditional'])$/;"	v
s	bundle/vim-airline/t/section.vim	/^    let s = airline#section#create(['hi'])$/;"	v
s	bundle/vim-airline/t/section.vim	/^    let s = airline#section#create(['paste'])$/;"	v
s	bundle/vim-airline/t/section.vim	/^    let s = airline#section#create(['text', 'raw', 'func'])$/;"	v
s	bundle/vim-airline/t/section.vim	/^    let s = airline#section#create(['whitespace'])$/;"	v
s	bundle/vim-airline/t/section.vim	/^    let s = airline#section#create_left(['asdf', 'aaaa', 'raw'])$/;"	v
s	bundle/vim-airline/t/section.vim	/^    let s = airline#section#create_left(['asdf', 'raw'])$/;"	v
s	bundle/vim-airline/t/section.vim	/^    let s = airline#section#create_left(['text', 'text'])$/;"	v
s	bundle/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['%t', 'asdf', '%{getcwd()}'])$/;"	v
s	bundle/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['raw', '%f'])$/;"	v
s	bundle/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['text', 'text'])$/;"	v
s 	bundle/vim-css-color/tests/example.css	/^s { background: hsl(0, 100%, 50%) }$/;"	s
s:BB	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:BB = [s:gui_termfg, s:gui_termbg, s:cterm_termfg, s:cterm_termbg] " Branch and file format blocks$/;"	v
s:BaseTag	bundle/tagbar/autoload/tagbar.vim	/^let s:BaseTag = {}$/;"	v
s:Bookmark	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^let s:Bookmark = {}$/;"	v
s:CharsEscape	bundle/SingleCompile/autoload/SingleCompile.vim	/^    let s:CharsEscape = '" '$/;"	v
s:CharsEscape	bundle/SingleCompile/autoload/SingleCompile.vim	/^    let s:CharsEscape = '" \\'$/;"	v
s:CompilerTemplate	bundle/SingleCompile/autoload/SingleCompile.vim	/^let s:CompilerTemplate = {}$/;"	v
s:Creator	bundle/nerdtree/lib/nerdtree/creator.vim	/^let s:Creator = {}$/;"	v
s:EnvSeperator	bundle/SingleCompile/autoload/SingleCompile.vim	/^    let s:EnvSeperator = ':'$/;"	v
s:EnvSeperator	bundle/SingleCompile/autoload/SingleCompile.vim	/^    let s:EnvSeperator = ';'$/;"	v
s:ExecutableSuffix	bundle/SingleCompile/autoload/SingleCompile.vim	/^    let s:ExecutableSuffix = ''$/;"	v
s:ExecutableSuffix	bundle/SingleCompile/autoload/SingleCompile.vim	/^    let s:ExecutableSuffix = '.exe'$/;"	v
s:FileInfo	bundle/tagbar/autoload/tagbar.vim	/^let s:FileInfo = {}$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:I1 = [ '#141413' , '#0a9dff' , 232 , 39  ] " blackestgravel & tardis$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:I1 = [s:gui_med_gray_hi, s:gui_blue, s:cterm_med_gray_hi, s:cterm_blue]$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:I1 = [s:gui_med_gray_hi, s:gui_blue, s:cterm_med_gray_hi, s:cterm_blue]$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:I1 = [ '#00005f' , '#00dfff' , 17  , 45  ]$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let s:I1 = [ '#ffffff' , '#00875f' , 255 , 29  ]$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let s:I1 = [ '#242322' , '#7eaefd' , 234 , 111 ]$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:I1 = [ '#1a1a18' , '#1693a5' , 232 , 62 ] " blackestgravel & crystallake$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:I1 = [ '#ffffff' , '#00875f' , 255 , 29  ]$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:I1 = [ '#ffffff' , '#789f00' , 231 , 106 ]$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let s:I1 = [ '#080808' , '#66d9ef' , 232 , 81 ]$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:I1 = [s:gui_insertfg, s:gui_insertbg, s:cterm_insertfg, s:cterm_insertbg] " Outside blocks in insert mode$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let s:I1 = [ '#005f5f' , '#ffffff' , 23  , 231 ] " darkestcyan    & white$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let s:I1 = [ '#11c279' , '#2e2e2e' , 36 , 235 ]$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:I1 = [ '#5fff00' , s:guibg , 82  , s:termbg ]$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let s:I1 = [ '#0d935c' , '#e1e1e1' , 29 , 188 ]$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:I1 = [ s:guibg, '#5fff00' , s:termbg , 82 ]$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:I1 = [ '#eeeeee' , '#09643f' , 255 , 30  ]$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:I1 = [ '#1a1a18' , '#fade3e' , 232 , 221 ] " blackestgravel & warmcorn$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:I1 = ['#FFFFFF', '#87AF5F', 15, 107] " Outside blocks in normal mode (mode and file position)$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:I1 = [ '#141413' , '#FDE76E' , 232 , 227 ]$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:I2 = [ '#f4cf86' , '#005fff' , 222 , 27  ] " dirtyblonde    & facebook$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:I2 = [ '#ffffff' , '#005fff' , 255 , 27  ]$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let s:I2 = [ '#9e9e9e' , '#303030' , 247 , 236 ]$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let s:I2 = [ '#75d7d8' , '#242322' , 80  , 234 ]$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:I2 = [ '#515744' , '#44403a' , 101 , 238 ] " lichen & deepgravel$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:I2 = [ '#005f00' , '#00df87' , 22  , 42  ]$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:I2 = [ '#ffffff' , '#003f3f' , 231 , 29  ]$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let s:I2 = [ '#f8f8f0' , '#232526' , 253 , 16 ]$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:I2 = [s:gui_insertbg, s:gui_termbg2, s:cterm_insertbg, s:cterm_termbg2]   " Middle block$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let s:I2 = [ '#5fafd7' , '#0087af' , 74  , 31  ] " darkcyan       & darkblue$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let s:I2 = [ '#11c279' , '#2e2e2e' , 36 , 235 ]$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:I2 = [ '#ff5f00' , s:guibg , 202 , s:termbg ]$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let s:I2 = [ '#0d935c' , '#e1e1e1' , 29 , 188 ]$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:I2 = [ '#ff5f00' , s:guibg2, 202 , s:termbg2 ]$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:I2 = [ '#343434' , '#a3a3a3' , 237 , 249 ]$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:I2 = [ '#c7b386' , '#45413b' , 252 , 238 ] " bleaksand & deepgravel$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:I2 = ['#AFAF87', '#5F5F5F', 144, 59] " Next blocks inside (branch and file format)$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:I2 = [ '#FDE76E' , '#32322F' , 227 , 236 ]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:I3 = [ '#0a9dff' , '#242321' , 39  , 235 ] " tardis         & darkgravel$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:I3 = [s:gui_blue, s:gui_med_gray_hi, s:cterm_blue, s:cterm_med_gray_hi]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:I3 = [s:gui_blue, s:gui_med_gray_hi, s:cterm_blue, s:cterm_med_gray_hi]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:I3 = [ '#ffffff' , '#000080' , 15  , 17  ]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let s:I3 = [ '#87d7ff' , '#005f87' , 117 , 24  ]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let s:I3 = [ '#e2e2e2' , '#4a4a4a' , 254 , 238 ]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:I3 = [ '#1693a5' , '#2e2d2a' , 39 , 235 ] " crystallake & darkgravel$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:I3 = [ '#005f5f' , '#afff87' , 23  , 156 ]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:I3 = [ '#ffffff' , '#002b2b' , 231 , 23  ]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let s:I3 = [ '#f8f8f0' , '#465457' , 253 , 67 ]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let s:I3 = [ '#87d7ff' , '#005f87' , 117 , 24  ] " mediumcyan     & darkestblue$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let s:I3 = [ '#11c279' , '#2e2e2e' , 36 , 235 ]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:I3 = [ '#767676' , s:guibg , 7   , s:termbg ]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let s:I3 = [ '#0d935c' , '#e1e1e1' , 29 , 188 ]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:I3 = [ '#767676' , s:guibg, 243 , s:termbg ]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:I3 = [ '#343434' , '#b0b0b0' , 237 , 250 ]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:I3 = [ '#f4cf86' , '#242321' , 222 , 235 ] " lighttannedskin & darkgravel$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:I3 = ['#AFAF87', '#5F5F5F', 144, 59] " The middle block$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:I3 = [ '#FDE76E' , '#242424' , 227 , 234 ]$/;"	v
s:I4	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:I4 = [ '#FADE3E' , 221 ]$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:IA = [ s:N2[1] , s:N3[1] , s:N2[3] , s:N3[3] , '' ]$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:IA = [s:gui_dark_gray, s:gui_med_gray_hi, s:cterm_dark_gray, s:cterm_med_gray_hi, '']$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:IA = [s:gui_light_gray, s:gui_med_gray_hi, s:cterm_light_gray, s:cterm_med_gray_hi, '']$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:IA = [ s:N2[1] , s:N3[1] , s:N2[3], s:N3[3] , '' ]$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:IA = [ '#4e4e4e' , '#002b2b' , 59 , 23 , '' ]$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let s:IA = [ '#1b1d1e' , '#465457' , 233 , 67 , '' ]$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let s:IA = [ s:N2[1] , s:N3[1] , s:N2[3] , s:N3[3] , '' ]$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let s:IA = [ '#5e5e5e' , '#222222' , 59 , 235 , '' ]$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:IA  = [ '#4e4e4e' , s:guibg  , 239 , s:termbg  , '' ]$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let s:IA = [ '#a1a1a1' , '#dddddd' , 145 , 188 , '' ]$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:IA  = [ '#4e4e4e' , s:guibg  , 239 , s:termbg  , '' ]$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:IA = [ '#777777' , '#c7c7c7' , 244 , 251 , '' ]$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:IA = [ s:N2[1], s:N3[1], s:N2[3], s:N3[3], '' ]	$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:IA = [ '#767676' , s:N3[1] , 243 , s:N3[3] , '' ]$/;"	v
s:IA1	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:IA1 = [ '#4e4e4e' , '#1c1c1c' , 239 , 234 , '' ]$/;"	v
s:IA1	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let s:IA1 = [ '#4e4e4e' , '#1c1c1c' , 239 , 234 , '' ]$/;"	v
s:IA1	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let s:IA1 = [ '#b2b2b2' , '#4a4a4a' , 247 , 238 , '' ]$/;"	v
s:IA1	bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:IA1 = [ '#666666' , '#b2b2b2' , 242 , 249 , '' ]$/;"	v
s:IA1	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:IA1 = [s:gui_inactivefg, s:gui_inactivebg, s:cterm_inactivefg, s:cterm_inactivebg, '']$/;"	v
s:IA1	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:IA1 = ['#4E4E4E', '#1C1C1C', 239, 234, '']$/;"	v
s:IA2	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:IA2 = [ '#4e4e4e' , '#262626' , 239 , 235 , '' ]$/;"	v
s:IA2	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let s:IA2 = [ '#4e4e4e' , '#262626' , 239 , 235 , '' ]$/;"	v
s:IA2	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let s:IA2 = [ '#b2b2b2' , '#4a4a4a' , 247 , 238 ]$/;"	v
s:IA2	bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:IA2 = [ '#8a8a8a' , '#d0d0d0' , 245 , 252 , '' ]$/;"	v
s:IA2	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:IA2 = [s:gui_inactivefg, s:gui_inactivebg, s:cterm_inactivefg, s:cterm_inactivebg, '']$/;"	v
s:IA2	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:IA2 = [ '#4e4e4e' , s:guisep , 239 , s:termsep , '' ]$/;"	v
s:IA2	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:IA2 = [ '#4e4e4e' , s:guibg2 , 239 , s:termbg2 , '' ]$/;"	v
s:IA2	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:IA2 = ['#4E4E4E', '#1C1C1C', 239, 234, '']$/;"	v
s:IA3	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:IA3 = [ '#4e4e4e' , '#303030' , 239 , 236 , '' ]$/;"	v
s:IA3	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let s:IA3 = [ '#4e4e4e' , '#303030' , 239 , 236 , '' ]$/;"	v
s:IA3	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let s:IA3 = [ '#b2b2b2' , '#4a4a4a' , 247 , 238 , '' ]$/;"	v
s:IA3	bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:IA3 = [ '#a8a8a8' , '#ffffff' , 248 , 255 , '' ]$/;"	v
s:IA3	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:IA3 = [s:gui_inactivefg, s:gui_inactivebg, s:cterm_inactivefg, s:cterm_inactivebg, '']$/;"	v
s:IA3	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:IA3 = ['#4E4E4E', '#1C1C1C', 239, 234, '']$/;"	v
s:IM	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:IM = [ '#40403C' , 238 ]$/;"	v
s:Initialized	bundle/SingleCompile/autoload/SingleCompile.vim	/^let s:Initialized = 0$/;"	v
s:KeyMap	bundle/nerdtree/lib/nerdtree/key_map.vim	/^let s:KeyMap = {}$/;"	v
s:KindheaderTag	bundle/tagbar/autoload/tagbar.vim	/^let s:KindheaderTag = copy(s:BaseTag)$/;"	v
s:MenuController	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^let s:MenuController = {}$/;"	v
s:MenuItem	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^let s:MenuItem = {}$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:N1 = [ '#141413' , '#aeee00' , 232 , 154 ] " blackestgravel & lime$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:N1 = [s:gui_dark_gray, s:gui_green, s:cterm_dark_gray, s:cterm_green]$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:N1 = [s:gui_dark_gray, s:gui_green, s:cterm_dark_gray, s:cterm_green]$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:N1   = [ '#00005f' , '#dfff00' , 17  , 190 ]$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let s:N1 = [ '#005f00' , '#afd700' , 22  , 148 ]$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let s:N1 = [ '#e2e2e2' , '#4f3598' , 254 , 56  ]$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:N1 = [ '#1a1a18' , '#ffffff' , 232 , 255 ] " blackestgravel & snow$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:N1 = [ '#ffffff' , '#005fff' , 255 , 27  ]$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:N1 = [ '#ffffff' , '#005252' , 231  , 36 ]$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let s:N1 = [ '#080808' , '#e6db74' , 232 , 144 ] " mode$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:N1 = [s:gui_normalfg, s:gui_normalbg, s:cterm_normalfg, s:cterm_normalbg] " Outside blocks in normal mode$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let s:N1 = [ '#005f00' , '#afd700' , 22  , 148 ] " darkestgreen   & brightgreen$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let s:N1 = [ '#c8c8c8' , '#2e2e2e' , 188 , 235 ]$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:N1 = [ '#00dfff' , s:guibg , 45  , s:termbg ]$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let s:N1 = [ '#414141' , '#e1e1e1' , 59 , 188 ]$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:N1 = [ s:guibg , '#00dfff' , s:termbg , 45 ]$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:N1 = [ '#343434' , '#a0a0a0' , 237 , 248 ]$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:N1 = [ '#141413' , '#c7b386' , 232 , 252 ] " blackestgravel & bleaksand$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:N1 = ['#FFFFFF', '#5F87FF', 15, 69]  " Outside blocks in normal mode (mode and file position)$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:N1 = [ '#141413' , '#CAE682' , 232 , 192 ] " mode$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:N2 = [ '#f4cf86' , '#45413b' , 222 , 238 ] " dirtyblonde    & deepgravel$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:N2 = [s:gui_light_gray, s:gui_med_gray_lo, s:cterm_light_gray, s:cterm_med_gray_lo]$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:N2 = [s:gui_light_gray, s:gui_med_gray_lo, s:cterm_light_gray, s:cterm_med_gray_lo]$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:N2   = [ '#ffffff' , '#444444' , 255 , 238 ]$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let s:N2 = [ '#93a1a1' , '#586e75' , 245 , 240 ]$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let s:N2 = [ '#ff5fd7' , '#242322' , 206 , 234 ]$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:N2 = [ '#ffffff' , '#44403a' , 255, 238 ] " snow & deepgravel$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:N2 = [ '#000087' , '#00dfff' , 18  , 45  ]$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:N2 = [ '#ffffff' , '#003f3f' , 231 , 29 ]$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let s:N2 = [ '#f8f8f0' , '#232526' , 253 , 16  ] " info$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:N2 = [s:gui_termfg2, s:gui_termbg2, s:cterm_normalbg, s:cterm_termbg2]     " Middle block$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let s:N2 = [ '#9e9e9e' , '#303030' , 247 , 236 ] " gray8          & gray2$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let s:N2 = [ '#c8c8c8' , '#2e2e2e' , 188 , 235 ]$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:N2 = [ '#ff5f00' , s:guibg , 202 , s:termbg ]$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let s:N2 = [ '#414141' , '#e1e1e1' , 59 , 188 ]$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:N2 = [ '#ff5f00' , s:guibg2, 202 , s:termbg2 ]$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:N2 = [ '#343434' , '#b3b3b3' , 237 , 250 ]$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:N2 = [ '#c7b386' , '#45413b' , 252, 238 ] " bleaksand & deepgravel$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:N2 = ['#AFAF87', '#5F5F5F', 144, 59] " Next blocks inside (branch and file format)$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:N2 = [ '#CAE682' , '#32322F' , 192 , 236 ] " info$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:N3 = [ '#8cffba' , '#242321' , 121 , 235 ] " saltwatertaffy & darkgravel$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:N3 = [s:gui_green, s:gui_med_gray_hi, s:cterm_green, s:cterm_med_gray_hi]$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:N3 = [s:gui_green, s:gui_med_gray_hi, s:cterm_green, s:cterm_med_gray_hi]$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:N3   = [ '#9cffd3' , '#202020' , 85  , 234 ]$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let s:N3 = [ '#93a1a1' , '#073642' , 240 , 233 ]$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let s:N3 = [ '#e2e2e2' , '#4a4a4a' , 254 , 238 ]$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:N3 = [ '#90a680' , '#2e2d2a' , 64, 235 ] " dilutedpaint & darkgravel$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:N3 = [ '#005fff' , '#afffff' , 27  , 159 ]$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:N3 = [ '#ffffff' , '#002b2b' , 231  , 23 ]$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let s:N3 = [ '#f8f8f0' , '#465457' , 253 , 67  ] " statusline$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let s:N3 = [ '#ffffff' , '#121212' , 231 , 233 ] " white          & gray4$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let s:N3 = [ '#c8c8c8' , '#2e2e2e' , 188 , 235 ]$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:N3 = [ '#767676' , s:guibg , 7   , s:termbg ]$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let s:N3 = [ '#414141' , '#e1e1e1' , 59 , 188 ]$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:N3 = [ '#767676' , s:guibg, 243 , s:termbg]$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:N3 = [ '#343434' , '#c7c7c7' , 237 , 252 ]$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:N3 = [ '#b88853' , '#242321' , 137, 235 ] " toffee & darkgravel$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:N3 = ['#AFAF87', '#5F5F5F', 144, 59] " The middle block$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:N3 = [ '#CAE682' , '#242424' , 192 , 234 ] " statusline$/;"	v
s:N4	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:N4 = [ '#666462' , 241 ]                   " mediumgravel$/;"	v
s:N4	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:N4 = [ '#777470' , 240 ] " gravel$/;"	v
s:N4	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:N4 = [ '#857f78' , 243 ] " gravel$/;"	v
s:N4	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:N4 = [ '#86CD74' , 113 ]                   " mode modified$/;"	v
s:NERDTreeSortStarIndex	bundle/nerdtree/lib/nerdtree/path.vim	/^let s:NERDTreeSortStarIndex = index(g:NERDTreeSortOrder, '*')$/;"	v
s:NormalTag	bundle/tagbar/autoload/tagbar.vim	/^let s:NormalTag = copy(s:BaseTag)$/;"	v
s:Opener	bundle/nerdtree/lib/nerdtree/opener.vim	/^let s:Opener = {}$/;"	v
s:PA	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:PA = [ '#f4cf86' , 222 ]                   " dirtyblonde$/;"	v
s:PA	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:PA = [ '#ab3e5d' , 161 ] " raspberry$/;"	v
s:PA	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:PA = [ '#f9ef6d' , 154 ] " bleaklemon$/;"	v
s:PA	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:PA = [ '#94E42C' , 47 ]$/;"	v
s:Path	bundle/nerdtree/lib/nerdtree/path.vim	/^let s:Path = {}$/;"	v
s:PathSeperator	bundle/SingleCompile/autoload/SingleCompile.vim	/^    let s:PathSeperator = '\/'$/;"	v
s:PathSeperator	bundle/SingleCompile/autoload/SingleCompile.vim	/^    let s:PathSeperator = '\\'$/;"	v
s:PseudoTag	bundle/tagbar/autoload/tagbar.vim	/^let s:PseudoTag = copy(s:BaseTag)$/;"	v
s:R1	bundle/vim-airline/autoload/airline/themes/kalisi.vim	/^let s:R1 = [ '#d75fff' , '#ffffff','171','231']$/;"	v
s:R1	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:R1 = [s:gui_replacefg, s:gui_replacebg, s:cterm_replacefg, s:cterm_replacebg]  " Outside blocks in replace mode$/;"	v
s:R1	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:R1 = [ '#141413' , '#E5786D' , 232 , 173 ]$/;"	v
s:R2	bundle/vim-airline/autoload/airline/themes/kalisi.vim	/^let s:R2 = [ '#5f005f' , '#d75fff','53','171']$/;"	v
s:R2	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:R2 = [s:gui_termfg, s:gui_termbg2, s:cterm_termfg, s:cterm_termbg2]            " Middle block$/;"	v
s:R2	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:R2 = [ '#E5786D' , '#32322F' , 173 , 236 ]$/;"	v
s:R3	bundle/vim-airline/autoload/airline/themes/kalisi.vim	/^let s:R3 = [ '#ff87ff' , '#8700af','213','91']$/;"	v
s:R3	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:R3 = [ '#E5786D' , '#242424' , 173 , 234 ]$/;"	v
s:R4	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:R4 = [ '#E55345' , 203 ]$/;"	v
s:RE	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:RE = [ '#ff9eb8' , 211 ]                   " dress$/;"	v
s:RE	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:RE = [ '#233e09' , 22 ] " oakleaf$/;"	v
s:RE	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let s:RE = [ '#ffffff' , '#d70000' , 231 , 160 ] " white          & brightred$/;"	v
s:RE	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:RE = [ '#c7915b' , 173 ] " nut$/;"	v
s:TreeDirNode	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^let s:TreeDirNode = copy(g:NERDTreeFileNode)$/;"	v
s:TreeFileNode	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^let s:TreeFileNode = {}$/;"	v
s:TypeInfo	bundle/tagbar/autoload/tagbar.vim	/^let s:TypeInfo = {}$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:V1 = [ '#141413' , '#ffa724' , 232 , 214 ] " blackestgravel & orange$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:V1 = [s:gui_dark_gray, s:gui_pink, s:cterm_dark_gray, s:cterm_pink]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:V1 = [s:gui_dark_gray, s:gui_pink, s:cterm_dark_gray, s:cterm_pink]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:V1 = [ '#000000' , '#ffaf00' , 232 , 214 ]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let s:V1 = [ '#1a1a18' , '#ffffff' , 232 , 255 ]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/kalisi.vim	/^let s:V1 = [ '#0087ff' , '#ffffff','33','231']$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let s:V1 = [ '#242322' , '#e6987a' , 234 , 180 ]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:V1 = [ '#1a1a18' , '#ab3e5d' , 232 , 161 ] " blackestgravel & raspberry$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:V1 = [ '#ffffff' , '#ff5f00' , 255 , 202 ]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:V1 = [ '#ffff9a' , '#ff8036' , 222 , 208 ]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let s:V1 = [ '#080808' , '#fd971f' , 232 , 208 ]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:V1 = [s:gui_visualfg, s:gui_visualbg, s:cterm_visualfg, s:cterm_visualbg] " Outside blocks in visual mode$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let s:V1 = [ '#080808' , '#ffaf00' , 232 , 214 ] " gray3          & brightestorange$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let s:V1 = [ '#6565ff' , '#2e2e2e' , 63 , 235 ]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:V1 = [ '#dfdf00' , s:guibg , 184 , s:termbg ]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let s:V1 = [ '#0000b3' , '#e1e1e1' , 19 , 188 ]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:V1 = [ s:guibg, '#dfdf00' , s:termbg , 184 ]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:V1 = [ '#ffff9a' , '#ff6003' , 222 , 202 ]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:V1 = [ '#1c1b1a' , '#9a4820' , 233 , 88 ] " blackgravel & warmadobe$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:V1 = ['#080808', '#FFAF00', 232, 214]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:V1 = ['#FFFFFF', '#AF5F00', 15, 130]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:V1 = [ '#141413' , '#B5D3F3' , 232 , 153 ]$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:V2 = [ '#000000' , '#fade3e' , 16  , 221 ] " coal           & dalespale$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:V2 = [ '#000000' , '#ff5f00' , 232 , 202 ]$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let s:V2 = [ '#ffffff' , '#44403a' , 255, 238 ]$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/kalisi.vim	/^let s:V2 = [ '#005faf' , '#5fafff','25','75']$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let s:V2 = [ '#dbc570' , '#242322' , 186 , 234 ]$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:V2 = [ '#000000' , '#908571' , 16 , 252 ] " coal & winterterrain$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:V2 = [ '#5f0000' , '#ffaf00' , 52  , 214 ]$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:V2 = [ '#ffffff' , '#003f3f' , 231 , 29 ]$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let s:V2 = [ '#f8f8f0' , '#232526' , 253 , 16  ]$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:V2 = [s:gui_visualbg, s:gui_termbg2, s:cterm_visualbg, s:cterm_termbg2]   " Middle block$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let s:V2 = [ '#6565ff' , '#2e2e2e' , 63 , 235 ]$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:V2 = [ '#ff5f00' , s:guibg , 202 , s:termbg ]$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let s:V2 = [ '#0000b3' , '#e1e1e1' , 19 , 188 ]$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:V2 = [ '#ff5f00' , s:guibg2, 202 , s:termbg2 ]$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:V2 = [ '#343434' , '#a3a3a3' , 237 , 249 ]$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:V2 = [ '#000000' , '#88633f' , 16 , 95 ] " coal & cappuccino$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:V2 = ['#AFAF87', '#5F5F5F', 144, 59]$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:V2 = [ '#B5D3F3' , '#32322F' , 153 , 236 ]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:V3 = [ '#000000' , '#b88853' , 16  , 137 ] " coal           & toffee$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:V3 = [s:gui_pink, s:gui_med_gray_hi, s:cterm_pink, s:cterm_med_gray_hi]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:V3 = [s:gui_pink, s:gui_med_gray_hi, s:cterm_pink, s:cterm_med_gray_hi]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:V3 = [ '#ffffff' , '#5f0000' , 15  , 52  ]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let s:V3 = [ '#90a680' , '#2e2d2a' , 64, 235 ]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/kalisi.vim	/^let s:V3 = [ '#87d7ff' , '#005faf','117','25']$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let s:V3 = [ '#e2e2e2' , '#4a4a4a' , 254 , 238 ]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:V3 = [ '#ab3e5d' , '#8c7f77' , 161 , 245 ] " raspberry & wetcoldterrain$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:V3 = [ '#df5f00' , '#ffff87' , 166 , 228 ]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:V3 = [ '#ffffff' , '#002b2b' , 231  , 23  ]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let s:V3 = [ '#f8f8f0' , '#465457' , 253 , 67  ]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let s:V3 = [ '#6565ff' , '#2e2e2e' , 63 , 235 ]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:V3 = [ '#767676' , s:guibg , 7   , s:termbg ]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let s:V3 = [ '#0000b3' , '#e1e1e1' , 19 , 188 ]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:V3 = [ '#767676' , s:guibg, 243 , s:termbg ]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:V3 = [ '#343434' , '#b0b0b0' , 237 , 250 ]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:V3 = [ '#88633f' , '#c7b386' , 95 , 252 ] " cappuccino & bleaksand$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:V3 = ['#AFAF87', '#5F5F5F', 144, 59]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:V3 = [ '#B5D3F3' , '#242424' , 153 , 234 ]$/;"	v
s:V4	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:V4 = [ '#c7915b' , 173 ]                   " coffee$/;"	v
s:V4	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:V4 = [ '#515744' , 101 ] " lichen$/;"	v
s:V4	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:V4 = [ '#c14c3d' , 160 ] " tannedumbrella$/;"	v
s:V4	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:V4 = [ '#7CB0E6' , 111 ]$/;"	v
s:WI	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:WI = [ '#ffffff', '#5f0000', 231, 88 ]$/;"	v
s:WI	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let s:WI = [ '#ff0000', '#2e2e2e', 196, 235 ]$/;"	v
s:WI	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let s:WI = [ '#ff0000', '#e1e1e1', 196, 188 ]$/;"	v
s:WI	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:WI = [ '#eeeeee', '#e33900', 255, 166 ]$/;"	v
s:_csscolor	bundle/vim-css-color/autoload/css_color.vim	/^let s:_csscolor   = s:_hexcolor . '\\|' . s:_funcexpr$/;"	v
s:_funcexpr	bundle/vim-css-color/autoload/css_color.vim	/^let s:_funcexpr   = s:_funcname . '[(]' . s:_numval . s:_listsep . s:_numval . s:_listsep . s:_numval . s:_ws_ . s:_otherargs_ . '[)]'$/;"	v
s:_funcname	bundle/vim-css-color/autoload/css_color.vim	/^let s:_funcname   = '\\(rgb\\|hsl\\)a\\?' " submatch 2$/;"	v
s:_hexcolor	bundle/vim-css-color/autoload/css_color.vim	/^let s:_hexcolor   = '#\\(\\x\\{3}\\|\\x\\{6}\\)\\>' " submatch 1$/;"	v
s:_listsep	bundle/vim-css-color/autoload/css_color.vim	/^let s:_listsep    = s:_ws_ . ','$/;"	v
s:_numval	bundle/vim-css-color/autoload/css_color.vim	/^let s:_numval     = s:_ws_ . '\\(\\d\\{1,3}%\\?\\)' " submatch 3,4,5$/;"	v
s:_otherargs_	bundle/vim-css-color/autoload/css_color.vim	/^let s:_otherargs_ = '\\%(,[^)]*\\)\\?'$/;"	v
s:_ws_	bundle/vim-css-color/autoload/css_color.vim	/^let s:_ws_        = '\\s*'$/;"	v
s:abstract_prototype	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:abstract_prototype = {}$/;"	v
s:accents	bundle/vim-airline/autoload/airline/highlighter.vim	/^let s:accents = {}$/;"	v
s:ack_mappings	bundle/ack.vim/plugin/ack.vim	/^let s:ack_mappings = {$/;"	v
s:active_winnr	bundle/vim-airline/autoload/airline/extensions.vim	/^let s:active_winnr = -1$/;"	v
s:airline_initialized	bundle/vim-airline/plugin/airline.vim	/^let s:airline_initialized = 0$/;"	v
s:airline_tagbar_last_lookup_time	bundle/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:airline_tagbar_last_lookup_time = 0$/;"	v
s:airline_tagbar_last_lookup_val	bundle/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:airline_tagbar_last_lookup_val = ''$/;"	v
s:airline_theme_defined	bundle/vim-airline/plugin/airline.vim	/^let s:airline_theme_defined = 0$/;"	v
s:app_prototype	bundle/vim-rails/autoload/rails.vim	/^let s:app_prototype = {}$/;"	v
s:app_prototype	bundle/vim-rails/autoload/rails.vim	/^let s:app_prototype.cache = s:cache_prototype$/;"	v
s:apps	bundle/vim-rails/autoload/rails.vim	/^  let s:apps = {}$/;"	v
s:ars	bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^let s:ars = ['s:maxdepth', 's:maxfiles', 's:compare_lim', 's:glob', 's:caching']$/;"	v
s:autocommands_done	bundle/tagbar/autoload/tagbar.vim	/^let s:autocommands_done = 0$/;"	v
s:bins	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let s:bins = [$/;"	v
s:brackets	bundle/php_getset.vim/ftplugin/php_getset.vim	/^let s:brackets = '\\(\\s*\\(\\[\\s*\\]\\)\\)\\='$/;"	v
s:buf_min_count	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:buf_min_count = get(g:, 'airline#extensions#tabline#buffer_min_count', 0)$/;"	v
s:buf_modified_symbol	bundle/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^let s:buf_modified_symbol = g:airline_symbols.modified$/;"	v
s:buf_nr_format	bundle/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^let s:buf_nr_format = get(g:, 'airline#extensions#tabline#buffer_nr_format', '%s: ')$/;"	v
s:buf_nr_show	bundle/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^let s:buf_nr_show = get(g:, 'airline#extensions#tabline#buffer_nr_show', 0)$/;"	v
s:buffer_idx_mode	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:buffer_idx_mode = get(g:, 'airline#extensions#tabline#buffer_idx_mode', 0)$/;"	v
s:buffer_prototype	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:buffer_prototype = {}$/;"	v
s:buffer_prototype	bundle/vim-rails/autoload/rails.vim	/^let s:buffer_prototype = {}$/;"	v
s:builder	bundle/vim-airline/t/builder.vim	/^    let s:builder = airline#builder#new({'active': 0})$/;"	v
s:builder	bundle/vim-airline/t/builder.vim	/^    let s:builder = airline#builder#new({'active': 1})$/;"	v
s:builder	bundle/vim-airline/t/extensions_default.vim	/^    let s:builder = airline#builder#new({'active': 1})$/;"	v
s:bwc	badwolf.vim	/^let s:bwc = {}$/;"	v
s:bwc	badwolf.vim	/^let s:bwc.blackestgravel = ['141413', 232]$/;"	v
s:bwc	badwolf.vim	/^let s:bwc.blackgravel    = ['1c1b1a', 233]$/;"	v
s:bwc	badwolf.vim	/^let s:bwc.brightgravel   = ['d9cec3', 252]$/;"	v
s:bwc	badwolf.vim	/^let s:bwc.coal = ['000000', 16]$/;"	v
s:bwc	badwolf.vim	/^let s:bwc.coffee    = ['c7915b', 173]$/;"	v
s:bwc	badwolf.vim	/^let s:bwc.dalespale = ['fade3e', 221]$/;"	v
s:bwc	badwolf.vim	/^let s:bwc.darkgravel     = ['242321', 235]$/;"	v
s:bwc	badwolf.vim	/^let s:bwc.darkroast = ['88633f', 95]$/;"	v
s:bwc	badwolf.vim	/^let s:bwc.deepergravel   = ['35322d', 236]$/;"	v
s:bwc	badwolf.vim	/^let s:bwc.deepgravel     = ['45413b', 238]$/;"	v
s:bwc	badwolf.vim	/^let s:bwc.dirtyblonde = ['f4cf86', 222]$/;"	v
s:bwc	badwolf.vim	/^let s:bwc.dress = ['ff9eb8', 211]$/;"	v
s:bwc	badwolf.vim	/^let s:bwc.gravel         = ['857f78', 243]$/;"	v
s:bwc	badwolf.vim	/^let s:bwc.lightgravel    = ['998f84', 245]$/;"	v
s:bwc	badwolf.vim	/^let s:bwc.lime = ['aeee00', 154]$/;"	v
s:bwc	badwolf.vim	/^let s:bwc.mediumgravel   = ['666462', 241]$/;"	v
s:bwc	badwolf.vim	/^let s:bwc.orange = ['ffa724', 214]$/;"	v
s:bwc	badwolf.vim	/^let s:bwc.plain = ['f8f6f2', 15]$/;"	v
s:bwc	badwolf.vim	/^let s:bwc.saltwatertaffy = ['8cffba', 121]$/;"	v
s:bwc	badwolf.vim	/^let s:bwc.snow = ['ffffff', 15]$/;"	v
s:bwc	badwolf.vim	/^let s:bwc.taffy = ['ff2c4b', 196]$/;"	v
s:bwc	badwolf.vim	/^let s:bwc.tardis = ['0a9dff', 39]$/;"	v
s:bwc	badwolf.vim	/^let s:bwc.toffee = ['b88853', 137]$/;"	v
s:cache_prototype	bundle/vim-rails/autoload/rails.vim	/^let s:cache_prototype = {'dict': {}}$/;"	v
s:ccex	bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:ccex = s:pref.'clear_cache_on_exit'$/;"	v
s:check_file	bundle/syntastic/syntax_checkers/erlang/erlang.vim	/^let s:check_file = expand('<sfile>:p:h') . '\/erlang_check_file.erl'$/;"	v
s:check_file	bundle/syntastic/syntax_checkers/less/lessc.vim	/^    let s:check_file = 'lessc'$/;"	v
s:check_file	bundle/syntastic/syntax_checkers/less/lessc.vim	/^    let s:check_file = 'node ' . expand('<sfile>:p:h') . '\/less-lint.js'$/;"	v
s:checked_ctags	bundle/tagbar/autoload/tagbar.vim	/^let s:checked_ctags       = 0$/;"	v
s:checked_ctags_types	bundle/tagbar/autoload/tagbar.vim	/^let s:checked_ctags_types = 0$/;"	v
s:close_symbol	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:close_symbol = get(g:, 'airline#extensions#tabline#close_symbol', 'X')$/;"	v
s:color_bg	bundle/vim-css-color/autoload/css_color.vim	/^let s:color_bg      = {}$/;"	v
s:color_fg	bundle/vim-css-color/autoload/css_color.vim	/^let s:color_fg      = {}$/;"	v
s:color_template	bundle/vim-airline/autoload/airline/extensions/ctrlp.vim	/^let s:color_template = get(g:, 'airline#extensions#ctrlp#color_template', 'insert')$/;"	v
s:color_template	bundle/vim-airline/autoload/airline/extensions/promptline.vim	/^let s:color_template = get(g:, 'airline#extensions#promptline#color_template', 'normal')$/;"	v
s:color_template	bundle/vim-airline/autoload/airline/extensions/tmuxline.vim	/^let s:color_template = get(g:, 'airline#extensions#tmuxline#color_template', 'normal')$/;"	v
s:column_display	bundle/vim-airline/autoload/airline/extensions/csv.vim	/^let s:column_display = get(g:, 'airline#extensions#csv#column_display', 'Number')$/;"	v
s:commands	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:commands = []$/;"	v
s:common_efm	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:common_efm = ''$/;"	v
s:compare_lim	bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:compare_lim = 3000$/;"	v
s:compare_typeinfo	bundle/tagbar/autoload/tagbar.vim	/^let s:compare_typeinfo = {}$/;"	v
s:concealends	bundle/vim-markdown/syntax/markdown.vim	/^let s:concealends = has('conceal') ? ' concealends' : ''$/;"	v
s:contexts	bundle/vim-airline/autoload/airline.vim	/^let s:contexts = {}$/;"	v
s:core_funcrefs	bundle/vim-airline/autoload/airline.vim	/^let s:core_funcrefs = [$/;"	v
s:ctags_types	bundle/tagbar/autoload/tagbar.vim	/^let s:ctags_types         = {}$/;"	v
s:cterm_alert	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_alert     = 88   " Modified file alert color$/;"	v
s:cterm_blue	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:cterm_blue = 67$/;"	v
s:cterm_blue	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:cterm_blue = 110$/;"	v
s:cterm_dark_gray	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:cterm_dark_gray = 234$/;"	v
s:cterm_dark_gray	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:cterm_dark_gray = 236$/;"	v
s:cterm_green	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:cterm_green = 151$/;"	v
s:cterm_green	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:cterm_green = 150$/;"	v
s:cterm_inactivebg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_inactivebg = 234 " Background for inactive mode$/;"	v
s:cterm_inactivefg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_inactivefg = 239 " Foreground for inactive mode$/;"	v
s:cterm_insertbg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_insertbg  = 70   " Background for insert mode and file position blocks$/;"	v
s:cterm_insertfg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_insertfg  = 15   " Foreground for insert mode and file position blocks$/;"	v
s:cterm_light_gray	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:cterm_light_gray = 239$/;"	v
s:cterm_light_gray	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:cterm_light_gray = 249$/;"	v
s:cterm_med_gray_hi	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:cterm_med_gray_hi = 236$/;"	v
s:cterm_med_gray_hi	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:cterm_med_gray_hi = 238$/;"	v
s:cterm_med_gray_lo	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:cterm_med_gray_lo = 237$/;"	v
s:cterm_med_gray_lo	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:cterm_med_gray_lo = 237$/;"	v
s:cterm_normalbg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_normalbg  = 27   " Background for normal mode and file position blocks$/;"	v
s:cterm_normalfg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_normalfg  = 15   " Foreground for normal mode and file position blocks$/;"	v
s:cterm_orange	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:cterm_orange = 173$/;"	v
s:cterm_orange	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:cterm_orange = 179$/;"	v
s:cterm_pink	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:cterm_pink = 182$/;"	v
s:cterm_pink	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:cterm_pink = 182$/;"	v
s:cterm_purple	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:cterm_purple = 139$/;"	v
s:cterm_purple	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:cterm_purple = 146$/;"	v
s:cterm_red	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:cterm_red = 131$/;"	v
s:cterm_red	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:cterm_red = 174$/;"	v
s:cterm_replacebg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_replacebg = 88   " Background for replace mode and file position blocks$/;"	v
s:cterm_replacefg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_replacefg = 15   " Foreground for replace mode and file position blocks$/;"	v
s:cterm_termbg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_termbg    = 237  " Background for branch and file format blocks$/;"	v
s:cterm_termbg2	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_termbg2   = 234  " Background for middle block$/;"	v
s:cterm_termfg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_termfg    = 144  " Foreground for branch and file format blocks$/;"	v
s:cterm_termfg2	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_termfg2   = 39   " Foreground for middle block$/;"	v
s:cterm_visualbg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_visualbg  = 166  " Background for visual mode and file position blocks$/;"	v
s:cterm_visualfg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_visualfg  = 15   " Foreground for visual mode and file position blocks$/;"	v
s:cubergb	bundle/vim-css-color/autoload/css_color.vim	/^	let s:cubergb = [ 0x00, 0x5F, 0x87, 0xAF, 0xD7, 0xFF ]$/;"	v
s:cur_mode	bundle/SingleCompile/autoload/SingleCompileAsync.vim	/^let s:cur_mode = ''$/;"	v
s:current_bufnr	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:current_bufnr = -1$/;"	v
s:current_modified	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:current_modified = 0$/;"	v
s:current_tabcnt	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:current_tabcnt = -1$/;"	v
s:current_tabline	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:current_tabline = ''$/;"	v
s:current_tabnr	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:current_tabnr = -1$/;"	v
s:debug	bundle/tagbar/autoload/tagbar.vim	/^let s:debug = 0$/;"	v
s:debug_file	bundle/tagbar/autoload/tagbar.vim	/^let s:debug_file = ''$/;"	v
s:decoder	bundle/syntastic/syntax_checkers/html/validator.vim	/^let s:decoder = 'awk -f ' . shellescape(expand('<sfile>:p:h') . '\/validator_decode.awk')$/;"	v
s:defaultCheckers	bundle/syntastic/plugin/syntastic/registry.vim	/^let s:defaultCheckers = {$/;"	v
s:defaultCommentString	bundle/tComment/autoload/tcomment.vim	/^let s:defaultCommentString = s:DefaultValue('commentstring')$/;"	v
s:defaultComments	bundle/tComment/autoload/tcomment.vim	/^let s:defaultComments      = s:DefaultValue('comments')$/;"	v
s:default_checks	bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:default_checks = ['indent', 'trailing']$/;"	v
s:default_includes	bundle/syntastic/autoload/syntastic/c.vim	/^let s:default_includes = [ '.', '..', 'include', 'includes',$/;"	v
s:default_projections	bundle/vim-rails/autoload/rails.vim	/^let s:default_projections = {$/;"	v
s:definitions	bundle/tComment/autoload/tcomment.vim	/^let s:definitions = {}$/;"	v
s:deprecationNoticesIssued	bundle/syntastic/autoload/syntastic/util.vim	/^let s:deprecationNoticesIssued = []$/;"	v
s:did_snip_helper	bundle/snipmate.vim/ftplugin/html_snip_helper.vim	/^let s:did_snip_helper = 1$/;"	v
s:did_snips_mappings	bundle/snipmate.vim/after/plugin/snipMate.vim	/^let s:did_snips_mappings = 1$/;"	v
s:dir_for_worktree	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:dir_for_worktree = {}$/;"	v
s:dircounts	bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^let s:dircounts = {}$/;"	v
s:done_bundles	autoload/pathogen.vim	/^let s:done_bundles = ''$/;"	v
s:efm_generate	bundle/vim-rails/autoload/rails.vim	/^let s:efm_generate =$/;"	v
s:emmet_settings	bundle/emmet-vim/autoload/emmet.vim	/^let s:emmet_settings = {$/;"	v
s:enabled	bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:enabled = get(g:, 'airline#extensions#whitespace#enabled', 1)$/;"	v
s:excludes	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:excludes = get(g:, 'airline#extensions#tabline#excludes', [])$/;"	v
s:exists	bundle/emmet-vim/autoload/emmet/lang.vim	/^let s:exists = {}$/;"	v
s:expand_bufnr	bundle/tagbar/autoload/tagbar.vim	/^let s:expand_bufnr = -1$/;"	v
s:ext	bundle/vim-airline/autoload/airline/extensions.vim	/^let s:ext = {}$/;"	v
s:ext	bundle/vim-airline/autoload/airline/extensions.vim	/^let s:ext._theme_funcrefs = []$/;"	v
s:ficounts	bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:ficounts = {}$/;"	v
s:file	bundle/vim-rails/autoload/rails.vim	/^let s:file = expand('<sfile>:p')$/;"	v
s:file_prototype	bundle/vim-rails/autoload/rails.vim	/^let s:file_prototype = {}$/;"	v
s:filecounts	bundle/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^let s:filecounts = {}$/;"	v
s:filetype_overrides	bundle/vim-airline/autoload/airline/extensions.vim	/^let s:filetype_overrides = {$/;"	v
s:filetype_regex_overrides	bundle/vim-airline/autoload/airline/extensions.vim	/^let s:filetype_regex_overrides = {}$/;"	v
s:filtermx	bundle/emmet-vim/autoload/emmet.vim	/^let s:filtermx = '|\\(\\%(bem\\|html\\|haml\\|slim\\|e\\|c\\|s\\|fc\\|xsl\\|t\\|\\\/[^ ]\\+\\)\\s*,\\{0,1}\\s*\\)*$'$/;"	v
s:first_sign_id	bundle/syntastic/plugin/syntastic/signs.vim	/^let s:first_sign_id = 5000$/;"	v
s:firstline	bundle/php_getset.vim/ftplugin/php_getset.vim	/^let s:firstline = 0$/;"	v
s:flags	bundle/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:flags = get(g:, 'airline#extensions#tagbar#flags', '')$/;"	v
s:fmod	bundle/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^let s:fmod = get(g:, 'airline#extensions#tabline#fnamemod', ':~:.')$/;"	v
s:fnamecollapse	bundle/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^let s:fnamecollapse = get(g:, 'airline#extensions#tabline#fnamecollapse', 1)$/;"	v
s:formatter	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:formatter = get(g:, 'airline#extensions#tabline#formatter', 'default')$/;"	v
s:fpats	bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:fpats = {$/;"	v
s:funcname	bundle/php_getset.vim/ftplugin/php_getset.vim	/^let s:funcname  = ''$/;"	v
s:getter	bundle/php_getset.vim/ftplugin/php_getset.vim	/^let s:getter    = 0 $/;"	v
s:git_dirs	bundle/vim-airline/autoload/airline/extensions/branch.vim	/^let s:git_dirs = {}$/;"	v
s:git_versions	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:git_versions = {}$/;"	v
s:glbs	bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:glbs = { 'magic': 1, 'to': 1, 'tm': 0, 'sb': 1, 'hls': 0, 'im': 0,$/;"	v
s:gui_alert	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_alert       = '#870000'$/;"	v
s:gui_blue	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:gui_blue = '#6a9fb5'$/;"	v
s:gui_blue	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:gui_blue = '#87afd7'$/;"	v
s:gui_dark_gray	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:gui_dark_gray = '#202020'$/;"	v
s:gui_dark_gray	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:gui_dark_gray = '#303030'$/;"	v
s:gui_green	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:gui_green = '#99cc99'$/;"	v
s:gui_green	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:gui_green = '#afd787'$/;"	v
s:gui_inactivebg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_inactivebg   = '#1C1C1C'$/;"	v
s:gui_inactivefg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_inactivefg   = '#4E4E4E'$/;"	v
s:gui_insertbg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_insertbg    = '#87AF5F'$/;"	v
s:gui_insertfg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_insertfg    = '#FFFFFF'$/;"	v
s:gui_light_gray	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:gui_light_gray = '#505050'$/;"	v
s:gui_light_gray	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:gui_light_gray = '#b2b2b2'$/;"	v
s:gui_med_gray_hi	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:gui_med_gray_hi = '#303030'$/;"	v
s:gui_med_gray_hi	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:gui_med_gray_hi = '#444444'$/;"	v
s:gui_med_gray_lo	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:gui_med_gray_lo = '#3a3a3a'$/;"	v
s:gui_med_gray_lo	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:gui_med_gray_lo = '#3a3a3a'$/;"	v
s:gui_normalbg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_normalbg    = '#5F87FF'$/;"	v
s:gui_normalfg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_normalfg    = '#FFFFFF'$/;"	v
s:gui_orange	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:gui_orange = '#d28445'$/;"	v
s:gui_orange	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:gui_orange = '#d7af5f'$/;"	v
s:gui_pink	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:gui_pink = '#d7afd7'$/;"	v
s:gui_pink	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:gui_pink = '#d7afd7'$/;"	v
s:gui_purple	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:gui_purple = '#aa759f'$/;"	v
s:gui_purple	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:gui_purple = '#afafd7'$/;"	v
s:gui_red	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:gui_red = '#ac4142'$/;"	v
s:gui_red	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:gui_red = '#d78787'$/;"	v
s:gui_replacebg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_replacebg   = '#870000'$/;"	v
s:gui_replacefg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_replacefg   = '#FFFFFF'$/;"	v
s:gui_termbg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_termbg      = '#5F5F5F'$/;"	v
s:gui_termbg2	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_termbg2     = '#1C1C1C'$/;"	v
s:gui_termfg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_termfg      = '#AFAF87'$/;"	v
s:gui_termfg2	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_termfg2     = '#F5F5F5'$/;"	v
s:gui_visualbg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_visualbg    = '#ff8c00'$/;"	v
s:gui_visualfg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_visualfg    = '#FFFFFF'$/;"	v
s:guibg	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:guibg = '#080808'$/;"	v
s:guibg	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:guibg = '#080808'$/;"	v
s:guibg2	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:guibg2 = '#1c1c1c'$/;"	v
s:guisep	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:guisep = '#303030'$/;"	v
s:gutter	badwolf.vim	/^    let s:gutter = 'blackestgravel'$/;"	v
s:gutter	badwolf.vim	/^    let s:gutter = 'blackgravel'$/;"	v
s:has_fugitive	bundle/vim-airline/autoload/airline/extensions/branch.vim	/^let s:has_fugitive = exists('*fugitive#head')$/;"	v
s:has_lawrencium	bundle/vim-airline/autoload/airline/extensions/branch.vim	/^let s:has_lawrencium = exists('*lawrencium#statusline')$/;"	v
s:has_vcscommand	bundle/vim-airline/autoload/airline/extensions/branch.vim	/^let s:has_vcscommand = get(g:, 'airline#extensions#branch#use_vcscommand', 0) && exists('*VCSCommandGetStatusLine')$/;"	v
s:hash_colors	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:hash_colors = {}$/;"	v
s:hex	bundle/vim-css-color/autoload/css_color.vim	/^	let s:hex[ printf( '%02x', i ) ] = i$/;"	v
s:hex	bundle/vim-css-color/autoload/css_color.vim	/^let s:hex={}$/;"	v
s:hlgrps	bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:hlgrps = {$/;"	v
s:hunk_symbols	bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^let s:hunk_symbols = get(g:, 'airline#extensions#hunks#hunk_symbols', ['+', '~', '-'])$/;"	v
s:icon_closed	bundle/tagbar/autoload/tagbar.vim	/^let s:icon_closed = g:tagbar_iconchars[0]$/;"	v
s:icon_open	bundle/tagbar/autoload/tagbar.vim	/^let s:icon_open   = g:tagbar_iconchars[1]$/;"	v
s:ics	bundle/tagbar/syntax/tagbar.vim	/^let s:ics = escape(join(g:tagbar_iconchars, ''), ']^\\-')$/;"	v
s:id	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	bundle/ctrlp.vim/autoload/ctrlp/line.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	bundle/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:ignore_html_errors	bundle/syntastic/syntax_checkers/html/tidy.vim	/^let s:ignore_html_errors = [$/;"	v
s:imports	bundle/syntastic/syntax_checkers/sass/sass.vim	/^    let s:imports = "--compass"$/;"	v
s:imports	bundle/syntastic/syntax_checkers/sass/sass.vim	/^let s:imports = ""$/;"	v
s:inactive_funcrefs	bundle/vim-airline/autoload/airline.vim	/^let s:inactive_funcrefs = []$/;"	v
s:indent	bundle/php_getset.vim/ftplugin/php_getset.vim	/^let s:indent    = ''$/;"	v
s:indent_algo	bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:indent_algo = get(g:, 'airline#extensions#whitespace#mixed_indent_algo', 0)$/;"	v
s:is_gui	bundle/vim-css-color/autoload/css_color.vim	/^	let s:is_gui = 0$/;"	v
s:is_gui	bundle/vim-css-color/autoload/css_color.vim	/^	let s:is_gui = 1$/;"	v
s:is_maximized	bundle/tagbar/autoload/tagbar.vim	/^let s:is_maximized    = 0$/;"	v
s:is_win32term	bundle/vim-airline/autoload/airline/highlighter.vim	/^let s:is_win32term = (has('win32') || has('win64')) && !has('gui_running')$/;"	v
s:iskeyword_save	bundle/php.vim/syntax/php.vim	/^let s:iskeyword_save = &iskeyword$/;"	v
s:known_files	bundle/tagbar/autoload/tagbar.vim	/^let s:known_files = {$/;"	v
s:kprange	bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:kprange = {$/;"	v
s:last_highlight_tline	bundle/tagbar/autoload/tagbar.vim	/^let s:last_highlight_tline = 0$/;"	v
s:last_mps	bundle/matchit.zip/plugin/matchit.vim	/^let s:last_mps = ""$/;"	v
s:last_words	bundle/matchit.zip/plugin/matchit.vim	/^let s:last_words = ":"$/;"	v
s:lastline	bundle/php_getset.vim/ftplugin/php_getset.vim	/^let s:lastline  = 0$/;"	v
s:layout	bundle/vim-airline/autoload/airline/extensions/default.vim	/^let s:layout = get(g:, 'airline#extensions#default#layout', [$/;"	v
s:loaded	bundle/vim-airline/autoload/airline/init.vim	/^let s:loaded = 0$/;"	v
s:loaded_delimitMate	bundle/delimitMate/plugin/delimitMate.vim	/^let s:loaded_delimitMate = 1$/;"	v
s:max_lines	bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:max_lines = get(g:, 'airline#extensions#whitespace#max_lines', 20000)$/;"	v
s:menu_root	bundle/SingleCompile/plugin/SingleCompile.vim	/^        let s:menu_root = 'Plugin.SingleCompile'$/;"	v
s:menu_root	bundle/SingleCompile/plugin/SingleCompile.vim	/^        let s:menu_root = 'SingleCompile'$/;"	v
s:mixed_indent_format	bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:mixed_indent_format = get(g:, 'airline#extensions#whitespace#mixed_indent_format', 'mixed-indent[%s]')$/;"	v
s:mode_dict	bundle/SingleCompile/autoload/SingleCompileAsync.vim	/^let s:mode_dict = {}$/;"	v
s:modemap	bundle/syntastic/plugin/syntastic.vim	/^let s:modemap = g:SyntasticModeMap.Instance()$/;"	v
s:molokai_original	molokai.vim	/^    let s:molokai_original = 0$/;"	v
s:molokai_original	molokai.vim	/^    let s:molokai_original = g:molokai_original$/;"	v
s:mx	bundle/emmet-vim/autoload/emmet/lang/html.vim	/^let s:mx = '\\([+>]\\|[<^]\\+\\)\\{-}\\s*'$/;"	v
s:nearby_disabled	bundle/tagbar/autoload/tagbar.vim	/^let s:nearby_disabled = 0$/;"	v
s:new_window	bundle/tagbar/autoload/tagbar.vim	/^let s:new_window      = 1$/;"	v
s:next_sign_id	bundle/syntastic/plugin/syntastic/signs.vim	/^let s:next_sign_id = s:first_sign_id$/;"	v
s:non_zero_only	bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^let s:non_zero_only = get(g:, 'airline#extensions#hunks#non_zero_only', 0)$/;"	v
s:notifier_types	bundle/syntastic/plugin/syntastic/notifiers.vim	/^let s:notifier_types = ['signs', 'balloons', 'highlighting', 'cursor', 'autoloclist']$/;"	v
s:notifiers	bundle/syntastic/plugin/syntastic.vim	/^let s:notifiers = g:SyntasticNotifiers.New()$/;"	v
s:notslash	bundle/matchit.zip/plugin/matchit.vim	/^let s:notslash = '\\\\\\@<!\\%(\\\\\\\\\\)*'$/;"	v
s:nullCommentString	bundle/tComment/autoload/tcomment.vim	/^let s:nullCommentString    = '%s'$/;"	v
s:number_map	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:number_map = &encoding == 'utf-8'$/;"	v
s:ocamlpp	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let s:ocamlpp="camlp4o"$/;"	v
s:ocamlpp	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let s:ocamlpp="camlp4r"$/;"	v
s:old_cpo	bundle/nerdtree/plugin/NERD_tree.vim	/^let s:old_cpo = &cpo$/;"	v
s:overwrite	bundle/vim-airline/autoload/airline/extensions/bufferline.vim	/^let s:overwrite = get(g:, 'airline#extensions#bufferline#overwrite_variables', 1)$/;"	v
s:parts	bundle/vim-airline/autoload/airline/parts.vim	/^let s:parts = {}$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=#\\([^-+# ]\\)\\@='$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=+\\([^-+# ]\\)\\@='$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=-\\([^-+# ]\\)\\@='$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . '][-+# ]\\?\\)\\@<=[^*(]\\+\\(\\*\\?\\(([^)]\\+)\\)\\? :\\)\\@='$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(^[' . s:ics . '] \\?\\)\\@<=[^-+: ]\\+[^:]\\+$'$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\S\\@<![' . s:ics . ']\\([-+# ]\\?\\)\\@='$/;"	v
s:pattern_color	bundle/vim-css-color/autoload/css_color.vim	/^let s:pattern_color = {}$/;"	v
s:paused	bundle/tagbar/autoload/tagbar.vim	/^let s:paused = 0$/;"	v
s:phpgetset_getterTemplate	bundle/php_getset.vim/ftplugin/php_getset.vim	/^  let s:phpgetset_getterTemplate = b:phpgetset_getterTemplate$/;"	v
s:phpgetset_getterTemplate	bundle/php_getset.vim/ftplugin/php_getset.vim	/^  let s:phpgetset_getterTemplate =$/;"	v
s:phpgetset_insertPosition	bundle/php_getset.vim/ftplugin/php_getset.vim	/^  let s:phpgetset_insertPosition = 0$/;"	v
s:phpgetset_insertPosition	bundle/php_getset.vim/ftplugin/php_getset.vim	/^  let s:phpgetset_insertPosition = b:phpgetset_insertPosition$/;"	v
s:phpgetset_setterTemplate	bundle/php_getset.vim/ftplugin/php_getset.vim	/^  let s:phpgetset_setterTemplate = b:phpgetset_setterTemplate$/;"	v
s:phpgetset_setterTemplate	bundle/php_getset.vim/ftplugin/php_getset.vim	/^  let s:phpgetset_setterTemplate =$/;"	v
s:phpname	bundle/php_getset.vim/ftplugin/php_getset.vim	/^let s:phpname = '[a-zA-Z_$][a-zA-Z0-9_$]*'$/;"	v
s:projections_for_gems	bundle/vim-rails/autoload/rails.vim	/^let s:projections_for_gems = {}$/;"	v
s:prompt_snapshot_file	bundle/vim-airline/autoload/airline/extensions/promptline.vim	/^let s:prompt_snapshot_file = get(g:, 'airline#extensions#promptline#snapshot_file', '')$/;"	v
s:prototype	bundle/vim-airline/autoload/airline/builder.vim	/^let s:prototype = {}$/;"	v
s:pwin_by_tagbar	bundle/tagbar/autoload/tagbar.vim	/^let s:pwin_by_tagbar = 0$/;"	v
s:readable_prototype	bundle/vim-rails/autoload/rails.vim	/^let s:readable_prototype = {}$/;"	v
s:registry	bundle/syntastic/plugin/syntastic.vim	/^let s:registry = g:SyntasticRegistry.Instance()$/;"	v
s:repo_prototype	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:repo_prototype = {}$/;"	v
s:repos	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:repos = {}$/;"	v
s:run_result_tempfile	bundle/SingleCompile/autoload/SingleCompile.vim	/^let s:run_result_tempfile = ''$/;"	v
s:running_windows	bundle/syntastic/plugin/syntastic.vim	/^let s:running_windows = has("win16") || has("win32")$/;"	v
s:sass_cache_location	bundle/syntastic/syntax_checkers/sass/sass.vim	/^let s:sass_cache_location = tempname()$/;"	v
s:save_cpo	bundle/emmet-vim/autoload/emmet.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	bundle/emmet-vim/plugin/emmet.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	bundle/matchit.zip/plugin/matchit.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/php_getset.vim/ftplugin/php_getset.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/autoload/syntastic/c.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/autoload/syntastic/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/make.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/d/dmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vim-html5validator/plugin/html5validator.vim	/^let s:save_cpo = &cpo$/;"	v
s:saved_cpo	bundle/SingleCompile/autoload/SingleCompile.vim	/^let s:saved_cpo = &cpo$/;"	v
s:saved_cpo	bundle/SingleCompile/autoload/SingleCompileAsync.vim	/^let s:saved_cpo = &cpo$/;"	v
s:saved_cpo	bundle/SingleCompile/plugin/SingleCompile.vim	/^let s:saved_cpo = &cpo$/;"	v
s:script_path	bundle/vim-airline/autoload/airline/extensions.vim	/^let s:script_path = tolower(resolve(expand('<sfile>:p:h')))$/;"	v
s:section_truncate_width	bundle/vim-airline/autoload/airline/extensions/default.vim	/^let s:section_truncate_width = get(g:, 'airline#extensions#default#section_truncate_width', {$/;"	v
s:sections	bundle/vim-airline/autoload/airline.vim	/^let s:sections = ['a','b','c','gutter','x','y','z','warning']$/;"	v
s:sections	bundle/vim-airline/t/init.vim	/^let s:sections = ['a', 'b', 'c', 'gutter', 'x', 'y', 'z', 'warning']$/;"	v
s:seed	bundle/emmet-vim/autoload/emmet/util.vim	/^let s:seed = localtime()$/;"	v
s:separators	bundle/vim-airline/autoload/airline/highlighter.vim	/^let s:separators = {}$/;"	v
s:setter	bundle/php_getset.vim/ftplugin/php_getset.vim	/^let s:setter    = 0$/;"	v
s:setup_done	bundle/syntastic/plugin/syntastic/signs.vim	/^let s:setup_done = 0$/;"	v
s:sfile	bundle/emmet-vim/unittest.vim	/^let s:sfile = expand('<sfile>')$/;"	v
s:short_help	bundle/tagbar/autoload/tagbar.vim	/^let s:short_help      = 1$/;"	v
s:show_buffers	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:show_buffers = get(g:, 'airline#extensions#tabline#show_buffers', 1)$/;"	v
s:show_close_button	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:show_close_button = get(g:, 'airline#extensions#tabline#show_close_button', 1)$/;"	v
s:show_message	bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^  let s:show_message = g:airline_detect_whitespace == 1$/;"	v
s:show_message	bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^  let s:show_message = get(g:, 'airline#extensions#whitespace#show_message', 1)$/;"	v
s:show_tab_nr	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:show_tab_nr = get(g:, 'airline#extensions#tabline#show_tab_nr', 1)$/;"	v
s:show_tab_type	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:show_tab_type = get(g:, 'airline#extensions#tabline#show_tab_type', 1)$/;"	v
s:show_tabs	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:show_tabs = get(g:, 'airline#extensions#tabline#show_tabs', 1)$/;"	v
s:sid	bundle/vim-rails/autoload/rails.vim	/^let s:sid = s:sub(maparg("<SID>xx"),'xx$','')$/;"	v
s:skip_symbol	bundle/vim-airline/autoload/airline/extensions/tabline/formatters/unique_tail_improved.vim	/^let s:skip_symbol = '…'$/;"	v
s:snippets	bundle/snipmate.vim/plugin/snipMate.vim	/^let s:snippets = {} | let s:multi_snips = {}$/;"	v
s:source_func	bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^let s:source_func = ''$/;"	v
s:spc	bundle/vim-airline/autoload/airline/extensions/example.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	bundle/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	bundle/vim-airline/autoload/airline/extensions/virtualenv.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	bundle/vim-airline/autoload/airline/extensions/windowswap.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	bundle/vim-airline/autoload/airline/section.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	bundle/vim-airline/autoload/airline/util.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:statusline_in_use	bundle/tagbar/autoload/tagbar.vim	/^let s:statusline_in_use = 0$/;"	v
s:symbol	bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:symbol = get(g:, 'airline#extensions#whitespace#symbol', g:airline_symbols.whitespace)$/;"	v
s:syntastic_elixir_compile_command	bundle/syntastic/syntax_checkers/elixir/elixir.vim	/^    let s:syntastic_elixir_compile_command = 'mix compile'$/;"	v
s:syntastic_elixir_compile_command	bundle/syntastic/syntax_checkers/elixir/elixir.vim	/^let s:syntastic_elixir_compile_command = 'elixir'$/;"	v
s:tab_min_count	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:tab_min_count = get(g:, 'airline#extensions#tabline#tab_min_count', 0)$/;"	v
s:tab_nr_type	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:tab_nr_type = get(g:, 'airline#extensions#tabline#tab_nr_type', 0)$/;"	v
s:tabline	badwolf.vim	/^        let s:tabline = 'blackestgravel'$/;"	v
s:tabline	badwolf.vim	/^        let s:tabline = 'blackgravel'$/;"	v
s:tabline	badwolf.vim	/^        let s:tabline = 'darkgravel'$/;"	v
s:tabline	badwolf.vim	/^        let s:tabline = 'deepgravel'$/;"	v
s:tabline	badwolf.vim	/^    let s:tabline = 'blackgravel'$/;"	v
s:temp_files	bundle/vim-fugitive/plugin/fugitive.vim	/^  let s:temp_files = {}$/;"	v
s:termbg	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:termbg = 232$/;"	v
s:termbg	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:termbg = 232$/;"	v
s:termbg2	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:termbg2= 234$/;"	v
s:termsep	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:termsep = 236$/;"	v
s:text	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^let s:text = map(['second', 'seconds', 'minutes', 'hours', 'days', 'weeks',$/;"	v
s:tmuxline_snapshot_file	bundle/vim-airline/autoload/airline/extensions/tmuxline.vim	/^let s:tmuxline_snapshot_file = get(g:, 'airline#extensions#tmuxline#snapshot_file', '')$/;"	v
s:trailing_format	bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:trailing_format = get(g:, 'airline#extensions#whitespace#trailing_format', 'trailing[%s]')$/;"	v
s:transformations	bundle/vim-rails/autoload/rails.vim	/^let s:transformations = {}$/;"	v
s:tree_up_dir_line	bundle/nerdtree/syntax/nerdtree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:type_init_done	bundle/tagbar/autoload/tagbar.vim	/^let s:type_init_done    = 0$/;"	v
s:types	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let s:types = {$/;"	v
s:typesDirty	bundle/tComment/autoload/tcomment.vim	/^let s:typesDirty = 1$/;"	v
s:variable	bundle/php_getset.vim/ftplugin/php_getset.vim	/^let s:variable = '\\(\\s*\\)\\(\\(var\\s\\+\\)*\\)\\$\\(' . s:phpname . '\\)\\s*\\(;\\|=[^;]\\+;\\)'$/;"	v
s:varname	bundle/php_getset.vim/ftplugin/php_getset.vim	/^let s:varname   = ''$/;"	v
s:view_types	bundle/vim-rails/autoload/rails.vim	/^let s:view_types = split('rhtml,erb,rxml,builder,rjs,haml',',')$/;"	v
s:visibility_symbols	bundle/tagbar/autoload/tagbar.vim	/^let s:visibility_symbols = {$/;"	v
s:vopen_warning	autoload/pathogen.vim	/^let s:vopen_warning = 0$/;"	v
s:warnings	bundle/tagbar/autoload/tagbar.vim	/^let s:warnings = {$/;"	v
s:wig_cond	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^let s:wig_cond = v:version > 702 || ( v:version == 702 && has('patch051') )$/;"	v
s:window_expanded	bundle/tagbar/autoload/tagbar.vim	/^let s:window_expanded   = 0$/;"	v
s:window_pos	bundle/tagbar/autoload/tagbar.vim	/^let s:window_pos = {$/;"	v
s:winrestcmd	bundle/tagbar/autoload/tagbar.vim	/^let s:winrestcmd      = ''$/;"	v
s:worktree_for_dir	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:worktree_for_dir = {}$/;"	v
s:xtermcolor	bundle/vim-css-color/autoload/css_color.vim	/^	let s:xtermcolor += [$/;"	v
s:xtermcolor	bundle/vim-css-color/autoload/css_color.vim	/^	let s:xtermcolor = [$/;"	v
s:xvquant	bundle/vim-css-color/autoload/css_color.vim	/^	let s:xvquant = repeat([0],48)$/;"	v
s:xvquant	bundle/vim-css-color/autoload/css_color.vim	/^	let s:xvquant[s:cubergb[2]] = 2$/;"	v
s:xvquant	bundle/vim-css-color/autoload/css_color.vim	/^	let s:xvquant[s:cubergb[3]] = 3$/;"	v
s:xvquant	bundle/vim-css-color/autoload/css_color.vim	/^	let s:xvquant[s:cubergb[4]] = 4$/;"	v
s:xvquant	bundle/vim-css-color/autoload/css_color.vim	/^	let s:xvquant[s:cubergb[5]] = 5$/;"	v
samerootsyml	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:samerootsyml(each, isfile, cwd)$/;"	f
sanstail	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:sanstail(str)$/;"	f
save_cpo	bundle/delimitMate/plugin/delimitMate.vim	/^let save_cpo = &cpo$/;"	v
savebookmark	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:savebookmark(name, cwd)$/;"	f
savetofile	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:savetofile(mrufs)$/;"	f
scanlineforuris	bundle/vim-rails/autoload/rails.vim	/^function! s:scanlineforuris(line)$/;"	f
schemaEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:schemaEdit(cmd,...)$/;"	f
schemaList	bundle/vim-rails/autoload/rails.vim	/^function! s:schemaList(A,L,P)$/;"	f
section	bundle/vim-css3-syntax/test/test.css	/^section,$/;"	s
select_tab	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:select_tab(buf_index)$/;"	f
selectiveexpand	bundle/vim-rails/autoload/rails.vim	/^function! s:selectiveexpand(pat,good,default,...)$/;"	f
send_message	bundle/vim-multiuser/plugin/vim_multiuser_server.py	/^    def send_message(self, msg):$/;"	m	class:MUClient
send_message	bundle/vim-multiuser/plugin/vim_multiuser_server.py	/^    def send_message(self, msg):$/;"	m	class:MUServer
session_list	bundle/vim-multiuser/plugin/vim_multiuser_server.py	/^session_list = {}$/;"	v
setentries	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:setentries()$/;"	f
settype	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:settype(type)$/;"	f
setup_keymaps	bundle/tagbar/plugin/tagbar.vim	/^function! s:setup_keymaps() abort$/;"	f
setup_options	bundle/tagbar/plugin/tagbar.vim	/^function! s:setup_options() abort$/;"	f
setupblank	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:setupblank()$/;"	f
shellesc	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:shellesc(arg) abort$/;"	f
shellslash	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:shellslash(path) abort$/;"	f
shortest	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:shortest(lens)$/;"	f
should_change_group	bundle/vim-airline/autoload/airline/builder.vim	/^function! s:should_change_group(group1, group2)$/;"	f
showMenu	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:showMenu(node)$/;"	f
show_category	bundle/emmet-vim/unittest.vim	/^function! s:show_category(category)$/;"	f
show_done	bundle/emmet-vim/unittest.vim	/^function! s:show_done()$/;"	f
show_ng	bundle/emmet-vim/unittest.vim	/^function! s:show_ng(no, expect, got)$/;"	f
show_ok	bundle/emmet-vim/unittest.vim	/^function! s:show_ok()$/;"	f
show_pass	bundle/emmet-vim/unittest.vim	/^function! s:show_pass(pass)$/;"	f
show_skip	bundle/emmet-vim/unittest.vim	/^function! s:show_skip(no, title)$/;"	f
show_tabline	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:show_tabline(min_count, total_count)$/;"	f
show_title	bundle/emmet-vim/unittest.vim	/^function! s:show_title(no, title)$/;"	f
show_type	bundle/emmet-vim/unittest.vim	/^function! s:show_type(type)$/;"	f
sname	bundle/vim-rails/autoload/rails.vim	/^function! s:sname()$/;"	f
snipMate#expandSnip	bundle/snipmate.vim/autoload/snipMate.vim	/^fun snipMate#expandSnip(snip, col)$/;"	f
snipMate#jumpTabStop	bundle/snipmate.vim/autoload/snipMate.vim	/^fun snipMate#jumpTabStop(backwards)$/;"	f
snippets_dir	bundle/snipmate.vim/plugin/snipMate.vim	/^	let snippets_dir = substitute(globpath(&rtp, 'snippets\/'), "\\n", ',', 'g')$/;"	v
socket	bundle/vim-multiuser/plugin/vim_multiuser_server.py	/^import socket$/;"	i
source	bundle/vim-css3-syntax/test/test.css	/^source,$/;"	s
span 	bundle/vim-css3-syntax/test/test.css	/^.scoping \/deep\/ span {$/;"	s
specEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:specEdit(cmd,...) abort$/;"	f
specList	bundle/vim-rails/autoload/rails.vim	/^function! s:specList(A,L,P)$/;"	f
split	bundle/vim-rails/autoload/rails.vim	/^function! s:split(arg, ...)$/;"	f
stage_info	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:stage_info(lnum) abort$/;"	f
start_multiuser_client	bundle/vim-multiuser/plugin/vim_multiuser.py	/^def start_multiuser_client(host, port, name=""):$/;"	f
start_multiuser_server	bundle/vim-multiuser/plugin/vim_multiuser.py	/^def start_multiuser_server(port, name=""):$/;"	f
startswith	bundle/vim-rails/autoload/rails.vim	/^function! s:startswith(string,prefix)$/;"	f
stl	bundle/vim-airline/t/builder.vim	/^    let stl = s:builder.build()$/;"	v
stl	bundle/vim-airline/t/extensions_default.vim	/^    let stl = s:builder.build()$/;"	v
strwidth	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:strwidth(str)$/;"	f
stylesheetEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:stylesheetEdit(cmd,...)$/;"	f
stylesheetList	bundle/vim-rails/autoload/rails.vim	/^function! s:stylesheetList(A,L,P)$/;"	f
sub	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
sub	bundle/vim-rails/autoload/rails.vim	/^function! s:sub(str,pat,rep)$/;"	f
sublist	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:sublist(l, s, e)$/;"	f
sublist7071	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:sublist7071(l, s, e)$/;"	f
sut	bundle/vim-multiuser/plugin/tests/vim_multiuser_tests.py	/^import vim_multiuser as sut$/;"	i
sync_active_winnr	bundle/vim-airline/autoload/airline/extensions.vim	/^function! s:sync_active_winnr()$/;"	f
syntastic	bundle/syntastic/plugin/syntastic.vim	/^augroup syntastic$/;"	a
syntastic#c#CheckPKG	bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#CheckPKG(name, ...)$/;"	f
syntastic#c#CheckPhp	bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#CheckPhp()$/;"	f
syntastic#c#CheckPython	bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#CheckPython()$/;"	f
syntastic#c#CheckRuby	bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#CheckRuby()$/;"	f
syntastic#c#GetIncludeDirs	bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#GetIncludeDirs(filetype)$/;"	f
syntastic#c#GetNullDevice	bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#GetNullDevice()$/;"	f
syntastic#c#ReadConfig	bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#ReadConfig(file)$/;"	f
syntastic#c#SearchHeaders	bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#SearchHeaders()$/;"	f
syntastic#makeprg#build	bundle/syntastic/autoload/syntastic/makeprg.vim	/^function! syntastic#makeprg#build(opts)$/;"	f
syntastic#util#DevNull	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#DevNull()$/;"	f
syntastic#util#bufIsActive	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#bufIsActive(buffer)$/;"	f
syntastic#util#compareErrorItems	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#compareErrorItems(a, b)$/;"	f
syntastic#util#debug	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#debug(msg)$/;"	f
syntastic#util#deprecationWarn	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#deprecationWarn(msg)$/;"	f
syntastic#util#parseShebang	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#parseShebang()$/;"	f
syntastic#util#unique	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#unique(list)$/;"	f
syntastic#util#versionIsAtLeast	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#versionIsAtLeast(installed, required)$/;"	f
syntastic#util#wideMsg	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#wideMsg(msg)$/;"	f
syntastic_auto_jump	bundle/syntastic/plugin/syntastic.vim	/^    let syntastic_auto_jump=0$/;"	v
syntax	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:syntax()$/;"	f
syntax	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:syntax()$/;"	f
syntax	bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! s:syntax()$/;"	f
syntax	bundle/ctrlp.vim/autoload/ctrlp/line.vim	/^fu! s:syntax()$/;"	f
syntax	bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! s:syntax()$/;"	f
syntax	bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! s:syntax()$/;"	f
syntax	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:syntax()$/;"	f
sys	bundle/vim-multiuser/plugin/vim_multiuser_server.py	/^import sys, time$/;"	i
tagbar#CloseWindow	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#CloseWindow() abort$/;"	f
tagbar#OpenWindow	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#OpenWindow(...) abort$/;"	f
tagbar#RestoreSession	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#RestoreSession() abort$/;"	f
tagbar#SetFoldLevel	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#SetFoldLevel(level, force) abort$/;"	f
tagbar#StartDebug	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#StartDebug(...) abort$/;"	f
tagbar#StopDebug	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#StopDebug() abort$/;"	f
tagbar#ToggleWindow	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#ToggleWindow() abort$/;"	f
tagbar#autoopen	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#autoopen(...) abort$/;"	f
tagbar#currentfile	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#currentfile() abort$/;"	f
tagbar#currenttag	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#currenttag(fmt, default, ...) abort$/;"	f
tagbar#gettypeconfig	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#gettypeconfig(type) abort$/;"	f
tagbar#getusertypes	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#getusertypes() abort$/;"	f
tagbar#highlighttag	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#highlighttag(openfolds, force) abort$/;"	f
tagbar#inspect	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#inspect(var) abort$/;"	f
tagbar#toggle_pause	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#toggle_pause() abort$/;"	f
tail	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:tail()$/;"	f
tcomment#CollectFileTypes	bundle/tComment/autoload/tcomment.vim	/^function! tcomment#CollectFileTypes()$/;"	f
tcomment#Comment	bundle/tComment/autoload/tcomment.vim	/^function! tcomment#Comment(beg, end, ...)$/;"	f
tcomment#CommentAs	bundle/tComment/autoload/tcomment.vim	/^function! tcomment#CommentAs(beg, end, commentAnyway, filetype, ...)$/;"	f
tcomment#Complete	bundle/tComment/autoload/tcomment.vim	/^function! tcomment#Complete(ArgLead, CmdLine, CursorPos) "{{{3$/;"	f
tcomment#CompleteArgs	bundle/tComment/autoload/tcomment.vim	/^function! tcomment#CompleteArgs(ArgLead, CmdLine, CursorPos) "{{{3$/;"	f
tcomment#DefineType	bundle/tComment/autoload/tcomment.vim	/^function! tcomment#DefineType(name, commentdef)$/;"	f
tcomment#GetCommentDef	bundle/tComment/autoload/tcomment.vim	/^function! tcomment#GetCommentDef(name)$/;"	f
tcomment#GuessCommentType	bundle/tComment/autoload/tcomment.vim	/^function! tcomment#GuessCommentType(...) "{{{3$/;"	f
tcomment#Operator	bundle/tComment/autoload/tcomment.vim	/^function! tcomment#Operator(type, ...) "{{{3$/;"	f
tcomment#OperatorAnyway	bundle/tComment/autoload/tcomment.vim	/^function! tcomment#OperatorAnyway(type) "{{{3$/;"	f
tcomment#OperatorLine	bundle/tComment/autoload/tcomment.vim	/^function! tcomment#OperatorLine(type) "{{{3$/;"	f
tcomment#OperatorLineAnyway	bundle/tComment/autoload/tcomment.vim	/^function! tcomment#OperatorLineAnyway(type) "{{{3$/;"	f
tcomment#SetOption	bundle/tComment/autoload/tcomment.vim	/^function! tcomment#SetOption(name, arg) "{{{3$/;"	f
tcomment#TypeExists	bundle/tComment/autoload/tcomment.vim	/^function! tcomment#TypeExists(name)$/;"	f
tcount	bundle/delimitMate/test/autoclose_matchpairs.vim	/^    let tcount += 1$/;"	v
tcount	bundle/delimitMate/test/autoclose_matchpairs.vim	/^let tcount = 1$/;"	v
tcount	bundle/delimitMate/test/autoclose_quotes.vim	/^    let tcount += 1$/;"	v
tcount	bundle/delimitMate/test/autoclose_quotes.vim	/^let tcount = 1$/;"	v
tcount	bundle/delimitMate/test/expand_cr.vim	/^  let tcount += 1$/;"	v
tcount	bundle/delimitMate/test/expand_cr.vim	/^let tcount = 1$/;"	v
tcount	bundle/delimitMate/test/expand_space.vim	/^  let tcount += 1$/;"	v
tcount	bundle/delimitMate/test/expand_space.vim	/^let tcount = 1$/;"	v
template	bundle/php.vim/scripts/update-vim-syntax.php	/^    $template = str_ireplace($/;"	v
template	bundle/php.vim/scripts/update-vim-syntax.php	/^$template = file_get_contents('\/var\/php\/syntax\/php.vim');$/;"	v
template	bundle/php.vim/scripts/update-vim-syntax.php	/^$template = preg_replace($/;"	v
template	bundle/vim-css3-syntax/test/test.css	/^template,$/;"	s
test	bundle/emmet-vim/unittest.vim	/^function! s:test(...)$/;"	f
test_example_fail	bundle/vim-multiuser/plugin/tests/vim_multiuser_tests.py	/^    def test_example_fail(self):$/;"	m	class:VimMultiuserTests
testsnumber	bundle/delimitMate/test/autoclose_matchpairs.vim	/^let testsnumber = len(filter(copy(lines), 'v:val =~ ''^"'''))$/;"	v
testsnumber	bundle/delimitMate/test/autoclose_quotes.vim	/^let testsnumber = len(filter(copy(lines), 'v:val =~ ''^"'''))$/;"	v
testsnumber	bundle/delimitMate/test/expand_cr.vim	/^let testsnumber = len(filter(copy(lines), 'v:val =~ ''^=\\{80}$'''))$/;"	v
testsnumber	bundle/delimitMate/test/expand_space.vim	/^let testsnumber = len(filter(copy(lines), 'v:val =~ ''^=\\{80}$'''))$/;"	v
textdialog	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:textdialog(str)$/;"	f
threading	bundle/vim-multiuser/plugin/vim_multiuser.py	/^import threading$/;"	i
throw	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:throw(string) abort$/;"	f
time	bundle/vim-css3-syntax/test/test.css	/^time,$/;"	s
time	bundle/vim-multiuser/plugin/vim_multiuser_server.py	/^import sys, time$/;"	i
toggleIgnoreFilter	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:toggleIgnoreFilter()$/;"	f
toggleShowBookmarks	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:toggleShowBookmarks()$/;"	f
toggleShowFiles	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:toggleShowFiles()$/;"	f
toggleShowHidden	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:toggleShowHidden()$/;"	f
toggleZoom	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:toggleZoom()$/;"	f
toggle_off	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:toggle_off()$/;"	f
toggle_on	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:toggle_on()$/;"	f
track	bundle/vim-css3-syntax/test/test.css	/^track,$/;"	s
transformations.basename	bundle/vim-rails/autoload/rails.vim	/^function! s:transformations.basename(input, o) abort$/;"	f
transformations.blank	bundle/vim-rails/autoload/rails.vim	/^function! s:transformations.blank(input, o) abort$/;"	f
transformations.camelcase	bundle/vim-rails/autoload/rails.vim	/^function! s:transformations.camelcase(input, o) abort$/;"	f
transformations.capitalize	bundle/vim-rails/autoload/rails.vim	/^function! s:transformations.capitalize(input, o) abort$/;"	f
transformations.close	bundle/vim-rails/autoload/rails.vim	/^function! s:transformations.close(input, o) abort$/;"	f
transformations.colons	bundle/vim-rails/autoload/rails.vim	/^function! s:transformations.colons(input, o) abort$/;"	f
transformations.dirname	bundle/vim-rails/autoload/rails.vim	/^function! s:transformations.dirname(input, o) abort$/;"	f
transformations.dot	bundle/vim-rails/autoload/rails.vim	/^function! s:transformations.dot(input, o) abort$/;"	f
transformations.hyphenate	bundle/vim-rails/autoload/rails.vim	/^function! s:transformations.hyphenate(input, o) abort$/;"	f
transformations.open	bundle/vim-rails/autoload/rails.vim	/^function! s:transformations.open(input, o) abort$/;"	f
transformations.plural	bundle/vim-rails/autoload/rails.vim	/^function! s:transformations.plural(input, o) abort$/;"	f
transformations.singular	bundle/vim-rails/autoload/rails.vim	/^function! s:transformations.singular(input, o) abort$/;"	f
transformations.underscore	bundle/vim-rails/autoload/rails.vim	/^function! s:transformations.underscore(input, o) abort$/;"	f
transformations.uppercase	bundle/vim-rails/autoload/rails.vim	/^function! s:transformations.uppercase(input, o) abort$/;"	f
u 	bundle/vim-css-color/tests/example.css	/^u { background: rgba(144, 0, 0, .5) }$/;"	s
ul 	bundle/vim-css-color/tests/example.css	/^ul {$/;"	s
ul li 	bundle/vim-css-color/tests/example.css	/^ul li {$/;"	s
uname	bundle/syntastic/plugin/syntastic.vim	/^function! s:uname()$/;"	f
uniq	bundle/vim-rails/autoload/rails.vim	/^function! s:uniq(list) abort$/;"	f
unittest	bundle/vim-multiuser/plugin/tests/vim_multiuser_tests.py	/^import unittest$/;"	i
unmarksigns	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:unmarksigns()$/;"	f
upDirCurrentRootClosed	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:upDirCurrentRootClosed()$/;"	f
upDirCurrentRootOpen	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:upDirCurrentRootOpen()$/;"	f
update_cursor	bundle/vim-multiuser/plugin/vim_multiuser.py	/^def update_cursor(row, col):$/;"	f
url_encode	bundle/vim-rails/autoload/rails.vim	/^function! s:url_encode(str, ...) abort$/;"	f
urldecode	bundle/syntastic/syntax_checkers/html/validator_decode.awk	/^function urldecode (url) {$/;"	f
usage	bundle/syntastic/syntax_checkers/perl/efm_perl.pl	/^sub usage {$/;"	s
user_name	bundle/vim-multiuser/plugin/vim_multiuser.py	/^user_name = ""$/;"	v
usrign	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:usrign(item, type)$/;"	f
vacantdict	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:vacantdict(dict)$/;"	f
validfile	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:validfile(fname, ftype)$/;"	f
video	bundle/vim-css3-syntax/test/test.css	/^video,$/;"	s
viewEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:viewEdit(cmd, ...) abort$/;"	f
viewList	bundle/vim-rails/autoload/rails.vim	/^function! s:viewList(A,L,P)$/;"	f
vim	bundle/vim-multiuser/plugin/vim_multiuser.py	/^import vim$/;"	i
vim	bundle/vim-multiuser/plugin/vim_multiuser_server.py	/^import vim$/;"	i
vim_pasta	bundle/vim-pasta/plugin/pasta.vim	/^augroup vim_pasta$/;"	a
walker	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:walker(m, p, d)$/;"	f
warn	autoload/pathogen.vim	/^function! s:warn(msg)$/;"	f
warn	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:warn(str) abort$/;"	f
warn	bundle/vim-rails/autoload/rails.vim	/^function! s:warn(str)$/;"	f
warning	bundle/tagbar/autoload/tagbar.vim	/^function! s:warning(msg) abort$/;"	f
wbr	bundle/vim-css3-syntax/test/test.css	/^wbr,$/;"	s
winshell	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:winshell() abort$/;"	f
wrap_accent	bundle/vim-airline/autoload/airline/section.vim	/^function! s:wrap_accent(part, value)$/;"	f
writecache	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:writecache(cafile)$/;"	f
writecache	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:writecache(lines)$/;"	f
